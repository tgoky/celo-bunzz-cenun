{
	"id": "099efdbb41c21aba0f9bcefe0e44eb25",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Cenun.sol": {
				"content": "// SPDX-License-Identifier: MIXED\n\n// Sources flattened with hardhat v2.9.0 https://hardhat.org\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n\n// File @openzeppelin/contracts/utils/Context.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");\n        unchecked {\n            _approve(account, _msgSender(), currentAllowance - amount);\n        }\n        _burn(account, amount);\n    }\n}\n\n\n// File @openzeppelin/contracts/security/Pausable.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n\n\n// File @openzeppelin/contracts/access/IAccessControl.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n\n\n// File @openzeppelin/contracts/access/IAccessControlEnumerable.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n\n\n// File @openzeppelin/contracts/utils/Strings.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/IERC165.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/ERC165.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/AccessControl.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/structs/EnumerableSet.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastvalue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastvalue;\n                // Update the index for the moved value\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/AccessControlEnumerable.sol@v4.3.2\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {grantRole} to track enumerable memberships\n     */\n    function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\n        super.grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {revokeRole} to track enumerable memberships\n     */\n    function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\n        super.revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev Overload {renounceRole} to track enumerable memberships\n     */\n    function renounceRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\n        super.renounceRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev Overload {_setupRole} to track enumerable memberships\n     */\n    function _setupRole(bytes32 role, address account) internal virtual override {\n        super._setupRole(role, account);\n        _roleMembers[role].add(account);\n    }\n}\n\n\n// File contracts/TokenERC20.sol\n\n// License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\n\n\ncontract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {\n    \n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    \n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n  \n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"Must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n   \n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"Must have pauser role to pause\");\n        _pause();\n    }\n\n  \n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"Must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Cenun.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1196,
								"contract": "Cenun.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)1191_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)1191_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)1191_storage"
							},
							"t_struct(RoleData)1191_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 1188,
										"contract": "Cenun.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 1190,
										"contract": "Cenun.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Overload {grantRole} to track enumerable memberships"
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Overload {renounceRole} to track enumerable memberships"
							},
							"revokeRole(bytes32,address)": {
								"details": "Overload {revokeRole} to track enumerable memberships"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1196,
								"contract": "Cenun.sol:AccessControlEnumerable",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)1191_storage)"
							},
							{
								"astId": 2091,
								"contract": "Cenun.sol:AccessControlEnumerable",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1789_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1789_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1789_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)1191_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)1191_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1789_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1788,
										"contract": "Cenun.sol:AccessControlEnumerable",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1488_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)1191_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 1188,
										"contract": "Cenun.sol:AccessControlEnumerable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 1190,
										"contract": "Cenun.sol:AccessControlEnumerable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1488_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1483,
										"contract": "Cenun.sol:AccessControlEnumerable",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1487,
										"contract": "Cenun.sol:AccessControlEnumerable",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Cenun": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Overload {grantRole} to track enumerable memberships"
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Overload {renounceRole} to track enumerable memberships"
							},
							"revokeRole(bytes32,address)": {
								"details": "Overload {revokeRole} to track enumerable memberships"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cenun.sol\":50497:51649  contract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"Cenun.sol\":50731:50961  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Cenun.sol\":6320:6333  _name = name_ */\n  dup2\n  mload\n    /* \"Cenun.sol\":50791:50795  name */\n  dup3\n  swap1\n    /* \"Cenun.sol\":50797:50803  symbol */\n  dup3\n  swap1\n    /* \"Cenun.sol\":6320:6333  _name = name_ */\n  tag_8\n  swap1\n    /* \"Cenun.sol\":6320:6325  _name */\n  0x05\n  swap1\n    /* \"Cenun.sol\":6320:6333  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"Cenun.sol\":6343:6360  _symbol = symbol_ */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"Cenun.sol\":6343:6350  _symbol */\n  0x06\n  swap1\n    /* \"Cenun.sol\":6343:6360  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"Cenun.sol\":18311:18318  _paused */\n  0x07\n    /* \"Cenun.sol\":18311:18326  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"Cenun.sol\":50815:50859  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_13\n    /* \"Cenun.sol\":18321:18326  false */\n  0x00\n    /* \"Cenun.sol\":50846:50858  _msgSender() */\n  tag_14\n    /* \"Cenun.sol\":50846:50856  _msgSender */\n  tag_15\n    /* \"Cenun.sol\":50846:50858  _msgSender() */\n  jump\t// in\ntag_14:\n    /* \"Cenun.sol\":50815:50825  _setupRole */\n  tag_16\n    /* \"Cenun.sol\":50815:50859  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"Cenun.sol\":50870:50907  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_17\n    /* \"Cenun.sol\":50627:50651  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"Cenun.sol\":50894:50906  _msgSender() */\n  tag_14\n    /* \"Cenun.sol\":50894:50904  _msgSender */\n  tag_15\n    /* \"Cenun.sol\":50894:50906  _msgSender() */\n  jump\t// in\n    /* \"Cenun.sol\":50870:50907  _setupRole(MINTER_ROLE, _msgSender()) */\ntag_17:\n    /* \"Cenun.sol\":50917:50954  _setupRole(PAUSER_ROLE, _msgSender()) */\n  tag_19\n    /* \"Cenun.sol\":50695:50719  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"Cenun.sol\":50941:50953  _msgSender() */\n  tag_14\n    /* \"Cenun.sol\":50941:50951  _msgSender */\n  tag_15\n    /* \"Cenun.sol\":50941:50953  _msgSender() */\n  jump\t// in\n    /* \"Cenun.sol\":50917:50954  _setupRole(PAUSER_ROLE, _msgSender()) */\ntag_19:\n    /* \"Cenun.sol\":50731:50961  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  pop\n  pop\n    /* \"Cenun.sol\":50497:51649  contract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {... */\n  jump(tag_58)\n    /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"Cenun.sol\":4262:4272  msg.sender */\n  caller\n    /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Cenun.sol\":50235:50401  function _setupRole(bytes32 role, address account) internal virtual override {... */\ntag_16:\n    /* \"Cenun.sol\":50322:50353  super._setupRole(role, account) */\n  tag_24\n    /* \"Cenun.sol\":50339:50343  role */\n  dup3\n    /* \"Cenun.sol\":50345:50352  account */\n  dup3\n    /* \"Cenun.sol\":50322:50338  super._setupRole */\n  or(tag_0_147, shl(0x20, tag_25))\n    /* \"Cenun.sol\":50322:50353  super._setupRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Cenun.sol\":50363:50381  _roleMembers[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"Cenun.sol\":50363:50375  _roleMembers */\n  0x01\n    /* \"Cenun.sol\":50363:50381  _roleMembers[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Cenun.sol\":50363:50394  _roleMembers[role].add(account) */\n  tag_26\n  swap2\n    /* \"Cenun.sol\":50386:50393  account */\n  dup4\n  swap1\n    /* \"Cenun.sol\":50363:50385  _roleMembers[role].add */\n  tag_0_148\n  tag_27\n  dup3\n  shl\n  or\n    /* \"Cenun.sol\":50363:50394  _roleMembers[role].add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_26:\n  pop\n    /* \"Cenun.sol\":50235:50401  function _setupRole(bytes32 role, address account) internal virtual override {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Cenun.sol\":34414:34524  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_25:\n    /* \"Cenun.sol\":34492:34517  _grantRole(role, account) */\n  tag_29\n    /* \"Cenun.sol\":34503:34507  role */\n  dup3\n    /* \"Cenun.sol\":34509:34516  account */\n  dup3\n    /* \"Cenun.sol\":34492:34502  _grantRole */\n  tag_30\n    /* \"Cenun.sol\":34492:34517  _grantRole(role, account) */\n  jump\t// in\ntag_29:\n    /* \"Cenun.sol\":34414:34524  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Cenun.sol\":42974:43124  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_27:\n    /* \"Cenun.sol\":43044:43048  bool */\n  0x00\n    /* \"Cenun.sol\":43067:43117  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_32\n    /* \"Cenun.sol\":43072:43075  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Cenun.sol\":43092:43115  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Cenun.sol\":43067:43071  _add */\n  tag_33\n    /* \"Cenun.sol\":43067:43117  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_32:\n    /* \"Cenun.sol\":43060:43117  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Cenun.sol\":42974:43124  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_31:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Cenun.sol\":34902:35126  function _grantRole(bytes32 role, address account) private {... */\ntag_30:\n    /* \"Cenun.sol\":34976:34998  hasRole(role, account) */\n  tag_35\n    /* \"Cenun.sol\":34984:34988  role */\n  dup3\n    /* \"Cenun.sol\":34990:34997  account */\n  dup3\n    /* \"Cenun.sol\":34976:34983  hasRole */\n  tag_36\n    /* \"Cenun.sol\":34976:34998  hasRole(role, account) */\n  jump\t// in\ntag_35:\n    /* \"Cenun.sol\":34971:35120  if (!hasRole(role, account)) {... */\n  tag_29\n  jumpi\n    /* \"Cenun.sol\":35014:35020  _roles */\n  0x00\n    /* \"Cenun.sol\":35014:35026  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Cenun.sol\":35014:35043  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"Cenun.sol\":35014:35050  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Cenun.sol\":35046:35050  true */\n  0x01\n    /* \"Cenun.sol\":35014:35050  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Cenun.sol\":35096:35108  _msgSender() */\n  tag_38\n    /* \"Cenun.sol\":35096:35106  _msgSender */\n  tag_15\n    /* \"Cenun.sol\":35096:35108  _msgSender() */\n  jump\t// in\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"Cenun.sol\":35087:35094  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"Cenun.sol\":35081:35085  role */\n  dup4\n    /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"Cenun.sol\":34902:35126  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Cenun.sol\":37059:37463  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_33:\n    /* \"Cenun.sol\":37122:37126  bool */\n  0x00\n    /* \"Cenun.sol\":37143:37164  _contains(set, value) */\n  tag_40\n    /* \"Cenun.sol\":37153:37156  set */\n  dup4\n    /* \"Cenun.sol\":37158:37163  value */\n  dup4\n    /* \"Cenun.sol\":37143:37152  _contains */\n  tag_41\n    /* \"Cenun.sol\":37143:37164  _contains(set, value) */\n  jump\t// in\ntag_40:\n    /* \"Cenun.sol\":37138:37457  if (!_contains(set, value)) {... */\n  tag_42\n  jumpi\n  pop\n    /* \"Cenun.sol\":37180:37203  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Cenun.sol\":37180:37191  set._values */\n  0x00\n    /* \"Cenun.sol\":37180:37203  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Cenun.sol\":37360:37378  set._values.length */\n  dup5\n  sload\n    /* \"Cenun.sol\":37338:37357  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Cenun.sol\":37338:37350  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Cenun.sol\":37338:37357  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Cenun.sol\":37338:37378  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Cenun.sol\":37392:37403  return true */\n  jump(tag_31)\n    /* \"Cenun.sol\":37138:37457  if (!_contains(set, value)) {... */\ntag_42:\n  pop\n    /* \"Cenun.sol\":37441:37446  false */\n  0x00\n    /* \"Cenun.sol\":37434:37446  return false */\n  jump(tag_31)\n    /* \"Cenun.sol\":31164:31301  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\ntag_36:\n    /* \"Cenun.sol\":31242:31246  bool */\n  0x00\n    /* \"Cenun.sol\":31265:31277  _roles[role] */\n  swap2\n  dup3\n  mstore\n  0x20\n  dup3\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Cenun.sol\":31265:31294  _roles[role].members[account] */\n  swap4\n  swap1\n  swap4\n  and\n  dup5\n  mstore\n  swap2\n  swap1\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"Cenun.sol\":31164:31301  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n  jump\t// out\n    /* \"Cenun.sol\":39100:39227  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_41:\n    /* \"Cenun.sol\":39173:39177  bool */\n  0x00\n    /* \"Cenun.sol\":39196:39215  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"Cenun.sol\":39196:39208  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"Cenun.sol\":39196:39215  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"Cenun.sol\":39196:39220  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"Cenun.sol\":39100:39227  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  jump\t// out\n    /* \"Cenun.sol\":50497:51649  contract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_47\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_50\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_53)\ntag_50:\n  dup3\n  0x1f\n  lt\n  tag_51\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_53)\ntag_51:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_53\n  jumpi\n  swap2\n  dup3\n  add\ntag_52:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_53\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_52)\ntag_53:\n  pop\n  tag_54\n  swap3\n  swap2\n  pop\n  tag_55\n  jump\t// in\ntag_54:\n  pop\n  swap1\n  jump\t// out\ntag_55:\ntag_56:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_54\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_56)\n    /* \"#utility.yul\":14:895   */\ntag_59:\n  0x00\n    /* \"#utility.yul\":123:126   */\n  dup3\n    /* \"#utility.yul\":116:120   */\n  0x1f\n    /* \"#utility.yul\":108:114   */\n  dup4\n    /* \"#utility.yul\":104:121   */\n  add\n    /* \"#utility.yul\":100:127   */\n  slt\n    /* \"#utility.yul\":90:92   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":145:150   */\n  dup1\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":131:151   */\n  revert\n    /* \"#utility.yul\":90:92   */\ntag_61:\n    /* \"#utility.yul\":172:185   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":234:244   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":231:233   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":247:265   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":296:298   */\n  0x40\n    /* \"#utility.yul\":290:299   */\n  mload\n    /* \"#utility.yul\":318:322   */\n  0x20\n    /* \"#utility.yul\":388:390   */\n  0x1f\n    /* \"#utility.yul\":369:382   */\n  dup5\n  add\n  not(0x1f)\n    /* \"#utility.yul\":365:392   */\n  and\n    /* \"#utility.yul\":353:393   */\n  dup3\n  add\n    /* \"#utility.yul\":349:398   */\n  dup2\n  add\n    /* \"#utility.yul\":413:431   */\n  dup4\n  dup2\n  gt\n    /* \"#utility.yul\":433:455   */\n  dup4\n  dup3\n  lt\n    /* \"#utility.yul\":410:456   */\n  or\n    /* \"#utility.yul\":407:409   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":459:477   */\n  tag_66\n  tag_64\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":495:497   */\n  0x40\n    /* \"#utility.yul\":488:510   */\n  mstore\n    /* \"#utility.yul\":519:537   */\n  dup4\n  dup3\n  mstore\n    /* \"#utility.yul\":556:571   */\n  dup6\n  dup5\n  add\n    /* \"#utility.yul\":552:576   */\n  dup2\n  add\n    /* \"#utility.yul\":549:582   */\n  dup8\n  lt\n    /* \"#utility.yul\":546:548   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":599:604   */\n  dup5\n    /* \"#utility.yul\":592:597   */\n  dup6\n    /* \"#utility.yul\":585:605   */\n  revert\n    /* \"#utility.yul\":546:548   */\ntag_67:\n    /* \"#utility.yul\":625:630   */\n  dup5\n    /* \"#utility.yul\":616:630   */\n  swap3\n  pop\n    /* \"#utility.yul\":639:772   */\ntag_68:\n    /* \"#utility.yul\":653:655   */\n  dup4\n    /* \"#utility.yul\":650:651   */\n  dup4\n    /* \"#utility.yul\":647:656   */\n  lt\n    /* \"#utility.yul\":639:772   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":741:755   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":737:760   */\n  dup2\n  add\n    /* \"#utility.yul\":731:761   */\n  mload\n    /* \"#utility.yul\":710:724   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":706:729   */\n  dup3\n  add\n    /* \"#utility.yul\":699:762   */\n  mstore\n    /* \"#utility.yul\":664:674   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"#utility.yul\":639:772   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":790:792   */\n  dup4\n    /* \"#utility.yul\":787:788   */\n  dup4\n    /* \"#utility.yul\":784:793   */\n  gt\n    /* \"#utility.yul\":781:783   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":849:854   */\n  dup5\n    /* \"#utility.yul\":844:846   */\n  dup2\n    /* \"#utility.yul\":839:841   */\n  dup6\n    /* \"#utility.yul\":831:837   */\n  dup5\n    /* \"#utility.yul\":827:842   */\n  add\n    /* \"#utility.yul\":823:847   */\n  add\n    /* \"#utility.yul\":816:855   */\n  mstore\n    /* \"#utility.yul\":781:783   */\ntag_71:\n  pop\n    /* \"#utility.yul\":883:889   */\n  swap6\n    /* \"#utility.yul\":80:895   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":900:1496   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":1060:1062   */\n  0x40\n    /* \"#utility.yul\":1048:1057   */\n  dup4\n    /* \"#utility.yul\":1039:1046   */\n  dup6\n    /* \"#utility.yul\":1035:1058   */\n  sub\n    /* \"#utility.yul\":1031:1063   */\n  slt\n    /* \"#utility.yul\":1028:1030   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1081:1087   */\n  dup2\n    /* \"#utility.yul\":1073:1079   */\n  dup3\n    /* \"#utility.yul\":1066:1088   */\n  revert\n    /* \"#utility.yul\":1028:1030   */\ntag_73:\n    /* \"#utility.yul\":1113:1129   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1178:1192   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1175:1177   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1210:1216   */\n  dup4\n    /* \"#utility.yul\":1202:1208   */\n  dup5\n    /* \"#utility.yul\":1195:1217   */\n  revert\n    /* \"#utility.yul\":1175:1177   */\ntag_74:\n    /* \"#utility.yul\":1238:1301   */\n  tag_75\n    /* \"#utility.yul\":1293:1300   */\n  dup7\n    /* \"#utility.yul\":1284:1290   */\n  dup4\n    /* \"#utility.yul\":1273:1282   */\n  dup8\n    /* \"#utility.yul\":1269:1291   */\n  add\n    /* \"#utility.yul\":1238:1301   */\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1228:1301   */\n  swap4\n  pop\n    /* \"#utility.yul\":1347:1349   */\n  0x20\n    /* \"#utility.yul\":1336:1345   */\n  dup6\n    /* \"#utility.yul\":1332:1350   */\n  add\n    /* \"#utility.yul\":1326:1351   */\n  mload\n    /* \"#utility.yul\":1310:1351   */\n  swap2\n  pop\n    /* \"#utility.yul\":1376:1378   */\n  dup1\n    /* \"#utility.yul\":1366:1374   */\n  dup3\n    /* \"#utility.yul\":1363:1379   */\n  gt\n    /* \"#utility.yul\":1360:1362   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1389:1395   */\n  dup4\n    /* \"#utility.yul\":1382:1404   */\n  revert\n    /* \"#utility.yul\":1360:1362   */\ntag_76:\n  pop\n    /* \"#utility.yul\":1425:1490   */\n  tag_77\n    /* \"#utility.yul\":1482:1489   */\n  dup6\n    /* \"#utility.yul\":1471:1479   */\n  dup3\n    /* \"#utility.yul\":1460:1469   */\n  dup7\n    /* \"#utility.yul\":1456:1480   */\n  add\n    /* \"#utility.yul\":1425:1490   */\n  tag_59\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1415:1490   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1018:1496   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1501:1881   */\ntag_48:\n    /* \"#utility.yul\":1586:1587   */\n  0x02\n    /* \"#utility.yul\":1576:1588   */\n  dup2\n  div\n    /* \"#utility.yul\":1633:1634   */\n  0x01\n    /* \"#utility.yul\":1623:1635   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1644:1646   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1698:1702   */\n  0x7f\n    /* \"#utility.yul\":1690:1696   */\n  dup3\n    /* \"#utility.yul\":1686:1703   */\n  and\n    /* \"#utility.yul\":1676:1703   */\n  swap2\n  pop\n    /* \"#utility.yul\":1644:1646   */\ntag_79:\n    /* \"#utility.yul\":1751:1753   */\n  0x20\n    /* \"#utility.yul\":1743:1749   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  lt\n    /* \"#utility.yul\":1720:1738   */\n  dup2\n    /* \"#utility.yul\":1717:1755   */\n  eq\n    /* \"#utility.yul\":1714:1716   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1797:1807   */\n  0x4e487b71\n    /* \"#utility.yul\":1792:1795   */\n  0xe0\n    /* \"#utility.yul\":1788:1808   */\n  shl\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1809   */\n  mstore\n    /* \"#utility.yul\":1832:1836   */\n  0x22\n    /* \"#utility.yul\":1829:1830   */\n  0x04\n    /* \"#utility.yul\":1822:1837   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1714:1716   */\ntag_80:\n  pop\n    /* \"#utility.yul\":1556:1881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1886:2013   */\ntag_64:\n    /* \"#utility.yul\":1947:1957   */\n  0x4e487b71\n    /* \"#utility.yul\":1942:1945   */\n  0xe0\n    /* \"#utility.yul\":1938:1958   */\n  shl\n    /* \"#utility.yul\":1935:1936   */\n  0x00\n    /* \"#utility.yul\":1928:1959   */\n  mstore\n    /* \"#utility.yul\":1978:1982   */\n  0x41\n    /* \"#utility.yul\":1975:1976   */\n  0x04\n    /* \"#utility.yul\":1968:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x24\n    /* \"#utility.yul\":1999:2000   */\n  0x00\n    /* \"#utility.yul\":1992:2007   */\n  revert\n    /* \"#utility.yul\":1918:2013   */\ntag_58:\n    /* \"Cenun.sol\":50497:51649  contract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cenun.sol\":50497:51649  contract Cenun is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x9010d07c\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Cenun.sol\":48049:48261  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"Cenun.sol\":32247:32368  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_8:\n      tag_53\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"Cenun.sol\":49376:49569  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_9:\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"Cenun.sol\":49945:50147  function renounceRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_11:\n      tag_68\n      tag_77\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"Cenun.sol\":10035:10247  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_38\n      tag_80\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"Cenun.sol\":51310:51460  function unpause() public virtual {... */\n    tag_13:\n      tag_68\n      tag_84\n      jump\t// in\n        /* \"Cenun.sol\":50970:51147  function mint(address to, uint256 amount) public virtual {... */\n    tag_14:\n      tag_68\n      tag_86\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"Cenun.sol\":16601:16690  function burn(uint256 amount) public virtual {... */\n    tag_15:\n      tag_68\n      tag_89\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"Cenun.sol\":18428:18512  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_38\n      tag_93\n      jump\t// in\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_53\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"Cenun.sol\":16996:17357  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_18:\n      tag_68\n      tag_101\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"Cenun.sol\":51157:51301  function pause() public virtual {... */\n    tag_19:\n      tag_68\n      tag_104\n      jump\t// in\n        /* \"Cenun.sol\":48846:48989  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n    tag_20:\n      tag_105\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n        /* \"Cenun.sol\":31164:31301  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_21:\n      tag_38\n      tag_112\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"Cenun.sol\":6643:6745  function symbol() public view virtual override returns (string memory) {... */\n    tag_22:\n      tag_44\n      tag_116\n      jump\t// in\n        /* \"Cenun.sol\":30282:30331  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      tag_53\n      tag_119\n      jump\t// in\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_38\n      tag_122\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"Cenun.sol\":8012:8184  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n      tag_38\n      tag_126\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"Cenun.sol\":49157:49289  function getRoleMemberCount(bytes32 role) public view override returns (uint256) {... */\n    tag_26:\n      tag_53\n      tag_130\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"Cenun.sol\":50589:50651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_27:\n      tag_53\n      tag_134\n      jump\t// in\n        /* \"Cenun.sol\":49657:49855  function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_28:\n      tag_68\n      tag_137\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_29:\n      tag_53\n      tag_140\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n        /* \"Cenun.sol\":50657:50719  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_30:\n      tag_53\n      tag_145\n      jump\t// in\n        /* \"Cenun.sol\":48049:48261  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_41:\n        /* \"Cenun.sol\":48134:48138  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Cenun.sol\":48157:48214  interfaceId == type(IAccessControlEnumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5a05180f)\n      eq\n      dup1\n        /* \"Cenun.sol\":48157:48254  interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_151\n      jumpi\n      pop\n        /* \"Cenun.sol\":48218:48254  super.supportsInterface(interfaceId) */\n      tag_151\n        /* \"Cenun.sol\":48242:48253  interfaceId */\n      dup3\n        /* \"Cenun.sol\":48218:48241  super.supportsInterface */\n      tag_152\n        /* \"Cenun.sol\":48218:48254  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_151:\n        /* \"Cenun.sol\":48150:48254  return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"Cenun.sol\":48049:48261  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_149:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n    tag_45:\n        /* \"Cenun.sol\":6486:6499  string memory */\n      0x60\n        /* \"Cenun.sol\":6518:6523  _name */\n      0x05\n        /* \"Cenun.sol\":6511:6523  return _name */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_155\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"Cenun.sol\":8612:8616  bool */\n      0x00\n        /* \"Cenun.sol\":8628:8667  _approve(_msgSender(), spender, amount) */\n      tag_161\n        /* \"Cenun.sol\":8637:8649  _msgSender() */\n      tag_162\n        /* \"Cenun.sol\":8637:8647  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":8637:8649  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"Cenun.sol\":8651:8658  spender */\n      dup5\n        /* \"Cenun.sol\":8660:8666  amount */\n      dup5\n        /* \"Cenun.sol\":8628:8636  _approve */\n      tag_164\n        /* \"Cenun.sol\":8628:8667  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_161:\n      pop\n        /* \"Cenun.sol\":8684:8688  true */\n      0x01\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_160:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"Cenun.sol\":7607:7619  _totalSupply */\n      sload(0x04)\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n    tag_60:\n        /* \"Cenun.sol\":9298:9302  bool */\n      0x00\n        /* \"Cenun.sol\":9314:9350  _transfer(sender, recipient, amount) */\n      tag_167\n        /* \"Cenun.sol\":9324:9330  sender */\n      dup5\n        /* \"Cenun.sol\":9332:9341  recipient */\n      dup5\n        /* \"Cenun.sol\":9343:9349  amount */\n      dup5\n        /* \"Cenun.sol\":9314:9323  _transfer */\n      tag_168\n        /* \"Cenun.sol\":9314:9350  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      dup5\n      and\n        /* \"Cenun.sol\":9361:9385  uint256 currentAllowance */\n      0x00\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":9388:9399  _allowances */\n      0x03\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":9361:9385  uint256 currentAllowance */\n      dup2\n        /* \"Cenun.sol\":9408:9420  _msgSender() */\n      tag_169\n        /* \"Cenun.sol\":9408:9418  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":9408:9420  _msgSender() */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":9388:9421  _allowances[sender][_msgSender()] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Cenun.sol\":9361:9421  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"Cenun.sol\":9459:9465  amount */\n      dup3\n        /* \"Cenun.sol\":9439:9455  currentAllowance */\n      dup2\n        /* \"Cenun.sol\":9439:9465  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"Cenun.sol\":9431:9510  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"Cenun.sol\":9544:9601  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_173\n        /* \"Cenun.sol\":9553:9559  sender */\n      dup6\n        /* \"Cenun.sol\":9561:9573  _msgSender() */\n      tag_174\n        /* \"Cenun.sol\":9561:9571  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":9561:9573  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"Cenun.sol\":9594:9600  amount */\n      dup6\n        /* \"Cenun.sol\":9575:9591  currentAllowance */\n      dup5\n        /* \"Cenun.sol\":9575:9600  currentAllowance - amount */\n      sub\n        /* \"Cenun.sol\":9544:9552  _approve */\n      tag_164\n        /* \"Cenun.sol\":9544:9601  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_173:\n      pop\n        /* \"Cenun.sol\":9629:9633  true */\n      0x01\n      swap5\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":32247:32368  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_65:\n        /* \"Cenun.sol\":32313:32320  bytes32 */\n      0x00\n        /* \"Cenun.sol\":32339:32351  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Cenun.sol\":32339:32361  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"Cenun.sol\":32247:32368  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      jump\t// out\n        /* \"Cenun.sol\":49376:49569  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_71:\n        /* \"Cenun.sol\":49491:49521  super.grantRole(role, account) */\n      tag_177\n        /* \"Cenun.sol\":49507:49511  role */\n      dup3\n        /* \"Cenun.sol\":49513:49520  account */\n      dup3\n        /* \"Cenun.sol\":49491:49506  super.grantRole */\n      tag_178\n        /* \"Cenun.sol\":49491:49521  super.grantRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"Cenun.sol\":49531:49549  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Cenun.sol\":49531:49543  _roleMembers */\n      0x01\n        /* \"Cenun.sol\":49531:49549  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Cenun.sol\":49531:49562  _roleMembers[role].add(account) */\n      tag_179\n      swap1\n        /* \"Cenun.sol\":49554:49561  account */\n      dup3\n        /* \"Cenun.sol\":49531:49553  _roleMembers[role].add */\n      tag_148\n        /* \"Cenun.sol\":49531:49562  _roleMembers[role].add(account) */\n      jump\t// in\n    tag_179:\n      pop\n        /* \"Cenun.sol\":49376:49569  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n    tag_73:\n        /* \"Cenun.sol\":7451:7453  18 */\n      0x12\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":49945:50147  function renounceRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_78:\n        /* \"Cenun.sol\":50063:50096  super.renounceRole(role, account) */\n      tag_182\n        /* \"Cenun.sol\":50082:50086  role */\n      dup3\n        /* \"Cenun.sol\":50088:50095  account */\n      dup3\n        /* \"Cenun.sol\":50063:50081  super.renounceRole */\n      tag_183\n        /* \"Cenun.sol\":50063:50096  super.renounceRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"Cenun.sol\":50106:50124  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Cenun.sol\":50106:50118  _roleMembers */\n      0x01\n        /* \"Cenun.sol\":50106:50124  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Cenun.sol\":50106:50140  _roleMembers[role].remove(account) */\n      tag_179\n      swap1\n        /* \"Cenun.sol\":50132:50139  account */\n      dup3\n        /* \"Cenun.sol\":50106:50131  _roleMembers[role].remove */\n      tag_185\n        /* \"Cenun.sol\":50106:50140  _roleMembers[role].remove(account) */\n      jump\t// in\n        /* \"Cenun.sol\":10035:10247  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_81:\n        /* \"Cenun.sol\":10123:10127  bool */\n      0x00\n        /* \"Cenun.sol\":10139:10219  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_161\n        /* \"Cenun.sol\":10148:10160  _msgSender() */\n      tag_188\n        /* \"Cenun.sol\":10148:10158  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":10148:10160  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"Cenun.sol\":10162:10169  spender */\n      dup5\n        /* \"Cenun.sol\":10208:10218  addedValue */\n      dup5\n        /* \"Cenun.sol\":10171:10182  _allowances */\n      0x03\n        /* \"Cenun.sol\":10171:10196  _allowances[_msgSender()] */\n      0x00\n        /* \"Cenun.sol\":10183:10195  _msgSender() */\n      tag_189\n        /* \"Cenun.sol\":10183:10193  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":10183:10195  _msgSender() */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":10171:10196  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":10171:10205  _allowances[_msgSender()][spender] */\n      swap2\n      dup12\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":10171:10218  _allowances[_msgSender()][spender] + addedValue */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"Cenun.sol\":10139:10147  _approve */\n      tag_164\n        /* \"Cenun.sol\":10139:10219  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"Cenun.sol\":51310:51460  function unpause() public virtual {... */\n    tag_84:\n        /* \"Cenun.sol\":51362:51396  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_193\n        /* \"Cenun.sol\":50695:50719  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"Cenun.sol\":51383:51395  _msgSender() */\n      tag_112\n        /* \"Cenun.sol\":51383:51393  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":51383:51395  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":51362:51396  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_193:\n        /* \"Cenun.sol\":51354:51433  require(hasRole(PAUSER_ROLE, _msgSender()), \"Must have pauser role to unpause\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_197\n      jump\t// in\n    tag_195:\n        /* \"Cenun.sol\":51443:51453  _unpause() */\n      tag_198\n        /* \"Cenun.sol\":51443:51451  _unpause */\n      tag_199\n        /* \"Cenun.sol\":51443:51453  _unpause() */\n      jump\t// in\n    tag_198:\n        /* \"Cenun.sol\":51310:51460  function unpause() public virtual {... */\n      jump\t// out\n        /* \"Cenun.sol\":50970:51147  function mint(address to, uint256 amount) public virtual {... */\n    tag_87:\n        /* \"Cenun.sol\":51045:51079  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_201\n        /* \"Cenun.sol\":50627:50651  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"Cenun.sol\":51066:51078  _msgSender() */\n      tag_112\n        /* \"Cenun.sol\":51066:51076  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":51066:51078  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":51045:51079  hasRole(MINTER_ROLE, _msgSender()) */\n    tag_201:\n        /* \"Cenun.sol\":51037:51113  require(hasRole(MINTER_ROLE, _msgSender()), \"Must have minter role to mint\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_205\n      jump\t// in\n    tag_203:\n        /* \"Cenun.sol\":51123:51140  _mint(to, amount) */\n      tag_206\n        /* \"Cenun.sol\":51129:51131  to */\n      dup3\n        /* \"Cenun.sol\":51133:51139  amount */\n      dup3\n        /* \"Cenun.sol\":51123:51128  _mint */\n      tag_207\n        /* \"Cenun.sol\":51123:51140  _mint(to, amount) */\n      jump\t// in\n    tag_206:\n        /* \"Cenun.sol\":50970:51147  function mint(address to, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":16601:16690  function burn(uint256 amount) public virtual {... */\n    tag_91:\n        /* \"Cenun.sol\":16656:16683  _burn(_msgSender(), amount) */\n      tag_209\n        /* \"Cenun.sol\":16662:16674  _msgSender() */\n      tag_210\n        /* \"Cenun.sol\":16662:16672  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":16662:16674  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"Cenun.sol\":16676:16682  amount */\n      dup3\n        /* \"Cenun.sol\":16656:16661  _burn */\n      tag_211\n        /* \"Cenun.sol\":16656:16683  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_209:\n        /* \"Cenun.sol\":16601:16690  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":18428:18512  function paused() public view virtual returns (bool) {... */\n    tag_93:\n        /* \"Cenun.sol\":18498:18505  _paused */\n      and(0xff, sload(0x07))\n        /* \"Cenun.sol\":18428:18512  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":7784:7802  _balances[account] */\n      and\n        /* \"Cenun.sol\":7758:7765  uint256 */\n      0x00\n        /* \"Cenun.sol\":7784:7802  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":7784:7793  _balances */\n      0x02\n        /* \"Cenun.sol\":7784:7802  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Cenun.sol\":16996:17357  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_102:\n        /* \"Cenun.sol\":17072:17096  uint256 currentAllowance */\n      0x00\n        /* \"Cenun.sol\":17099:17131  allowance(account, _msgSender()) */\n      tag_215\n        /* \"Cenun.sol\":17109:17116  account */\n      dup4\n        /* \"Cenun.sol\":17118:17130  _msgSender() */\n      tag_140\n        /* \"Cenun.sol\":17118:17128  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":17118:17130  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":17099:17131  allowance(account, _msgSender()) */\n    tag_215:\n        /* \"Cenun.sol\":17072:17131  uint256 currentAllowance = allowance(account, _msgSender()) */\n      swap1\n      pop\n        /* \"Cenun.sol\":17169:17175  amount */\n      dup2\n        /* \"Cenun.sol\":17149:17165  currentAllowance */\n      dup2\n        /* \"Cenun.sol\":17149:17175  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"Cenun.sol\":17141:17216  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_219\n      jump\t// in\n    tag_217:\n        /* \"Cenun.sol\":17250:17308  _approve(account, _msgSender(), currentAllowance - amount) */\n      tag_220\n        /* \"Cenun.sol\":17259:17266  account */\n      dup4\n        /* \"Cenun.sol\":17268:17280  _msgSender() */\n      tag_221\n        /* \"Cenun.sol\":17268:17278  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":17268:17280  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"Cenun.sol\":17301:17307  amount */\n      dup5\n        /* \"Cenun.sol\":17282:17298  currentAllowance */\n      dup5\n        /* \"Cenun.sol\":17282:17307  currentAllowance - amount */\n      sub\n        /* \"Cenun.sol\":17250:17258  _approve */\n      tag_164\n        /* \"Cenun.sol\":17250:17308  _approve(account, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_220:\n        /* \"Cenun.sol\":17328:17350  _burn(account, amount) */\n      tag_179\n        /* \"Cenun.sol\":17334:17341  account */\n      dup4\n        /* \"Cenun.sol\":17343:17349  amount */\n      dup4\n        /* \"Cenun.sol\":17328:17333  _burn */\n      tag_211\n        /* \"Cenun.sol\":17328:17350  _burn(account, amount) */\n      jump\t// in\n        /* \"Cenun.sol\":51157:51301  function pause() public virtual {... */\n    tag_104:\n        /* \"Cenun.sol\":51207:51241  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_224\n        /* \"Cenun.sol\":50695:50719  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"Cenun.sol\":51228:51240  _msgSender() */\n      tag_112\n        /* \"Cenun.sol\":51228:51238  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":51228:51240  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":51207:51241  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_224:\n        /* \"Cenun.sol\":51199:51276  require(hasRole(PAUSER_ROLE, _msgSender()), \"Must have pauser role to pause\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_228\n      jump\t// in\n    tag_226:\n        /* \"Cenun.sol\":51286:51294  _pause() */\n      tag_198\n        /* \"Cenun.sol\":51286:51292  _pause */\n      tag_230\n        /* \"Cenun.sol\":51286:51294  _pause() */\n      jump\t// in\n        /* \"Cenun.sol\":48846:48989  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n    tag_108:\n        /* \"Cenun.sol\":48928:48935  address */\n      0x00\n        /* \"Cenun.sol\":48954:48972  _roleMembers[role] */\n      dup3\n      dup2\n      mstore\n        /* \"Cenun.sol\":48954:48966  _roleMembers */\n      0x01\n        /* \"Cenun.sol\":48954:48972  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":48954:48982  _roleMembers[role].at(index) */\n      tag_232\n      swap1\n        /* \"Cenun.sol\":48976:48981  index */\n      dup4\n        /* \"Cenun.sol\":48954:48975  _roleMembers[role].at */\n      tag_233\n        /* \"Cenun.sol\":48954:48982  _roleMembers[role].at(index) */\n      jump\t// in\n    tag_232:\n        /* \"Cenun.sol\":48947:48982  return _roleMembers[role].at(index) */\n      swap4\n        /* \"Cenun.sol\":48846:48989  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":31164:31301  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_113:\n        /* \"Cenun.sol\":31242:31246  bool */\n      0x00\n        /* \"Cenun.sol\":31265:31277  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":31265:31294  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Cenun.sol\":31164:31301  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      jump\t// out\n        /* \"Cenun.sol\":6643:6745  function symbol() public view virtual override returns (string memory) {... */\n    tag_116:\n        /* \"Cenun.sol\":6699:6712  string memory */\n      0x60\n        /* \"Cenun.sol\":6731:6738  _symbol */\n      0x06\n        /* \"Cenun.sol\":6724:6738  return _symbol */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n        /* \"Cenun.sol\":30282:30331  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_119:\n        /* \"Cenun.sol\":30327:30331  0x00 */\n      0x00\n        /* \"Cenun.sol\":30282:30331  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_123:\n        /* \"Cenun.sol\":10827:10831  bool */\n      0x00\n        /* \"Cenun.sol\":10843:10867  uint256 currentAllowance */\n      dup1\n        /* \"Cenun.sol\":10870:10881  _allowances */\n      0x03\n        /* \"Cenun.sol\":10870:10895  _allowances[_msgSender()] */\n      0x00\n        /* \"Cenun.sol\":10882:10894  _msgSender() */\n      tag_242\n        /* \"Cenun.sol\":10882:10892  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":10882:10894  _msgSender() */\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":10870:10895  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":10870:10904  _allowances[_msgSender()][spender] */\n      swap2\n      dup9\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"Cenun.sol\":10922:10957  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"Cenun.sol\":10914:10999  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_245\n      jump\t// in\n    tag_243:\n        /* \"Cenun.sol\":11033:11100  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_246\n        /* \"Cenun.sol\":11042:11054  _msgSender() */\n      tag_247\n        /* \"Cenun.sol\":11042:11052  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":11042:11054  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"Cenun.sol\":11056:11063  spender */\n      dup6\n        /* \"Cenun.sol\":11084:11099  subtractedValue */\n      dup6\n        /* \"Cenun.sol\":11065:11081  currentAllowance */\n      dup5\n        /* \"Cenun.sol\":11065:11099  currentAllowance - subtractedValue */\n      sub\n        /* \"Cenun.sol\":11033:11041  _approve */\n      tag_164\n        /* \"Cenun.sol\":11033:11100  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_246:\n      pop\n        /* \"Cenun.sol\":11128:11132  true */\n      0x01\n      swap4\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":8012:8184  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_127:\n        /* \"Cenun.sol\":8098:8102  bool */\n      0x00\n        /* \"Cenun.sol\":8114:8156  _transfer(_msgSender(), recipient, amount) */\n      tag_161\n        /* \"Cenun.sol\":8124:8136  _msgSender() */\n      tag_250\n        /* \"Cenun.sol\":8124:8134  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":8124:8136  _msgSender() */\n      jump\t// in\n    tag_250:\n        /* \"Cenun.sol\":8138:8147  recipient */\n      dup5\n        /* \"Cenun.sol\":8149:8155  amount */\n      dup5\n        /* \"Cenun.sol\":8114:8123  _transfer */\n      tag_168\n        /* \"Cenun.sol\":8114:8156  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Cenun.sol\":49157:49289  function getRoleMemberCount(bytes32 role) public view override returns (uint256) {... */\n    tag_131:\n        /* \"Cenun.sol\":49229:49236  uint256 */\n      0x00\n        /* \"Cenun.sol\":49255:49273  _roleMembers[role] */\n      dup2\n      dup2\n      mstore\n        /* \"Cenun.sol\":49255:49267  _roleMembers */\n      0x01\n        /* \"Cenun.sol\":49255:49273  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":49255:49282  _roleMembers[role].length() */\n      tag_151\n      swap1\n        /* \"Cenun.sol\":49255:49280  _roleMembers[role].length */\n      tag_253\n        /* \"Cenun.sol\":49255:49282  _roleMembers[role].length() */\n      jump\t// in\n        /* \"Cenun.sol\":50589:50651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_134:\n        /* \"Cenun.sol\":50627:50651  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"Cenun.sol\":50589:50651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"Cenun.sol\":49657:49855  function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_138:\n        /* \"Cenun.sol\":49773:49804  super.revokeRole(role, account) */\n      tag_182\n        /* \"Cenun.sol\":49790:49794  role */\n      dup3\n        /* \"Cenun.sol\":49796:49803  account */\n      dup3\n        /* \"Cenun.sol\":49773:49789  super.revokeRole */\n      tag_256\n        /* \"Cenun.sol\":49773:49804  super.revokeRole(role, account) */\n      jump\t// in\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Cenun.sol\":8331:8338  uint256 */\n      0x00\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":8357:8368  _allowances */\n      0x03\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Cenun.sol\":8357:8384  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Cenun.sol\":50657:50719  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_145:\n        /* \"Cenun.sol\":50695:50719  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"Cenun.sol\":50657:50719  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"Cenun.sol\":34414:34524  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_147:\n        /* \"Cenun.sol\":34492:34517  _grantRole(role, account) */\n      tag_206\n        /* \"Cenun.sol\":34503:34507  role */\n      dup3\n        /* \"Cenun.sol\":34509:34516  account */\n      dup3\n        /* \"Cenun.sol\":34492:34502  _grantRole */\n      tag_261\n        /* \"Cenun.sol\":34492:34517  _grantRole(role, account) */\n      jump\t// in\n        /* \"Cenun.sol\":42974:43124  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_148:\n        /* \"Cenun.sol\":43044:43048  bool */\n      0x00\n        /* \"Cenun.sol\":43067:43117  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_232\n        /* \"Cenun.sol\":43072:43075  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":43092:43115  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Cenun.sol\":43067:43071  _add */\n      tag_264\n        /* \"Cenun.sol\":43067:43117  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"Cenun.sol\":30875:31077  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_152:\n        /* \"Cenun.sol\":30960:30964  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Cenun.sol\":30983:31030  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"Cenun.sol\":30983:31070  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_151\n      jumpi\n      pop\n        /* \"Cenun.sol\":31034:31070  super.supportsInterface(interfaceId) */\n      tag_151\n        /* \"Cenun.sol\":31058:31069  interfaceId */\n      dup3\n        /* \"Cenun.sol\":31034:31057  super.supportsInterface */\n      tag_268\n        /* \"Cenun.sol\":31034:31070  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\n    tag_163:\n        /* \"Cenun.sol\":4262:4272  msg.sender */\n      caller\n        /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":14310:14680  function _approve(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14441:14460  owner != address(0) */\n      dup4\n      and\n        /* \"Cenun.sol\":14433:14501  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_273\n      jump\t// in\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14519:14540  spender != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":14511:14579  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_276\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14590:14608  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Cenun.sol\":14590:14601  _allowances */\n      0x03\n        /* \"Cenun.sol\":14590:14608  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Cenun.sol\":14590:14617  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Cenun.sol\":14590:14626  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"Cenun.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_277\n      swap1\n        /* \"Cenun.sol\":14620:14626  amount */\n      dup6\n      swap1\n        /* \"Cenun.sol\":14641:14673  Approval(owner, spender, amount) */\n      tag_67\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":14310:14680  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":11613:12326  function _transfer(... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11748:11768  sender != address(0) */\n      dup4\n      and\n        /* \"Cenun.sol\":11740:11810  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_281\n      jump\t// in\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11828:11851  recipient != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":11820:11891  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_284\n      jump\t// in\n    tag_282:\n        /* \"Cenun.sol\":11902:11949  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_285\n        /* \"Cenun.sol\":11923:11929  sender */\n      dup4\n        /* \"Cenun.sol\":11931:11940  recipient */\n      dup4\n        /* \"Cenun.sol\":11942:11948  amount */\n      dup4\n        /* \"Cenun.sol\":11902:11922  _beforeTokenTransfer */\n      tag_286\n        /* \"Cenun.sol\":11902:11949  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11984:12001  _balances[sender] */\n      dup4\n      and\n        /* \"Cenun.sol\":11960:11981  uint256 senderBalance */\n      0x00\n        /* \"Cenun.sol\":11984:12001  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":11984:11993  _balances */\n      0x02\n        /* \"Cenun.sol\":11984:12001  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":12019:12042  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Cenun.sol\":12011:12085  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_289\n      jump\t// in\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12119:12136  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":12119:12128  _balances */\n      0x02\n        /* \"Cenun.sol\":12119:12136  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Cenun.sol\":12139:12161  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"Cenun.sol\":12119:12161  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"Cenun.sol\":12181:12201  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"Cenun.sol\":12155:12161  amount */\n      dup5\n      swap3\n        /* \"Cenun.sol\":12119:12136  _balances[sender] */\n      swap1\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      tag_290\n      swap1\n        /* \"Cenun.sol\":12155:12161  amount */\n      dup5\n      swap1\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      tag_191\n      jump\t// in\n    tag_290:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cenun.sol\":12244:12253  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      and\n        /* \"Cenun.sol\":12236:12242  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Cenun.sol\":12255:12261  amount */\n      dup5\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":12273:12319  _afterTokenTransfer(sender, recipient, amount) */\n      tag_292\n        /* \"Cenun.sol\":12293:12299  sender */\n      dup5\n        /* \"Cenun.sol\":12301:12310  recipient */\n      dup5\n        /* \"Cenun.sol\":12312:12318  amount */\n      dup5\n        /* \"Cenun.sol\":12273:12292  _afterTokenTransfer */\n      tag_179\n        /* \"Cenun.sol\":12273:12319  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_292:\n        /* \"Cenun.sol\":11613:12326  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":32618:32763  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_178:\n        /* \"Cenun.sol\":32701:32719  getRoleAdmin(role) */\n      tag_294\n        /* \"Cenun.sol\":32714:32718  role */\n      dup3\n        /* \"Cenun.sol\":32701:32713  getRoleAdmin */\n      tag_65\n        /* \"Cenun.sol\":32701:32719  getRoleAdmin(role) */\n      jump\t// in\n    tag_294:\n        /* \"Cenun.sol\":30760:30790  _checkRole(role, _msgSender()) */\n      tag_296\n        /* \"Cenun.sol\":30771:30775  role */\n      dup2\n        /* \"Cenun.sol\":30777:30789  _msgSender() */\n      tag_297\n        /* \"Cenun.sol\":30777:30787  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":30777:30789  _msgSender() */\n      jump\t// in\n    tag_297:\n        /* \"Cenun.sol\":30760:30770  _checkRole */\n      tag_298\n        /* \"Cenun.sol\":30760:30790  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_296:\n        /* \"Cenun.sol\":32731:32756  _grantRole(role, account) */\n      tag_179\n        /* \"Cenun.sol\":32742:32746  role */\n      dup4\n        /* \"Cenun.sol\":32748:32755  account */\n      dup4\n        /* \"Cenun.sol\":32731:32741  _grantRole */\n      tag_261\n        /* \"Cenun.sol\":32731:32756  _grantRole(role, account) */\n      jump\t// in\n        /* \"Cenun.sol\":33635:33849  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_183:\n        /* \"Cenun.sol\":33741:33753  _msgSender() */\n      tag_302\n        /* \"Cenun.sol\":33741:33751  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":33741:33753  _msgSender() */\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":33730:33753  account == _msgSender() */\n      and\n        /* \"Cenun.sol\":33730:33737  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":33730:33753  account == _msgSender() */\n      and\n      eq\n        /* \"Cenun.sol\":33722:33805  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_305\n      jump\t// in\n    tag_303:\n        /* \"Cenun.sol\":33816:33842  _revokeRole(role, account) */\n      tag_206\n        /* \"Cenun.sol\":33828:33832  role */\n      dup3\n        /* \"Cenun.sol\":33834:33841  account */\n      dup3\n        /* \"Cenun.sol\":33816:33827  _revokeRole */\n      tag_307\n        /* \"Cenun.sol\":33816:33842  _revokeRole(role, account) */\n      jump\t// in\n        /* \"Cenun.sol\":43292:43448  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_185:\n        /* \"Cenun.sol\":43365:43369  bool */\n      0x00\n        /* \"Cenun.sol\":43388:43441  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_232\n        /* \"Cenun.sol\":43396:43399  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":43416:43439  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Cenun.sol\":43388:43395  _remove */\n      tag_310\n        /* \"Cenun.sol\":43388:43441  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"Cenun.sol\":19440:19557  function _unpause() internal virtual whenPaused {... */\n    tag_199:\n        /* \"Cenun.sol\":19007:19015  paused() */\n      tag_312\n        /* \"Cenun.sol\":19007:19013  paused */\n      tag_93\n        /* \"Cenun.sol\":19007:19015  paused() */\n      jump\t// in\n    tag_312:\n        /* \"Cenun.sol\":18999:19040  require(paused(), \"Pausable: not paused\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_315\n      jump\t// in\n    tag_313:\n        /* \"Cenun.sol\":19498:19505  _paused */\n      0x07\n        /* \"Cenun.sol\":19498:19513  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Cenun.sol\":19528:19550  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"Cenun.sol\":19537:19549  _msgSender() */\n      tag_317\n        /* \"Cenun.sol\":19537:19547  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":19537:19549  _msgSender() */\n      jump\t// in\n    tag_317:\n        /* \"Cenun.sol\":19528:19550  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_318\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Cenun.sol\":19440:19557  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"Cenun.sol\":12602:12991  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12685:12706  account != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":12677:12742  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_322\n      jump\t// in\n    tag_320:\n        /* \"Cenun.sol\":12753:12802  _beforeTokenTransfer(address(0), account, amount) */\n      tag_323\n        /* \"Cenun.sol\":12782:12783  0 */\n      0x00\n        /* \"Cenun.sol\":12786:12793  account */\n      dup4\n        /* \"Cenun.sol\":12795:12801  amount */\n      dup4\n        /* \"Cenun.sol\":12753:12773  _beforeTokenTransfer */\n      tag_286\n        /* \"Cenun.sol\":12753:12802  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_323:\n        /* \"Cenun.sol\":12829:12835  amount */\n      dup1\n        /* \"Cenun.sol\":12813:12825  _totalSupply */\n      0x04\n      0x00\n        /* \"Cenun.sol\":12813:12835  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_324\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_324:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12845:12863  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":12845:12854  _balances */\n      0x02\n        /* \"Cenun.sol\":12845:12863  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":12845:12873  _balances[account] += amount */\n      dup1\n      sload\n        /* \"Cenun.sol\":12867:12873  amount */\n      dup4\n      swap3\n        /* \"Cenun.sol\":12845:12863  _balances[account] */\n      swap1\n        /* \"Cenun.sol\":12845:12873  _balances[account] += amount */\n      tag_325\n      swap1\n        /* \"Cenun.sol\":12867:12873  amount */\n      dup5\n      swap1\n        /* \"Cenun.sol\":12845:12873  _balances[account] += amount */\n      tag_191\n      jump\t// in\n    tag_325:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Cenun.sol\":12888:12925  Transfer(address(0), account, amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n        /* \"Cenun.sol\":12905:12906  0 */\n      0x00\n      swap1\n        /* \"Cenun.sol\":12888:12925  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_326\n      swap1\n        /* \"Cenun.sol\":12918:12924  amount */\n      dup6\n      swap1\n        /* \"Cenun.sol\":12888:12925  Transfer(address(0), account, amount) */\n      tag_67\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":12936:12984  _afterTokenTransfer(address(0), account, amount) */\n      tag_206\n        /* \"Cenun.sol\":12964:12965  0 */\n      0x00\n        /* \"Cenun.sol\":12968:12975  account */\n      dup4\n        /* \"Cenun.sol\":12977:12983  amount */\n      dup4\n        /* \"Cenun.sol\":12936:12955  _afterTokenTransfer */\n      tag_179\n        /* \"Cenun.sol\":12936:12984  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n        /* \"Cenun.sol\":13311:13887  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":13394:13415  account != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":13386:13453  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_331\n      jump\t// in\n    tag_329:\n        /* \"Cenun.sol\":13464:13513  _beforeTokenTransfer(account, address(0), amount) */\n      tag_332\n        /* \"Cenun.sol\":13485:13492  account */\n      dup3\n        /* \"Cenun.sol\":13502:13503  0 */\n      0x00\n        /* \"Cenun.sol\":13506:13512  amount */\n      dup4\n        /* \"Cenun.sol\":13464:13484  _beforeTokenTransfer */\n      tag_286\n        /* \"Cenun.sol\":13464:13513  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":13549:13567  _balances[account] */\n      dup3\n      and\n        /* \"Cenun.sol\":13524:13546  uint256 accountBalance */\n      0x00\n        /* \"Cenun.sol\":13549:13567  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":13549:13558  _balances */\n      0x02\n        /* \"Cenun.sol\":13549:13567  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":13585:13609  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Cenun.sol\":13577:13648  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_335\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":13682:13700  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":13682:13691  _balances */\n      0x02\n        /* \"Cenun.sol\":13682:13700  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":13703:13726  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"Cenun.sol\":13682:13726  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"Cenun.sol\":13746:13758  _totalSupply */\n      0x04\n        /* \"Cenun.sol\":13746:13768  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"Cenun.sol\":13720:13726  amount */\n      dup5\n      swap3\n        /* \"Cenun.sol\":13682:13700  _balances[account] */\n      swap1\n        /* \"Cenun.sol\":13746:13768  _totalSupply -= amount */\n      tag_336\n      swap1\n        /* \"Cenun.sol\":13720:13726  amount */\n      dup5\n      swap1\n        /* \"Cenun.sol\":13746:13768  _totalSupply -= amount */\n      tag_337\n      jump\t// in\n    tag_336:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Cenun.sol\":13784:13821  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"Cenun.sol\":13810:13811  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":13784:13821  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_338\n      swap1\n        /* \"Cenun.sol\":13814:13820  amount */\n      dup7\n      swap1\n        /* \"Cenun.sol\":13784:13821  Transfer(account, address(0), amount) */\n      tag_67\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":13832:13880  _afterTokenTransfer(account, address(0), amount) */\n      tag_179\n        /* \"Cenun.sol\":13852:13859  account */\n      dup4\n        /* \"Cenun.sol\":13869:13870  0 */\n      0x00\n        /* \"Cenun.sol\":13873:13879  amount */\n      dup5\n        /* \"Cenun.sol\":13832:13851  _afterTokenTransfer */\n      tag_179\n        /* \"Cenun.sol\":13832:13880  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n        /* \"Cenun.sol\":19193:19308  function _pause() internal virtual whenNotPaused {... */\n    tag_230:\n        /* \"Cenun.sol\":18742:18750  paused() */\n      tag_341\n        /* \"Cenun.sol\":18742:18748  paused */\n      tag_93\n        /* \"Cenun.sol\":18742:18750  paused() */\n      jump\t// in\n    tag_341:\n        /* \"Cenun.sol\":18741:18750  !paused() */\n      iszero\n        /* \"Cenun.sol\":18733:18771  require(!paused(), \"Pausable: paused\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_344\n      jump\t// in\n    tag_342:\n        /* \"Cenun.sol\":19252:19259  _paused */\n      0x07\n        /* \"Cenun.sol\":19252:19266  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Cenun.sol\":19262:19266  true */\n      0x01\n        /* \"Cenun.sol\":19252:19266  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"Cenun.sol\":19281:19301  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"Cenun.sol\":19288:19300  _msgSender() */\n      tag_317\n        /* \"Cenun.sol\":19288:19298  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":19288:19300  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":44232:44388  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_233:\n        /* \"Cenun.sol\":44306:44313  address */\n      0x00\n        /* \"Cenun.sol\":44356:44378  _at(set._inner, index) */\n      tag_232\n        /* \"Cenun.sol\":44360:44363  set */\n      dup4\n        /* \"Cenun.sol\":44372:44377  index */\n      dup4\n        /* \"Cenun.sol\":44356:44359  _at */\n      tag_350\n        /* \"Cenun.sol\":44356:44378  _at(set._inner, index) */\n      jump\t// in\n        /* \"Cenun.sol\":43775:43890  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_253:\n        /* \"Cenun.sol\":43838:43845  uint256 */\n      0x00\n        /* \"Cenun.sol\":43864:43883  _length(set._inner) */\n      tag_151\n        /* \"Cenun.sol\":43872:43875  set */\n      dup3\n        /* \"Cenun.sol\":43864:43871  _length */\n      tag_353\n        /* \"Cenun.sol\":43864:43883  _length(set._inner) */\n      jump\t// in\n        /* \"Cenun.sol\":32997:33144  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_256:\n        /* \"Cenun.sol\":33081:33099  getRoleAdmin(role) */\n      tag_354\n        /* \"Cenun.sol\":33094:33098  role */\n      dup3\n        /* \"Cenun.sol\":33081:33093  getRoleAdmin */\n      tag_65\n        /* \"Cenun.sol\":33081:33099  getRoleAdmin(role) */\n      jump\t// in\n    tag_354:\n        /* \"Cenun.sol\":30760:30790  _checkRole(role, _msgSender()) */\n      tag_356\n        /* \"Cenun.sol\":30771:30775  role */\n      dup2\n        /* \"Cenun.sol\":30777:30789  _msgSender() */\n      tag_297\n        /* \"Cenun.sol\":30777:30787  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":30777:30789  _msgSender() */\n      jump\t// in\n        /* \"Cenun.sol\":30760:30790  _checkRole(role, _msgSender()) */\n    tag_356:\n        /* \"Cenun.sol\":33111:33137  _revokeRole(role, account) */\n      tag_179\n        /* \"Cenun.sol\":33123:33127  role */\n      dup4\n        /* \"Cenun.sol\":33129:33136  account */\n      dup4\n        /* \"Cenun.sol\":33111:33122  _revokeRole */\n      tag_307\n        /* \"Cenun.sol\":33111:33137  _revokeRole(role, account) */\n      jump\t// in\n        /* \"Cenun.sol\":34902:35126  function _grantRole(bytes32 role, address account) private {... */\n    tag_261:\n        /* \"Cenun.sol\":34976:34998  hasRole(role, account) */\n      tag_361\n        /* \"Cenun.sol\":34984:34988  role */\n      dup3\n        /* \"Cenun.sol\":34990:34997  account */\n      dup3\n        /* \"Cenun.sol\":34976:34983  hasRole */\n      tag_113\n        /* \"Cenun.sol\":34976:34998  hasRole(role, account) */\n      jump\t// in\n    tag_361:\n        /* \"Cenun.sol\":34971:35120  if (!hasRole(role, account)) {... */\n      tag_206\n      jumpi\n        /* \"Cenun.sol\":35014:35020  _roles */\n      0x00\n        /* \"Cenun.sol\":35014:35026  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35014:35043  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Cenun.sol\":35014:35050  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Cenun.sol\":35046:35050  true */\n      0x01\n        /* \"Cenun.sol\":35014:35050  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Cenun.sol\":35096:35108  _msgSender() */\n      tag_363\n        /* \"Cenun.sol\":35096:35106  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":35096:35108  _msgSender() */\n      jump\t// in\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"Cenun.sol\":35087:35094  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"Cenun.sol\":35081:35085  role */\n      dup4\n        /* \"Cenun.sol\":35069:35109  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Cenun.sol\":34902:35126  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":37059:37463  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_264:\n        /* \"Cenun.sol\":37122:37126  bool */\n      0x00\n        /* \"Cenun.sol\":37143:37164  _contains(set, value) */\n      tag_365\n        /* \"Cenun.sol\":37153:37156  set */\n      dup4\n        /* \"Cenun.sol\":37158:37163  value */\n      dup4\n        /* \"Cenun.sol\":37143:37152  _contains */\n      tag_366\n        /* \"Cenun.sol\":37143:37164  _contains(set, value) */\n      jump\t// in\n    tag_365:\n        /* \"Cenun.sol\":37138:37457  if (!_contains(set, value)) {... */\n      tag_367\n      jumpi\n      pop\n        /* \"Cenun.sol\":37180:37203  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Cenun.sol\":37180:37191  set._values */\n      0x00\n        /* \"Cenun.sol\":37180:37203  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Cenun.sol\":37360:37378  set._values.length */\n      dup5\n      sload\n        /* \"Cenun.sol\":37338:37357  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Cenun.sol\":37338:37350  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Cenun.sol\":37338:37357  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Cenun.sol\":37338:37378  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Cenun.sol\":37392:37403  return true */\n      jump(tag_160)\n        /* \"Cenun.sol\":37138:37457  if (!_contains(set, value)) {... */\n    tag_367:\n      pop\n        /* \"Cenun.sol\":37441:37446  false */\n      0x00\n        /* \"Cenun.sol\":37434:37446  return false */\n      jump(tag_160)\n        /* \"Cenun.sol\":28245:28400  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_268:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Cenun.sol\":28353:28393  interfaceId == type(IERC165).interfaceId */\n      dup2\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n        /* \"Cenun.sol\":28245:28400  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":51466:51647  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {... */\n    tag_286:\n        /* \"Cenun.sol\":51596:51640  super._beforeTokenTransfer(from, to, amount) */\n      tag_179\n        /* \"Cenun.sol\":51623:51627  from */\n      dup4\n        /* \"Cenun.sol\":51629:51631  to */\n      dup4\n        /* \"Cenun.sol\":51633:51639  amount */\n      dup4\n        /* \"Cenun.sol\":51596:51622  super._beforeTokenTransfer */\n      tag_373\n        /* \"Cenun.sol\":51596:51640  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"Cenun.sol\":31582:32066  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_298:\n        /* \"Cenun.sol\":31662:31684  hasRole(role, account) */\n      tag_376\n        /* \"Cenun.sol\":31670:31674  role */\n      dup3\n        /* \"Cenun.sol\":31676:31683  account */\n      dup3\n        /* \"Cenun.sol\":31662:31669  hasRole */\n      tag_113\n        /* \"Cenun.sol\":31662:31684  hasRole(role, account) */\n      jump\t// in\n    tag_376:\n        /* \"Cenun.sol\":31657:32060  if (!hasRole(role, account)) {... */\n      tag_206\n      jumpi\n        /* \"Cenun.sol\":31845:31886  Strings.toHexString(uint160(account), 20) */\n      tag_378\n        /* \"Cenun.sol\":31873:31880  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":31845:31886  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"Cenun.sol\":31883:31885  20 */\n      0x14\n        /* \"Cenun.sol\":31845:31864  Strings.toHexString */\n      tag_379\n        /* \"Cenun.sol\":31845:31886  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_378:\n        /* \"Cenun.sol\":31957:31995  Strings.toHexString(uint256(role), 32) */\n      tag_380\n        /* \"Cenun.sol\":31985:31989  role */\n      dup4\n        /* \"Cenun.sol\":31992:31994  32 */\n      0x20\n        /* \"Cenun.sol\":31957:31976  Strings.toHexString */\n      tag_379\n        /* \"Cenun.sol\":31957:31995  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_380:\n        /* \"Cenun.sol\":31752:32017  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_381\n      swap3\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"Cenun.sol\":31700:32049  revert(... */\n      dup3\n      mstore\n      tag_171\n      swap2\n      0x04\n      add\n      tag_47\n      jump\t// in\n        /* \"Cenun.sol\":35132:35357  function _revokeRole(bytes32 role, address account) private {... */\n    tag_307:\n        /* \"Cenun.sol\":35206:35228  hasRole(role, account) */\n      tag_385\n        /* \"Cenun.sol\":35214:35218  role */\n      dup3\n        /* \"Cenun.sol\":35220:35227  account */\n      dup3\n        /* \"Cenun.sol\":35206:35213  hasRole */\n      tag_113\n        /* \"Cenun.sol\":35206:35228  hasRole(role, account) */\n      jump\t// in\n    tag_385:\n        /* \"Cenun.sol\":35202:35351  if (hasRole(role, account)) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"Cenun.sol\":35276:35281  false */\n      0x00\n        /* \"Cenun.sol\":35244:35256  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35244:35273  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Cenun.sol\":35244:35281  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Cenun.sol\":35327:35339  _msgSender() */\n      tag_387\n        /* \"Cenun.sol\":35327:35337  _msgSender */\n      tag_163\n        /* \"Cenun.sol\":35327:35339  _msgSender() */\n      jump\t// in\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35300:35340  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"Cenun.sol\":35318:35325  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":35300:35340  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"Cenun.sol\":35312:35316  role */\n      dup4\n        /* \"Cenun.sol\":35300:35340  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Cenun.sol\":35132:35357  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":37631:39019  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_310:\n        /* \"Cenun.sol\":37697:37701  bool */\n      0x00\n        /* \"Cenun.sol\":37834:37853  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Cenun.sol\":37834:37846  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Cenun.sol\":37834:37853  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Cenun.sol\":37868:37883  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"Cenun.sol\":37864:39013  if (valueIndex != 0) {... */\n      tag_389\n      jumpi\n        /* \"Cenun.sol\":38237:38258  uint256 toDeleteIndex */\n      0x00\n        /* \"Cenun.sol\":38261:38275  valueIndex - 1 */\n      tag_390\n        /* \"Cenun.sol\":38274:38275  1 */\n      0x01\n        /* \"Cenun.sol\":38261:38271  valueIndex */\n      dup4\n        /* \"Cenun.sol\":38261:38275  valueIndex - 1 */\n      tag_337\n      jump\t// in\n    tag_390:\n        /* \"Cenun.sol\":38309:38327  set._values.length */\n      dup6\n      sload\n        /* \"Cenun.sol\":38237:38275  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"Cenun.sol\":38289:38306  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"Cenun.sol\":38309:38331  set._values.length - 1 */\n      tag_391\n      swap1\n        /* \"Cenun.sol\":38330:38331  1 */\n      0x01\n      swap1\n        /* \"Cenun.sol\":38309:38331  set._values.length - 1 */\n      tag_337\n      jump\t// in\n    tag_391:\n        /* \"Cenun.sol\":38289:38331  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"Cenun.sol\":38363:38376  toDeleteIndex */\n      dup2\n        /* \"Cenun.sol\":38350:38359  lastIndex */\n      dup2\n        /* \"Cenun.sol\":38350:38376  lastIndex != toDeleteIndex */\n      eq\n        /* \"Cenun.sol\":38346:38744  if (lastIndex != toDeleteIndex) {... */\n      tag_392\n      jumpi\n        /* \"Cenun.sol\":38396:38413  bytes32 lastvalue */\n      0x00\n        /* \"Cenun.sol\":38416:38419  set */\n      dup7\n        /* \"Cenun.sol\":38416:38427  set._values */\n      0x00\n      add\n        /* \"Cenun.sol\":38428:38437  lastIndex */\n      dup3\n        /* \"Cenun.sol\":38416:38438  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_393\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_393:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Cenun.sol\":38396:38438  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"Cenun.sol\":38567:38576  lastvalue */\n      dup1\n        /* \"Cenun.sol\":38538:38541  set */\n      dup8\n        /* \"Cenun.sol\":38538:38549  set._values */\n      0x00\n      add\n        /* \"Cenun.sol\":38550:38563  toDeleteIndex */\n      dup5\n        /* \"Cenun.sol\":38538:38564  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_395\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_395:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"Cenun.sol\":38538:38576  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Cenun.sol\":38650:38673  set._indexes[lastvalue] */\n      swap2\n      dup3\n      mstore\n        /* \"Cenun.sol\":38650:38662  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"Cenun.sol\":38650:38673  set._indexes[lastvalue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Cenun.sol\":38650:38686  set._indexes[lastvalue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"Cenun.sol\":38346:38744  if (lastIndex != toDeleteIndex) {... */\n    tag_392:\n        /* \"Cenun.sol\":38822:38839  set._values.pop() */\n      dup6\n      sload\n        /* \"Cenun.sol\":38822:38825  set */\n      dup7\n      swap1\n        /* \"Cenun.sol\":38822:38839  set._values.pop() */\n      dup1\n      tag_397\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_397:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"Cenun.sol\":38914:38917  set */\n      dup6\n        /* \"Cenun.sol\":38914:38926  set._indexes */\n      0x01\n      add\n        /* \"Cenun.sol\":38914:38933  set._indexes[value] */\n      0x00\n        /* \"Cenun.sol\":38927:38932  value */\n      dup7\n        /* \"Cenun.sol\":38914:38933  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Cenun.sol\":38907:38933  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"Cenun.sol\":38955:38959  true */\n      0x01\n        /* \"Cenun.sol\":38948:38959  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"Cenun.sol\":37864:39013  if (valueIndex != 0) {... */\n    tag_389:\n        /* \"Cenun.sol\":38997:39002  false */\n      0x00\n        /* \"Cenun.sol\":38990:39002  return false */\n      swap2\n      pop\n      pop\n      jump(tag_160)\n        /* \"Cenun.sol\":39757:39875  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_350:\n        /* \"Cenun.sol\":39824:39831  bytes32 */\n      0x00\n        /* \"Cenun.sol\":39850:39853  set */\n      dup3\n        /* \"Cenun.sol\":39850:39861  set._values */\n      0x00\n      add\n        /* \"Cenun.sol\":39862:39867  index */\n      dup3\n        /* \"Cenun.sol\":39850:39868  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_401\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_401:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Cenun.sol\":39843:39868  return set._values[index] */\n      swap1\n      pop\n        /* \"Cenun.sol\":39757:39875  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":39308:39415  function _length(Set storage set) private view returns (uint256) {... */\n    tag_353:\n        /* \"Cenun.sol\":39390:39408  set._values.length */\n      sload\n      swap1\n        /* \"Cenun.sol\":39308:39415  function _length(Set storage set) private view returns (uint256) {... */\n      jump\t// out\n        /* \"Cenun.sol\":39100:39227  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_366:\n        /* \"Cenun.sol\":39173:39177  bool */\n      0x00\n        /* \"Cenun.sol\":39196:39215  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":39196:39208  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"Cenun.sol\":39196:39215  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":39196:39220  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"Cenun.sol\":39100:39227  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\t// out\n        /* \"Cenun.sol\":20163:20427  function _beforeTokenTransfer(... */\n    tag_373:\n        /* \"Cenun.sol\":20301:20345  super._beforeTokenTransfer(from, to, amount) */\n      tag_406\n        /* \"Cenun.sol\":20328:20332  from */\n      dup4\n        /* \"Cenun.sol\":20334:20336  to */\n      dup4\n        /* \"Cenun.sol\":20338:20344  amount */\n      dup4\n        /* \"Cenun.sol\":20301:20327  super._beforeTokenTransfer */\n      tag_179\n        /* \"Cenun.sol\":20301:20345  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_406:\n        /* \"Cenun.sol\":20365:20373  paused() */\n      tag_408\n        /* \"Cenun.sol\":20365:20371  paused */\n      tag_93\n        /* \"Cenun.sol\":20365:20373  paused() */\n      jump\t// in\n    tag_408:\n        /* \"Cenun.sol\":20364:20373  !paused() */\n      iszero\n        /* \"Cenun.sol\":20356:20420  require(!paused(), \"ERC20Pausable: token transfer while paused\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_411\n      jump\t// in\n        /* \"Cenun.sol\":26140:26581  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_379:\n        /* \"Cenun.sol\":26215:26228  string memory */\n      0x60\n        /* \"Cenun.sol\":26240:26259  bytes memory buffer */\n      0x00\n        /* \"Cenun.sol\":26272:26282  2 * length */\n      tag_413\n        /* \"Cenun.sol\":26276:26282  length */\n      dup4\n        /* \"Cenun.sol\":26272:26273  2 */\n      0x02\n        /* \"Cenun.sol\":26272:26282  2 * length */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"Cenun.sol\":26272:26286  2 * length + 2 */\n      tag_415\n      swap1\n        /* \"Cenun.sol\":26285:26286  2 */\n      0x02\n        /* \"Cenun.sol\":26272:26286  2 * length + 2 */\n      tag_191\n      jump\t// in\n    tag_415:\n        /* \"Cenun.sol\":26262:26287  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_416\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_416:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_417\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_417:\n      pop\n        /* \"Cenun.sol\":26240:26287  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"Cenun.sol\":26297:26303  buffer */\n      dup2\n        /* \"Cenun.sol\":26304:26305  0 */\n      0x00\n        /* \"Cenun.sol\":26297:26306  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_418\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_418:\n      0x20\n      add\n      add\n        /* \"Cenun.sol\":26297:26312  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"Cenun.sol\":26322:26328  buffer */\n      dup2\n        /* \"Cenun.sol\":26329:26330  1 */\n      0x01\n        /* \"Cenun.sol\":26322:26331  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_419\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_419:\n      0x20\n      add\n      add\n        /* \"Cenun.sol\":26322:26337  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Cenun.sol\":26352:26361  uint256 i */\n      0x00\n        /* \"Cenun.sol\":26364:26374  2 * length */\n      tag_423\n        /* \"Cenun.sol\":26368:26374  length */\n      dup5\n        /* \"Cenun.sol\":26364:26365  2 */\n      0x02\n        /* \"Cenun.sol\":26364:26374  2 * length */\n      tag_414\n      jump\t// in\n    tag_423:\n        /* \"Cenun.sol\":26364:26378  2 * length + 1 */\n      tag_424\n      swap1\n        /* \"Cenun.sol\":26377:26378  1 */\n      0x01\n        /* \"Cenun.sol\":26364:26378  2 * length + 1 */\n      tag_191\n      jump\t// in\n    tag_424:\n        /* \"Cenun.sol\":26352:26378  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"Cenun.sol\":26347:26479  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_420:\n        /* \"Cenun.sol\":26384:26385  1 */\n      0x01\n        /* \"Cenun.sol\":26380:26381  i */\n      dup2\n        /* \"Cenun.sol\":26380:26385  i > 1 */\n      gt\n        /* \"Cenun.sol\":26347:26479  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_421\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"Cenun.sol\":26431:26436  value */\n      dup6\n        /* \"Cenun.sol\":26439:26442  0xf */\n      0x0f\n        /* \"Cenun.sol\":26431:26442  value & 0xf */\n      and\n        /* \"Cenun.sol\":26418:26443  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_425\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_425:\n      byte\n      0xf8\n      shl\n        /* \"Cenun.sol\":26406:26412  buffer */\n      dup3\n        /* \"Cenun.sol\":26413:26414  i */\n      dup3\n        /* \"Cenun.sol\":26406:26415  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_426\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_426:\n      0x20\n      add\n      add\n        /* \"Cenun.sol\":26406:26443  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Cenun.sol\":26467:26468  4 */\n      0x04\n        /* \"Cenun.sol\":26457:26468  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"Cenun.sol\":26387:26390  --i */\n      tag_427\n      dup2\n      tag_428\n      jump\t// in\n    tag_427:\n      swap1\n      pop\n        /* \"Cenun.sol\":26347:26479  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_420)\n    tag_421:\n      pop\n        /* \"Cenun.sol\":26496:26506  value == 0 */\n      dup4\n      iszero\n        /* \"Cenun.sol\":26488:26543  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":14:189   */\n    tag_434:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_97:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_438:\n        /* \"#utility.yul\":355:386   */\n      tag_232\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":397:671   */\n    tag_141:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_441:\n        /* \"#utility.yul\":575:606   */\n      tag_442\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_434\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_443\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_434\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_59:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_445:\n        /* \"#utility.yul\":871:902   */\n      tag_446\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_434\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_447\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_434\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_50:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_449:\n        /* \"#utility.yul\":1201:1232   */\n      tag_450\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_434\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1484   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1394:1403   */\n      dup3\n        /* \"#utility.yul\":1385:1392   */\n      dup5\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1376   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":1427:1433   */\n      dup1\n        /* \"#utility.yul\":1419:1425   */\n      dup2\n        /* \"#utility.yul\":1412:1434   */\n      revert\n        /* \"#utility.yul\":1374:1376   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":1455:1478   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1364:1484   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1489:1755   */\n    tag_70:\n      0x00\n      dup1\n        /* \"#utility.yul\":1618:1620   */\n      0x40\n        /* \"#utility.yul\":1606:1615   */\n      dup4\n        /* \"#utility.yul\":1597:1604   */\n      dup6\n        /* \"#utility.yul\":1593:1616   */\n      sub\n        /* \"#utility.yul\":1589:1621   */\n      slt\n        /* \"#utility.yul\":1586:1588   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":1639:1645   */\n      dup2\n        /* \"#utility.yul\":1631:1637   */\n      dup3\n        /* \"#utility.yul\":1624:1646   */\n      revert\n        /* \"#utility.yul\":1586:1588   */\n    tag_454:\n        /* \"#utility.yul\":1680:1689   */\n      dup3\n        /* \"#utility.yul\":1667:1690   */\n      calldataload\n        /* \"#utility.yul\":1657:1690   */\n      swap2\n      pop\n        /* \"#utility.yul\":1709:1749   */\n      tag_443\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1709:1749   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":1760:2018   */\n    tag_107:\n      0x00\n      dup1\n        /* \"#utility.yul\":1889:1891   */\n      0x40\n        /* \"#utility.yul\":1877:1886   */\n      dup4\n        /* \"#utility.yul\":1868:1875   */\n      dup6\n        /* \"#utility.yul\":1864:1887   */\n      sub\n        /* \"#utility.yul\":1860:1892   */\n      slt\n        /* \"#utility.yul\":1857:1859   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1902:1908   */\n      dup3\n        /* \"#utility.yul\":1895:1917   */\n      revert\n        /* \"#utility.yul\":1857:1859   */\n    tag_457:\n      pop\n      pop\n        /* \"#utility.yul\":1938:1961   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2008:2010   */\n      0x20\n        /* \"#utility.yul\":1993:2011   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1980:2012   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1847:2018   */\n      jump\t// out\n        /* \"#utility.yul\":2023:2329   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":2134:2136   */\n      0x20\n        /* \"#utility.yul\":2122:2131   */\n      dup3\n        /* \"#utility.yul\":2113:2120   */\n      dup5\n        /* \"#utility.yul\":2109:2132   */\n      sub\n        /* \"#utility.yul\":2105:2137   */\n      slt\n        /* \"#utility.yul\":2102:2104   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":2155:2161   */\n      dup1\n        /* \"#utility.yul\":2147:2153   */\n      dup2\n        /* \"#utility.yul\":2140:2162   */\n      revert\n        /* \"#utility.yul\":2102:2104   */\n    tag_459:\n        /* \"#utility.yul\":2186:2209   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2238:2270   */\n      dup2\n      and\n        /* \"#utility.yul\":2228:2271   */\n      dup2\n      eq\n        /* \"#utility.yul\":2218:2220   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2282:2288   */\n      dup3\n        /* \"#utility.yul\":2275:2297   */\n      revert\n        /* \"#utility.yul\":2529:3315   */\n    tag_382:\n      0x00\n        /* \"#utility.yul\":2940:2965   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":2935:2938   */\n      dup3\n        /* \"#utility.yul\":2928:2966   */\n      mstore\n        /* \"#utility.yul\":2995:3001   */\n      dup4\n        /* \"#utility.yul\":2989:3002   */\n      mload\n        /* \"#utility.yul\":3011:3073   */\n      tag_464\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3061:3063   */\n      0x17\n        /* \"#utility.yul\":3056:3059   */\n      dup6\n        /* \"#utility.yul\":3052:3064   */\n      add\n        /* \"#utility.yul\":3045:3049   */\n      0x20\n        /* \"#utility.yul\":3037:3043   */\n      dup9\n        /* \"#utility.yul\":3033:3050   */\n      add\n        /* \"#utility.yul\":3011:3073   */\n      tag_465\n      jump\t// in\n    tag_464:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":3132:3134   */\n      0x17\n        /* \"#utility.yul\":3092:3108   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":3124:3135   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3117:3157   */\n      mstore\n        /* \"#utility.yul\":3182:3195   */\n      dup4\n      mload\n        /* \"#utility.yul\":3204:3267   */\n      tag_466\n        /* \"#utility.yul\":3182:3195   */\n      dup2\n        /* \"#utility.yul\":3253:3255   */\n      0x28\n        /* \"#utility.yul\":3245:3256   */\n      dup5\n      add\n        /* \"#utility.yul\":3238:3242   */\n      0x20\n        /* \"#utility.yul\":3226:3243   */\n      dup9\n      add\n        /* \"#utility.yul\":3204:3267   */\n      tag_465\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3287:3304   */\n      add\n        /* \"#utility.yul\":3306:3308   */\n      0x28\n        /* \"#utility.yul\":3283:3309   */\n      add\n      swap5\n        /* \"#utility.yul\":2918:3315   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3523   */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3484:3516   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3466:3517   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3454:3456   */\n      0x20\n        /* \"#utility.yul\":3439:3457   */\n      add\n      swap1\n        /* \"#utility.yul\":3421:3523   */\n      jump\t// out\n        /* \"#utility.yul\":3528:3715   */\n    tag_43:\n        /* \"#utility.yul\":3693:3707   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3686:3708   */\n      iszero\n        /* \"#utility.yul\":3668:3709   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3641:3659   */\n      add\n      swap1\n        /* \"#utility.yul\":3623:3715   */\n      jump\t// out\n        /* \"#utility.yul\":3720:3897   */\n    tag_67:\n        /* \"#utility.yul\":3866:3891   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"#utility.yul\":3839:3857   */\n      add\n      swap1\n        /* \"#utility.yul\":3821:3897   */\n      jump\t// out\n        /* \"#utility.yul\":3902:4285   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":4051:4053   */\n      0x20\n        /* \"#utility.yul\":4040:4049   */\n      dup3\n        /* \"#utility.yul\":4033:4054   */\n      mstore\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4077:4090   */\n      mload\n        /* \"#utility.yul\":4126:4132   */\n      dup1\n        /* \"#utility.yul\":4121:4123   */\n      0x20\n        /* \"#utility.yul\":4110:4119   */\n      dup5\n        /* \"#utility.yul\":4106:4124   */\n      add\n        /* \"#utility.yul\":4099:4133   */\n      mstore\n        /* \"#utility.yul\":4142:4208   */\n      tag_471\n        /* \"#utility.yul\":4201:4207   */\n      dup2\n        /* \"#utility.yul\":4196:4198   */\n      0x40\n        /* \"#utility.yul\":4185:4194   */\n      dup6\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"#utility.yul\":4176:4178   */\n      0x20\n        /* \"#utility.yul\":4168:4174   */\n      dup8\n        /* \"#utility.yul\":4164:4179   */\n      add\n        /* \"#utility.yul\":4142:4208   */\n      tag_465\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4269:4271   */\n      0x1f\n        /* \"#utility.yul\":4248:4263   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4244:4273   */\n      and\n        /* \"#utility.yul\":4229:4274   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4276:4278   */\n      0x40\n        /* \"#utility.yul\":4225:4279   */\n      add\n      swap3\n        /* \"#utility.yul\":4023:4285   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4290:4646   */\n    tag_431:\n        /* \"#utility.yul\":4492:4494   */\n      0x20\n        /* \"#utility.yul\":4474:4495   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4504:4534   */\n      mstore\n        /* \"#utility.yul\":4570:4604   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":4565:4567   */\n      0x40\n        /* \"#utility.yul\":4550:4568   */\n      dup3\n      add\n        /* \"#utility.yul\":4543:4605   */\n      mstore\n        /* \"#utility.yul\":4637:4639   */\n      0x60\n        /* \"#utility.yul\":4622:4640   */\n      add\n      swap1\n        /* \"#utility.yul\":4464:4646   */\n      jump\t// out\n        /* \"#utility.yul\":4651:5050   */\n    tag_284:\n        /* \"#utility.yul\":4853:4855   */\n      0x20\n        /* \"#utility.yul\":4835:4856   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4892:4894   */\n      0x23\n        /* \"#utility.yul\":4872:4890   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4865:4895   */\n      mstore\n        /* \"#utility.yul\":4931:4965   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4926:4928   */\n      0x40\n        /* \"#utility.yul\":4911:4929   */\n      dup3\n      add\n        /* \"#utility.yul\":4904:4966   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4997:4999   */\n      0x60\n        /* \"#utility.yul\":4982:5000   */\n      dup3\n      add\n        /* \"#utility.yul\":4975:5008   */\n      mstore\n        /* \"#utility.yul\":5040:5043   */\n      0x80\n        /* \"#utility.yul\":5025:5044   */\n      add\n      swap1\n        /* \"#utility.yul\":4825:5050   */\n      jump\t// out\n        /* \"#utility.yul\":5055:5399   */\n    tag_315:\n        /* \"#utility.yul\":5257:5259   */\n      0x20\n        /* \"#utility.yul\":5239:5260   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5296:5298   */\n      0x14\n        /* \"#utility.yul\":5276:5294   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5269:5299   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":5330:5332   */\n      0x40\n        /* \"#utility.yul\":5315:5333   */\n      dup3\n      add\n        /* \"#utility.yul\":5308:5358   */\n      mstore\n        /* \"#utility.yul\":5390:5392   */\n      0x60\n        /* \"#utility.yul\":5375:5393   */\n      add\n      swap1\n        /* \"#utility.yul\":5229:5399   */\n      jump\t// out\n        /* \"#utility.yul\":5404:5802   */\n    tag_335:\n        /* \"#utility.yul\":5606:5608   */\n      0x20\n        /* \"#utility.yul\":5588:5609   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5645:5647   */\n      0x22\n        /* \"#utility.yul\":5625:5643   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5618:5648   */\n      mstore\n        /* \"#utility.yul\":5684:5718   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":5679:5681   */\n      0x40\n        /* \"#utility.yul\":5664:5682   */\n      dup3\n      add\n        /* \"#utility.yul\":5657:5719   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":5750:5752   */\n      0x60\n        /* \"#utility.yul\":5735:5753   */\n      dup3\n      add\n        /* \"#utility.yul\":5728:5760   */\n      mstore\n        /* \"#utility.yul\":5792:5795   */\n      0x80\n        /* \"#utility.yul\":5777:5796   */\n      add\n      swap1\n        /* \"#utility.yul\":5578:5802   */\n      jump\t// out\n        /* \"#utility.yul\":5807:6205   */\n    tag_276:\n        /* \"#utility.yul\":6009:6011   */\n      0x20\n        /* \"#utility.yul\":5991:6012   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6048:6050   */\n      0x22\n        /* \"#utility.yul\":6028:6046   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6021:6051   */\n      mstore\n        /* \"#utility.yul\":6087:6121   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":6082:6084   */\n      0x40\n        /* \"#utility.yul\":6067:6085   */\n      dup3\n      add\n        /* \"#utility.yul\":6060:6122   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":6153:6155   */\n      0x60\n        /* \"#utility.yul\":6138:6156   */\n      dup3\n      add\n        /* \"#utility.yul\":6131:6163   */\n      mstore\n        /* \"#utility.yul\":6195:6198   */\n      0x80\n        /* \"#utility.yul\":6180:6199   */\n      add\n      swap1\n        /* \"#utility.yul\":5981:6205   */\n      jump\t// out\n        /* \"#utility.yul\":6210:6612   */\n    tag_289:\n        /* \"#utility.yul\":6412:6414   */\n      0x20\n        /* \"#utility.yul\":6394:6415   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6451:6453   */\n      0x26\n        /* \"#utility.yul\":6431:6449   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6424:6454   */\n      mstore\n        /* \"#utility.yul\":6490:6524   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6485:6487   */\n      0x40\n        /* \"#utility.yul\":6470:6488   */\n      dup3\n      add\n        /* \"#utility.yul\":6463:6525   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6556:6558   */\n      0x60\n        /* \"#utility.yul\":6541:6559   */\n      dup3\n      add\n        /* \"#utility.yul\":6534:6570   */\n      mstore\n        /* \"#utility.yul\":6602:6605   */\n      0x80\n        /* \"#utility.yul\":6587:6606   */\n      add\n      swap1\n        /* \"#utility.yul\":6384:6612   */\n      jump\t// out\n        /* \"#utility.yul\":6617:6971   */\n    tag_228:\n        /* \"#utility.yul\":6819:6821   */\n      0x20\n        /* \"#utility.yul\":6801:6822   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6858:6860   */\n      0x1e\n        /* \"#utility.yul\":6838:6856   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6831:6861   */\n      mstore\n        /* \"#utility.yul\":6897:6929   */\n      0x4d75737420686176652070617573657220726f6c6520746f2070617573650000\n        /* \"#utility.yul\":6892:6894   */\n      0x40\n        /* \"#utility.yul\":6877:6895   */\n      dup3\n      add\n        /* \"#utility.yul\":6870:6930   */\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x60\n        /* \"#utility.yul\":6947:6965   */\n      add\n      swap1\n        /* \"#utility.yul\":6791:6971   */\n      jump\t// out\n        /* \"#utility.yul\":6976:7316   */\n    tag_344:\n        /* \"#utility.yul\":7178:7180   */\n      0x20\n        /* \"#utility.yul\":7160:7181   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7217:7219   */\n      0x10\n        /* \"#utility.yul\":7197:7215   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7190:7220   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":7251:7253   */\n      0x40\n        /* \"#utility.yul\":7236:7254   */\n      dup3\n      add\n        /* \"#utility.yul\":7229:7275   */\n      mstore\n        /* \"#utility.yul\":7307:7309   */\n      0x60\n        /* \"#utility.yul\":7292:7310   */\n      add\n      swap1\n        /* \"#utility.yul\":7150:7316   */\n      jump\t// out\n        /* \"#utility.yul\":7321:7674   */\n    tag_205:\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7505:7526   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7562:7564   */\n      0x1d\n        /* \"#utility.yul\":7542:7560   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7535:7565   */\n      mstore\n        /* \"#utility.yul\":7601:7632   */\n      0x4d7573742068617665206d696e74657220726f6c6520746f206d696e74000000\n        /* \"#utility.yul\":7596:7598   */\n      0x40\n        /* \"#utility.yul\":7581:7599   */\n      dup3\n      add\n        /* \"#utility.yul\":7574:7633   */\n      mstore\n        /* \"#utility.yul\":7665:7667   */\n      0x60\n        /* \"#utility.yul\":7650:7668   */\n      add\n      swap1\n        /* \"#utility.yul\":7495:7674   */\n      jump\t// out\n        /* \"#utility.yul\":7679:8083   */\n    tag_172:\n        /* \"#utility.yul\":7881:7883   */\n      0x20\n        /* \"#utility.yul\":7863:7884   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7920:7922   */\n      0x28\n        /* \"#utility.yul\":7900:7918   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7893:7923   */\n      mstore\n        /* \"#utility.yul\":7959:7993   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":7954:7956   */\n      0x40\n        /* \"#utility.yul\":7939:7957   */\n      dup3\n      add\n        /* \"#utility.yul\":7932:7994   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":8025:8027   */\n      0x60\n        /* \"#utility.yul\":8010:8028   */\n      dup3\n      add\n        /* \"#utility.yul\":8003:8041   */\n      mstore\n        /* \"#utility.yul\":8073:8076   */\n      0x80\n        /* \"#utility.yul\":8058:8077   */\n      add\n      swap1\n        /* \"#utility.yul\":7853:8083   */\n      jump\t// out\n        /* \"#utility.yul\":8088:8488   */\n    tag_219:\n        /* \"#utility.yul\":8290:8292   */\n      0x20\n        /* \"#utility.yul\":8272:8293   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8329:8331   */\n      0x24\n        /* \"#utility.yul\":8309:8327   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8302:8332   */\n      mstore\n        /* \"#utility.yul\":8368:8402   */\n      0x45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77\n        /* \"#utility.yul\":8363:8365   */\n      0x40\n        /* \"#utility.yul\":8348:8366   */\n      dup3\n      add\n        /* \"#utility.yul\":8341:8403   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":8434:8436   */\n      0x60\n        /* \"#utility.yul\":8419:8437   */\n      dup3\n      add\n        /* \"#utility.yul\":8412:8446   */\n      mstore\n        /* \"#utility.yul\":8478:8481   */\n      0x80\n        /* \"#utility.yul\":8463:8482   */\n      add\n      swap1\n        /* \"#utility.yul\":8262:8488   */\n      jump\t// out\n        /* \"#utility.yul\":8493:8890   */\n    tag_331:\n        /* \"#utility.yul\":8695:8697   */\n      0x20\n        /* \"#utility.yul\":8677:8698   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8734:8736   */\n      0x21\n        /* \"#utility.yul\":8714:8732   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8707:8737   */\n      mstore\n        /* \"#utility.yul\":8773:8807   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8768:8770   */\n      0x40\n        /* \"#utility.yul\":8753:8771   */\n      dup3\n      add\n        /* \"#utility.yul\":8746:8808   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8839:8841   */\n      0x60\n        /* \"#utility.yul\":8824:8842   */\n      dup3\n      add\n        /* \"#utility.yul\":8817:8848   */\n      mstore\n        /* \"#utility.yul\":8880:8883   */\n      0x80\n        /* \"#utility.yul\":8865:8884   */\n      add\n      swap1\n        /* \"#utility.yul\":8667:8890   */\n      jump\t// out\n        /* \"#utility.yul\":8895:9296   */\n    tag_281:\n        /* \"#utility.yul\":9097:9099   */\n      0x20\n        /* \"#utility.yul\":9079:9100   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9136:9138   */\n      0x25\n        /* \"#utility.yul\":9116:9134   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9109:9139   */\n      mstore\n        /* \"#utility.yul\":9175:9209   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9170:9172   */\n      0x40\n        /* \"#utility.yul\":9155:9173   */\n      dup3\n      add\n        /* \"#utility.yul\":9148:9210   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9241:9243   */\n      0x60\n        /* \"#utility.yul\":9226:9244   */\n      dup3\n      add\n        /* \"#utility.yul\":9219:9254   */\n      mstore\n        /* \"#utility.yul\":9286:9289   */\n      0x80\n        /* \"#utility.yul\":9271:9290   */\n      add\n      swap1\n        /* \"#utility.yul\":9069:9296   */\n      jump\t// out\n        /* \"#utility.yul\":9301:9701   */\n    tag_273:\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"#utility.yul\":9485:9506   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9542:9544   */\n      0x24\n        /* \"#utility.yul\":9522:9540   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9515:9545   */\n      mstore\n        /* \"#utility.yul\":9581:9615   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9576:9578   */\n      0x40\n        /* \"#utility.yul\":9561:9579   */\n      dup3\n      add\n        /* \"#utility.yul\":9554:9616   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9647:9649   */\n      0x60\n        /* \"#utility.yul\":9632:9650   */\n      dup3\n      add\n        /* \"#utility.yul\":9625:9659   */\n      mstore\n        /* \"#utility.yul\":9691:9694   */\n      0x80\n        /* \"#utility.yul\":9676:9695   */\n      add\n      swap1\n        /* \"#utility.yul\":9475:9701   */\n      jump\t// out\n        /* \"#utility.yul\":9706:10062   */\n    tag_197:\n        /* \"#utility.yul\":9908:9910   */\n      0x20\n        /* \"#utility.yul\":9890:9911   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9927:9945   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9920:9950   */\n      mstore\n        /* \"#utility.yul\":9986:10020   */\n      0x4d75737420686176652070617573657220726f6c6520746f20756e7061757365\n        /* \"#utility.yul\":9981:9983   */\n      0x40\n        /* \"#utility.yul\":9966:9984   */\n      dup3\n      add\n        /* \"#utility.yul\":9959:10021   */\n      mstore\n        /* \"#utility.yul\":10053:10055   */\n      0x60\n        /* \"#utility.yul\":10038:10056   */\n      add\n      swap1\n        /* \"#utility.yul\":9880:10062   */\n      jump\t// out\n        /* \"#utility.yul\":10067:10468   */\n    tag_245:\n        /* \"#utility.yul\":10269:10271   */\n      0x20\n        /* \"#utility.yul\":10251:10272   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x25\n        /* \"#utility.yul\":10288:10306   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10281:10311   */\n      mstore\n        /* \"#utility.yul\":10347:10381   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":10342:10344   */\n      0x40\n        /* \"#utility.yul\":10327:10345   */\n      dup3\n      add\n        /* \"#utility.yul\":10320:10382   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":10413:10415   */\n      0x60\n        /* \"#utility.yul\":10398:10416   */\n      dup3\n      add\n        /* \"#utility.yul\":10391:10426   */\n      mstore\n        /* \"#utility.yul\":10458:10461   */\n      0x80\n        /* \"#utility.yul\":10443:10462   */\n      add\n      swap1\n        /* \"#utility.yul\":10241:10468   */\n      jump\t// out\n        /* \"#utility.yul\":10473:10884   */\n    tag_305:\n        /* \"#utility.yul\":10675:10677   */\n      0x20\n        /* \"#utility.yul\":10657:10678   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10714:10716   */\n      0x2f\n        /* \"#utility.yul\":10694:10712   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10687:10717   */\n      mstore\n        /* \"#utility.yul\":10753:10787   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":10748:10750   */\n      0x40\n        /* \"#utility.yul\":10733:10751   */\n      dup3\n      add\n        /* \"#utility.yul\":10726:10788   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":10819:10821   */\n      0x60\n        /* \"#utility.yul\":10804:10822   */\n      dup3\n      add\n        /* \"#utility.yul\":10797:10842   */\n      mstore\n        /* \"#utility.yul\":10874:10877   */\n      0x80\n        /* \"#utility.yul\":10859:10878   */\n      add\n      swap1\n        /* \"#utility.yul\":10647:10884   */\n      jump\t// out\n        /* \"#utility.yul\":10889:11244   */\n    tag_322:\n        /* \"#utility.yul\":11091:11093   */\n      0x20\n        /* \"#utility.yul\":11073:11094   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11130:11132   */\n      0x1f\n        /* \"#utility.yul\":11110:11128   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11103:11133   */\n      mstore\n        /* \"#utility.yul\":11169:11202   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":11164:11166   */\n      0x40\n        /* \"#utility.yul\":11149:11167   */\n      dup3\n      add\n        /* \"#utility.yul\":11142:11203   */\n      mstore\n        /* \"#utility.yul\":11235:11237   */\n      0x60\n        /* \"#utility.yul\":11220:11238   */\n      add\n      swap1\n        /* \"#utility.yul\":11063:11244   */\n      jump\t// out\n        /* \"#utility.yul\":11249:11655   */\n    tag_411:\n        /* \"#utility.yul\":11451:11453   */\n      0x20\n        /* \"#utility.yul\":11433:11454   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11490:11492   */\n      0x2a\n        /* \"#utility.yul\":11470:11488   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11463:11493   */\n      mstore\n        /* \"#utility.yul\":11529:11563   */\n      0x45524332305061757361626c653a20746f6b656e207472616e73666572207768\n        /* \"#utility.yul\":11524:11526   */\n      0x40\n        /* \"#utility.yul\":11509:11527   */\n      dup3\n      add\n        /* \"#utility.yul\":11502:11564   */\n      mstore\n      shl(0xb2, 0x1a5b19481c185d5cd959)\n        /* \"#utility.yul\":11595:11597   */\n      0x60\n        /* \"#utility.yul\":11580:11598   */\n      dup3\n      add\n        /* \"#utility.yul\":11573:11613   */\n      mstore\n        /* \"#utility.yul\":11645:11648   */\n      0x80\n        /* \"#utility.yul\":11630:11649   */\n      add\n      swap1\n        /* \"#utility.yul\":11423:11655   */\n      jump\t// out\n        /* \"#utility.yul\":11842:12026   */\n    tag_75:\n        /* \"#utility.yul\":12014:12018   */\n      0xff\n        /* \"#utility.yul\":12002:12019   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11984:12020   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11972:11974   */\n      0x20\n        /* \"#utility.yul\":11957:11975   */\n      add\n      swap1\n        /* \"#utility.yul\":11939:12026   */\n      jump\t// out\n        /* \"#utility.yul\":12031:12159   */\n    tag_191:\n      0x00\n        /* \"#utility.yul\":12102:12103   */\n      dup3\n        /* \"#utility.yul\":12098:12104   */\n      not\n        /* \"#utility.yul\":12095:12096   */\n      dup3\n        /* \"#utility.yul\":12092:12105   */\n      gt\n        /* \"#utility.yul\":12089:12091   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":12108:12126   */\n      tag_495\n      tag_496\n      jump\t// in\n    tag_495:\n      pop\n        /* \"#utility.yul\":12144:12153   */\n      add\n      swap1\n        /* \"#utility.yul\":12079:12159   */\n      jump\t// out\n        /* \"#utility.yul\":12164:12332   */\n    tag_414:\n      0x00\n        /* \"#utility.yul\":12270:12271   */\n      dup2\n        /* \"#utility.yul\":12266:12267   */\n      0x00\n        /* \"#utility.yul\":12262:12268   */\n      not\n        /* \"#utility.yul\":12258:12272   */\n      div\n        /* \"#utility.yul\":12255:12256   */\n      dup4\n        /* \"#utility.yul\":12252:12273   */\n      gt\n        /* \"#utility.yul\":12247:12248   */\n      dup3\n        /* \"#utility.yul\":12240:12249   */\n      iszero\n        /* \"#utility.yul\":12233:12250   */\n      iszero\n        /* \"#utility.yul\":12229:12274   */\n      and\n        /* \"#utility.yul\":12226:12228   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":12277:12295   */\n      tag_499\n      tag_496\n      jump\t// in\n    tag_499:\n      pop\n        /* \"#utility.yul\":12317:12326   */\n      mul\n      swap1\n        /* \"#utility.yul\":12216:12332   */\n      jump\t// out\n        /* \"#utility.yul\":12337:12462   */\n    tag_337:\n      0x00\n        /* \"#utility.yul\":12405:12406   */\n      dup3\n        /* \"#utility.yul\":12402:12403   */\n      dup3\n        /* \"#utility.yul\":12399:12407   */\n      lt\n        /* \"#utility.yul\":12396:12398   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":12410:12428   */\n      tag_502\n      tag_496\n      jump\t// in\n    tag_502:\n      pop\n        /* \"#utility.yul\":12447:12456   */\n      sub\n      swap1\n        /* \"#utility.yul\":12386:12462   */\n      jump\t// out\n        /* \"#utility.yul\":12467:12725   */\n    tag_465:\n        /* \"#utility.yul\":12539:12540   */\n      0x00\n        /* \"#utility.yul\":12549:12662   */\n    tag_504:\n        /* \"#utility.yul\":12563:12569   */\n      dup4\n        /* \"#utility.yul\":12560:12561   */\n      dup2\n        /* \"#utility.yul\":12557:12570   */\n      lt\n        /* \"#utility.yul\":12549:12662   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":12639:12650   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12633:12651   */\n      mload\n        /* \"#utility.yul\":12620:12631   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":12613:12652   */\n      mstore\n        /* \"#utility.yul\":12585:12587   */\n      0x20\n        /* \"#utility.yul\":12578:12588   */\n      add\n        /* \"#utility.yul\":12549:12662   */\n      jump(tag_504)\n    tag_506:\n        /* \"#utility.yul\":12680:12686   */\n      dup4\n        /* \"#utility.yul\":12677:12678   */\n      dup2\n        /* \"#utility.yul\":12674:12687   */\n      gt\n        /* \"#utility.yul\":12671:12673   */\n      iszero\n      tag_292\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":12715:12716   */\n      0x00\n        /* \"#utility.yul\":12697:12713   */\n      swap2\n      add\n        /* \"#utility.yul\":12690:12717   */\n      mstore\n        /* \"#utility.yul\":12520:12725   */\n      jump\t// out\n        /* \"#utility.yul\":12730:12866   */\n    tag_428:\n      0x00\n        /* \"#utility.yul\":12797:12802   */\n      dup2\n        /* \"#utility.yul\":12787:12789   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":12806:12824   */\n      tag_510\n      tag_496\n      jump\t// in\n    tag_510:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":12842:12860   */\n      add\n      swap1\n        /* \"#utility.yul\":12777:12866   */\n      jump\t// out\n        /* \"#utility.yul\":12871:13251   */\n    tag_155:\n        /* \"#utility.yul\":12956:12957   */\n      0x02\n        /* \"#utility.yul\":12946:12958   */\n      dup2\n      div\n        /* \"#utility.yul\":13003:13004   */\n      0x01\n        /* \"#utility.yul\":12993:13005   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":13014:13016   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":13068:13072   */\n      0x7f\n        /* \"#utility.yul\":13060:13066   */\n      dup3\n        /* \"#utility.yul\":13056:13073   */\n      and\n        /* \"#utility.yul\":13046:13073   */\n      swap2\n      pop\n        /* \"#utility.yul\":13014:13016   */\n    tag_512:\n        /* \"#utility.yul\":13121:13123   */\n      0x20\n        /* \"#utility.yul\":13113:13119   */\n      dup3\n        /* \"#utility.yul\":13110:13124   */\n      lt\n        /* \"#utility.yul\":13090:13108   */\n      dup2\n        /* \"#utility.yul\":13087:13125   */\n      eq\n        /* \"#utility.yul\":13084:13086   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":13167:13177   */\n      0x4e487b71\n        /* \"#utility.yul\":13162:13165   */\n      0xe0\n        /* \"#utility.yul\":13158:13178   */\n      shl\n        /* \"#utility.yul\":13155:13156   */\n      0x00\n        /* \"#utility.yul\":13148:13179   */\n      mstore\n        /* \"#utility.yul\":13202:13206   */\n      0x22\n        /* \"#utility.yul\":13199:13200   */\n      0x04\n        /* \"#utility.yul\":13192:13207   */\n      mstore\n        /* \"#utility.yul\":13230:13234   */\n      0x24\n        /* \"#utility.yul\":13227:13228   */\n      0x00\n        /* \"#utility.yul\":13220:13235   */\n      revert\n        /* \"#utility.yul\":13084:13086   */\n    tag_513:\n      pop\n        /* \"#utility.yul\":12926:13251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13256:13383   */\n    tag_496:\n        /* \"#utility.yul\":13317:13327   */\n      0x4e487b71\n        /* \"#utility.yul\":13312:13315   */\n      0xe0\n        /* \"#utility.yul\":13308:13328   */\n      shl\n        /* \"#utility.yul\":13305:13306   */\n      0x00\n        /* \"#utility.yul\":13298:13329   */\n      mstore\n        /* \"#utility.yul\":13348:13352   */\n      0x11\n        /* \"#utility.yul\":13345:13346   */\n      0x04\n        /* \"#utility.yul\":13338:13353   */\n      mstore\n        /* \"#utility.yul\":13372:13376   */\n      0x24\n        /* \"#utility.yul\":13369:13370   */\n      0x00\n        /* \"#utility.yul\":13362:13377   */\n      revert\n\n    auxdata: 0xa2646970667358221220464c8841ca6b35160adf247900c10d011801c28f59ded1b0559bf3153a78176b64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2015:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:815:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "138:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "145:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "108:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "116:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "104:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "123:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "93:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:35:1"
															},
															"nodeType": "YulIf",
															"src": "90:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "162:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "172:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "166:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "194:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "212:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "216:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "220:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "245:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "247:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "247:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "247:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "237:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "241:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "234:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:10:1"
															},
															"nodeType": "YulIf",
															"src": "231:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "276:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "296:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "290:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "280:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "318:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "312:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:67:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "373:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "377:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "369:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "384:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "384:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:27:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:40:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "395:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:49:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "335:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "459:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "416:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "428:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "413:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "436:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "448:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "433:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "410:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:46:1"
															},
															"nodeType": "YulIf",
															"src": "407:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "499:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "534:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "592:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "599:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "560:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "568:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "556:15:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "578:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "549:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:33:1"
															},
															"nodeType": "YulIf",
															"src": "546:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "616:14:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "625:5:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "620:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "714:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "722:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "710:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "710:14:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "726:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "706:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "706:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "745:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "753:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "741:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "741:14:1"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "757:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "737:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "737:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "731:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "731:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "650:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "647:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "657:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "659:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "668:1:1"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "671:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "664:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "659:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "643:3:1",
																"statements": []
															},
															"src": "639:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "831:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "839:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "827:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "827:15:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "844:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "823:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "823:24:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "849:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "787:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "790:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "784:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:9:1"
															},
															"nodeType": "YulIf",
															"src": "781:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "883:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "874:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "54:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "62:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "70:5:1",
														"type": ""
													}
												],
												"src": "14:881:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1064:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1073:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1081:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1039:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1035:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:32:1"
															},
															"nodeType": "YulIf",
															"src": "1028:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1099:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1103:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1138:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1160:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1142:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1193:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1202:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1210:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1178:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:14:1"
															},
															"nodeType": "YulIf",
															"src": "1175:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1228:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1293:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1238:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:63:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1314:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1389:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1376:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:16:1"
															},
															"nodeType": "YulIf",
															"src": "1360:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1471:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1482:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1425:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:65:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "976:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "987:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "999:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1007:6:1",
														"type": ""
													}
												],
												"src": "900:596:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1566:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1580:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1597:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1627:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1601:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1676:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1690:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1698:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1686:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1654:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:26:1"
															},
															"nodeType": "YulIf",
															"src": "1644:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1764:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1792:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1797:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1788:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1788:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1778:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1778:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1832:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:38:1"
															},
															"nodeType": "YulIf",
															"src": "1714:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1536:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1545:6:1",
														"type": ""
													}
												],
												"src": "1501:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1938:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1928:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1978:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001fef38038062001fef8339810160408190526200003491620003ce565b8151829082906200004d9060059060208501906200027d565b508051620000639060069060208401906200027d565b50506007805460ff191690555062000086600062000080620000ec565b620000f0565b620000b57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a662000080620000ec565b620000e47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a62000080620000ec565b505062000488565b3390565b6200010782826200013360201b620008e91760201c565b60008281526001602090815260409091206200012e918390620008f362000143821b17901c565b505050565b6200013f828262000163565b5050565b60006200015a836001600160a01b038416620001ed565b90505b92915050565b6200016f82826200023c565b6200013f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a9620000ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001fb838362000265565b62000233575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200015d565b5060006200015d565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60009081526001919091016020526040902054151590565b8280546200028b9062000435565b90600052602060002090601f016020900481019282620002af5760008555620002fa565b82601f10620002ca57805160ff1916838001178555620002fa565b82800160010185558215620002fa579182015b82811115620002fa578251825591602001919060010190620002dd565b50620003089291506200030c565b5090565b5b808211156200030857600081556001016200030d565b600082601f83011262000334578081fd5b81516001600160401b038082111562000351576200035162000472565b6040516020601f8401601f191682018101838111838210171562000379576200037962000472565b604052838252858401810187101562000390578485fd5b8492505b83831015620003b3578583018101518284018201529182019162000394565b83831115620003c457848185840101525b5095945050505050565b60008060408385031215620003e1578182fd5b82516001600160401b0380821115620003f8578384fd5b620004068683870162000323565b935060208501519150808211156200041c578283fd5b506200042b8582860162000323565b9150509250929050565b6002810460018216806200044a57607f821691505b602082108114156200046c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611b5780620004986000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d7366004611491565b6103bb565b6040516101e99190611542565b60405180910390f35b6101fa6103e8565b6040516101e99190611556565b6101dc61021536600461140d565b61047a565b610222610498565b6040516101e9919061154d565b6101dc61023d3660046113d2565b61049e565b610222610250366004611436565b610537565b61026861026336600461144e565b61054c565b005b610272610573565b6040516101e99190611a31565b61026861028d36600461144e565b610578565b6101dc6102a036600461140d565b61059a565b6102686105ee565b6102686102bb36600461140d565b610640565b6102686102ce366004611436565b610696565b6101dc6106aa565b6102226102e9366004611386565b6106b3565b6102686102fc36600461140d565b6106ce565b61026861071c565b61031c610317366004611470565b61076c565b6040516101e9919061152e565b6101dc61033736600461144e565b61078b565b6101fa6107b4565b6102226107c3565b6101dc61035a36600461140d565b6107c8565b6101dc61036d36600461140d565b610841565b610222610380366004611436565b610855565b61022261086c565b61026861039b36600461144e565b610890565b6102226103ae3660046113a0565b61089a565b6102226108c5565b60006001600160e01b03198216635a05180f60e01b14806103e057506103e082610908565b90505b919050565b6060600580546103f790611ad0565b80601f016020809104026020016040519081016040528092919081815260200182805461042390611ad0565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050905090565b600061048e61048761092d565b8484610931565b5060015b92915050565b60045490565b60006104ab8484846109e5565b6001600160a01b0384166000908152600360205260408120816104cc61092d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156105185760405162461bcd60e51b815260040161050f90611791565b60405180910390fd5b61052c8561052461092d565b858403610931565b506001949350505050565b60009081526020819052604090206001015490565b6105568282610b0f565b600082815260016020526040902061056e90826108f3565b505050565b601290565b6105828282610b33565b600082815260016020526040902061056e9082610b75565b600061048e6105a761092d565b8484600360006105b561092d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546105e99190611a3f565b610931565b61061a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61033761092d565b6106365760405162461bcd60e51b815260040161050f906118e7565b61063e610b8a565b565b61066c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661033761092d565b6106885760405162461bcd60e51b815260040161050f9061175a565b6106928282610bf8565b5050565b6106a76106a161092d565b82610cc0565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b60006106dc836103ae61092d565b9050818110156106fe5760405162461bcd60e51b815260040161050f906117d9565b6107128361070a61092d565b848403610931565b61056e8383610cc0565b6107487f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61033761092d565b6107645760405162461bcd60e51b815260040161050f906116f9565b61063e610db1565b60008281526001602052604081206107849083610e0c565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546103f790611ad0565b600081565b600080600360006107d761092d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108235760405162461bcd60e51b815260040161050f9061191c565b61083761082e61092d565b85858403610931565b5060019392505050565b600061048e61084e61092d565b84846109e5565b60008181526001602052604081206103e090610e18565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6105828282610e23565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6106928282610e42565b6000610784836001600160a01b038416610ec7565b60006001600160e01b03198216637965db0b60e01b14806103e057506103e082610f11565b3390565b6001600160a01b0383166109575760405162461bcd60e51b815260040161050f906118a3565b6001600160a01b03821661097d5760405162461bcd60e51b815260040161050f90611671565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109d890859061154d565b60405180910390a3505050565b6001600160a01b038316610a0b5760405162461bcd60e51b815260040161050f9061185e565b6001600160a01b038216610a315760405162461bcd60e51b815260040161050f906115be565b610a3c838383610f2a565b6001600160a01b03831660009081526002602052604090205481811015610a755760405162461bcd60e51b815260040161050f906116b3565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610aac908490611a3f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610af6919061154d565b60405180910390a3610b0984848461056e565b50505050565b610b1882610537565b610b2981610b2461092d565b610f35565b61056e8383610e42565b610b3b61092d565b6001600160a01b0316816001600160a01b031614610b6b5760405162461bcd60e51b815260040161050f90611961565b6106928282610f99565b6000610784836001600160a01b03841661101c565b610b926106aa565b610bae5760405162461bcd60e51b815260040161050f90611601565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610be161092d565b604051610bee919061152e565b60405180910390a1565b6001600160a01b038216610c1e5760405162461bcd60e51b815260040161050f906119b0565b610c2a60008383610f2a565b8060046000828254610c3c9190611a3f565b90915550506001600160a01b03821660009081526002602052604081208054839290610c69908490611a3f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cac90859061154d565b60405180910390a36106926000838361056e565b6001600160a01b038216610ce65760405162461bcd60e51b815260040161050f9061181d565b610cf282600083610f2a565b6001600160a01b03821660009081526002602052604090205481811015610d2b5760405162461bcd60e51b815260040161050f9061162f565b6001600160a01b0383166000908152600260205260408120838303905560048054849290610d5a908490611a76565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d9d90869061154d565b60405180910390a361056e8360008461056e565b610db96106aa565b15610dd65760405162461bcd60e51b815260040161050f90611730565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610be161092d565b60006107848383611139565b60006103e082611171565b610e2c82610537565b610e3881610b2461092d565b61056e8383610f99565b610e4c828261078b565b610692576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e8361092d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610ed38383611175565b610f0957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610492565b506000610492565b6001600160e01b031981166301ffc9a760e01b14919050565b61056e83838361118d565b610f3f828261078b565b61069257610f57816001600160a01b031660146111bd565b610f628360206111bd565b604051602001610f739291906114b9565b60408051601f198184030181529082905262461bcd60e51b825261050f91600401611556565b610fa3828261078b565b15610692576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610fd861092d565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000818152600183016020526040812054801561112f576000611040600183611a76565b855490915060009061105490600190611a76565b90508181146110d557600086600001828154811061108257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106110b357634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110f457634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610492565b6000915050610492565b600082600001828154811061115e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b61119883838361056e565b6111a06106aa565b1561056e5760405162461bcd60e51b815260040161050f906119e7565b606060006111cc836002611a57565b6111d7906002611a3f565b67ffffffffffffffff8111156111fd57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611227576020820181803683370190505b509050600360fc1b8160008151811061125057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061128d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006112b1846002611a57565b6112bc906001611a3f565b90505b6001811115611350576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106112fe57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061132257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361134981611ab9565b90506112bf565b5083156107845760405162461bcd60e51b815260040161050f90611589565b80356001600160a01b03811681146103e357600080fd5b600060208284031215611397578081fd5b6107848261136f565b600080604083850312156113b2578081fd5b6113bb8361136f565b91506113c96020840161136f565b90509250929050565b6000806000606084860312156113e6578081fd5b6113ef8461136f565b92506113fd6020850161136f565b9150604084013590509250925092565b6000806040838503121561141f578182fd5b6114288361136f565b946020939093013593505050565b600060208284031215611447578081fd5b5035919050565b60008060408385031215611460578182fd5b823591506113c96020840161136f565b60008060408385031215611482578182fd5b50508035926020909101359150565b6000602082840312156114a2578081fd5b81356001600160e01b031981168114610784578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516114f1816017850160208801611a8d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611522816028840160208801611a8d565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611575816040850160208701611a8d565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601e908201527f4d75737420686176652070617573657220726f6c6520746f2070617573650000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f4d7573742068617665206d696e74657220726f6c6520746f206d696e74000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252818101527f4d75737420686176652070617573657220726f6c6520746f20756e7061757365604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b60ff91909116815260200190565b60008219821115611a5257611a52611b0b565b500190565b6000816000190483118215151615611a7157611a71611b0b565b500290565b600082821015611a8857611a88611b0b565b500390565b60005b83811015611aa8578181015183820152602001611a90565b83811115610b095750506000910152565b600081611ac857611ac8611b0b565b506000190190565b600281046001821680611ae457607f821691505b60208210811415611b0557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220464c8841ca6b35160adf247900c10d011801c28f59ded1b0559bf3153a78176b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FEF CODESIZE SUB DUP1 PUSH3 0x1FEF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3CE JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x27D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x27D JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x86 PUSH1 0x0 PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST PUSH3 0xF0 JUMP JUMPDEST PUSH3 0xB5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST PUSH3 0xE4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x80 PUSH3 0xEC JUMP JUMPDEST POP POP PUSH3 0x488 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0x107 DUP3 DUP3 PUSH3 0x133 PUSH1 0x20 SHL PUSH3 0x8E9 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x12E SWAP2 DUP4 SWAP1 PUSH3 0x8F3 PUSH3 0x143 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x13F DUP3 DUP3 PUSH3 0x163 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15A DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x1ED JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x16F DUP3 DUP3 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x13F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1A9 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FB DUP4 DUP4 PUSH3 0x265 JUMP JUMPDEST PUSH3 0x233 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x15D JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x15D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x28B SWAP1 PUSH3 0x435 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2AF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2FA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2CA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2FA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2FA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2FA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2DD JUMP JUMPDEST POP PUSH3 0x308 SWAP3 SWAP2 POP PUSH3 0x30C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x30D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x334 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x351 JUMPI PUSH3 0x351 PUSH3 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x379 JUMPI PUSH3 0x379 PUSH3 0x472 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x390 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x3B3 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x394 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x3C4 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3E1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3F8 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x406 DUP7 DUP4 DUP8 ADD PUSH3 0x323 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x41C JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x42B DUP6 DUP3 DUP7 ADD PUSH3 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x44A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x46C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B57 DUP1 PUSH3 0x498 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x372 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x344 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x301 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x292 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x255 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x222 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x222 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x268 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x268 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x222 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH2 0x3E0 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3F7 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x423 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x470 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x445 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x470 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x453 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x487 PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB DUP5 DUP5 DUP5 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x4CC PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52C DUP6 PUSH2 0x524 PUSH2 0x92D JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x556 DUP3 DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP3 PUSH2 0x8F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x582 DUP3 DUP3 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x5A7 PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x61A PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xB8A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xBF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x6A1 PUSH2 0x92D JUMP JUMPDEST DUP3 PUSH2 0xCC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DC DUP4 PUSH2 0x3AE PUSH2 0x92D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x712 DUP4 PUSH2 0x70A PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x748 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x784 SWAP1 DUP4 PUSH2 0xE0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x3F7 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x7D7 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x837 PUSH2 0x82E PUSH2 0x92D JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x84E PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E0 SWAP1 PUSH2 0xE18 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x582 DUP3 DUP3 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH2 0x3E0 DUP3 PUSH2 0xF11 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x9D8 SWAP1 DUP6 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0xA3C DUP4 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAAC SWAP1 DUP5 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB09 DUP5 DUP5 DUP5 PUSH2 0x56E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB18 DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH2 0xB29 DUP2 PUSH2 0xB24 PUSH2 0x92D JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x101C JUMP JUMPDEST PUSH2 0xB92 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBE1 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xC2A PUSH1 0x0 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC69 SWAP1 DUP5 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xCAC SWAP1 DUP6 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x692 PUSH1 0x0 DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0xCF2 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD5A SWAP1 DUP5 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD9D SWAP1 DUP7 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x56E DUP4 PUSH1 0x0 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x6AA JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBE1 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0xE2C DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH2 0xE38 DUP2 PUSH2 0xB24 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0xE4C DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH2 0x692 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE83 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED3 DUP4 DUP4 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0xF09 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x492 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 DUP4 PUSH2 0x118D JUMP JUMPDEST PUSH2 0xF3F DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH2 0x692 JUMPI PUSH2 0xF57 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0xF62 DUP4 PUSH1 0x20 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF73 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x50F SWAP2 PUSH1 0x4 ADD PUSH2 0x1556 JUMP JUMPDEST PUSH2 0xFA3 DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xFD8 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 PUSH2 0x1040 PUSH1 0x1 DUP4 PUSH2 0x1A76 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1054 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1082 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x10F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x115E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1198 DUP4 DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x11A0 PUSH2 0x6AA JUMP JUMPDEST ISZERO PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x11CC DUP4 PUSH1 0x2 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x11D7 SWAP1 PUSH1 0x2 PUSH2 0x1A3F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x128D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x12B1 DUP5 PUSH1 0x2 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x12BC SWAP1 PUSH1 0x1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1350 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x12FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1322 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1349 DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12BF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1589 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1397 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x784 DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13BB DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x13C9 PUSH1 0x20 DUP5 ADD PUSH2 0x136F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13EF DUP5 PUSH2 0x136F JUMP JUMPDEST SWAP3 POP PUSH2 0x13FD PUSH1 0x20 DUP6 ADD PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1428 DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1447 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1460 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13C9 PUSH1 0x20 DUP5 ADD PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x784 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x14F1 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1A8D JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1522 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1A8D JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1575 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420686176652070617573657220726F6C6520746F2070617573650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4D75737420686176652070617573657220726F6C6520746F20756E7061757365 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A52 JUMPI PUSH2 0x1A52 PUSH2 0x1B0B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x1B0B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A88 PUSH2 0x1B0B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB09 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1AC8 JUMPI PUSH2 0x1AC8 PUSH2 0x1B0B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C DUP9 COINBASE 0xCA PUSH12 0x35160ADF247900C10D011801 0xC2 DUP16 MSIZE 0xDE 0xD1 0xB0 SSTORE SWAP12 RETURN ISZERO GASPRICE PUSH25 0x176B64736F6C63430008000033000000000000000000000000 ",
							"sourceMap": "50497:1152:0:-:0;;;50731:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6320:13;;50791:4;;50797:6;;6320:13;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6343:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;18311:7:0;:15;;-1:-1:-1;;18311:15:0;;;-1:-1:-1;50815:44:0::1;18321:5:::0;50846:12:::1;:10;:12::i;:::-;50815:10;:44::i;:::-;50870:37;50627:24;50894:12;:10;:12::i;50870:37::-;50917;50695:24;50941:12;:10;:12::i;50917:37::-;50731:230:::0;;50497:1152;;4183:96;4262:10;4183:96;:::o;50235:166::-;50322:31;50339:4;50345:7;50322:16;;;;;:31;;:::i;:::-;50363:18;;;;:12;:18;;;;;;;;:31;;50386:7;;50363:22;;;;;:31;;:::i;:::-;;50235:166;;:::o;34414:110::-;34492:25;34503:4;34509:7;34492:10;:25::i;:::-;34414:110;;:::o;42974:150::-;43044:4;43067:50;43072:3;-1:-1:-1;;;;;43092:23:0;;43067:4;:50::i;:::-;43060:57;;42974:150;;;;;:::o;34902:224::-;34976:22;34984:4;34990:7;34976;:22::i;:::-;34971:149;;35014:6;:12;;;;;;;;;;;-1:-1:-1;;;;;35014:29:0;;;;;;;;;:36;;-1:-1:-1;;35014:36:0;35046:4;35014:36;;;35096:12;:10;:12::i;:::-;-1:-1:-1;;;;;35069:40:0;35087:7;-1:-1:-1;;;;;35069:40:0;35081:4;35069:40;;;;;;;;;;34902:224;;:::o;37059:404::-;37122:4;37143:21;37153:3;37158:5;37143:9;:21::i;:::-;37138:319;;-1:-1:-1;37180:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;37360:18;;37338:19;;;:12;;;:19;;;;;;:40;;;;37392:11;;37138:319;-1:-1:-1;37441:5:0;37434:12;;31164:137;31242:4;31265:12;;;;;;;;;;;-1:-1:-1;;;;;31265:29:0;;;;;;;;;;;;;;;31164:137::o;39100:127::-;39173:4;39196:19;;;:12;;;;;:19;;;;;;:24;;;39100:127::o;50497:1152::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;50497:1152:0;;;-1:-1:-1;50497:1152:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:1;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:1;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:1;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:1;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:1;80:815;-1:-1:-1;;;;;80:815:1:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:1;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;50497:1152:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13385:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "397:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:1"
															},
															"nodeType": "YulIf",
															"src": "790:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:1",
														"type": ""
													}
												],
												"src": "676:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:1"
															},
															"nodeType": "YulIf",
															"src": "1120:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:1",
														"type": ""
													}
												],
												"src": "1023:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1364:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1419:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:32:1"
															},
															"nodeType": "YulIf",
															"src": "1374:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1445:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1455:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1330:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1341:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1353:6:1",
														"type": ""
													}
												],
												"src": "1294:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1622:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1631:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1639:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1624:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1624:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1624:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1597:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1606:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:32:1"
															},
															"nodeType": "YulIf",
															"src": "1586:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1657:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1680:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1667:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1699:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1709:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1534:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1545:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1557:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1565:6:1",
														"type": ""
													}
												],
												"src": "1489:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1893:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1902:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1910:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1895:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1895:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1895:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1868:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1877:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1889:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:32:1"
															},
															"nodeType": "YulIf",
															"src": "1857:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1928:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1951:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1970:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1980:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1816:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1828:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1836:6:1",
														"type": ""
													}
												],
												"src": "1760:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2092:237:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2138:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2147:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2155:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2140:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2140:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:32:1"
															},
															"nodeType": "YulIf",
															"src": "2102:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2173:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2199:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2186:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2177:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2282:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2290:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2231:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2242:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2253:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2249:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2249:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2238:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2238:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2228:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:51:1"
															},
															"nodeType": "YulIf",
															"src": "2218:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2308:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2318:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2058:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2069:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2081:6:1",
														"type": ""
													}
												],
												"src": "2023:306:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2404:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2450:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2459:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2467:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2452:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2452:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:32:1"
															},
															"nodeType": "YulIf",
															"src": "2414:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2485:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2495:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2370:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2381:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2393:6:1",
														"type": ""
													}
												],
												"src": "2334:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2918:397:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2935:3:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2940:25:1",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:38:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2975:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2995:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2989:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2979:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3037:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3045:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3056:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3061:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:12:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3011:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3011:62:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3096:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3101:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3092:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3086:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3128:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3132:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3124:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3137:19:1",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3117:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3188:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3182:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "3170:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3230:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3238:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3249:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:1",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3245:11:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "3258:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3204:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3276:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3291:2:1"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "3295:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:17:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3283:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:26:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2886:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2891:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2910:3:1",
														"type": ""
													}
												],
												"src": "2529:786:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3421:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3443:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3473:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3488:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3504:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3509:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3500:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3500:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3513:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3466:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3412:4:1",
														"type": ""
													}
												],
												"src": "3320:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3623:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3633:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3633:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3675:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3700:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3693:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3693:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3686:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3668:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3603:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3614:4:1",
														"type": ""
													}
												],
												"src": "3528:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3831:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3873:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3884:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3790:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3801:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3812:4:1",
														"type": ""
													}
												],
												"src": "3720:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4023:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4040:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4063:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4083:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4077:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4067:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4099:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4168:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4176:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4164:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4196:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4181:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4201:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4142:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4142:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4217:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4233:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4252:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4260:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4248:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4248:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4269:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4265:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4265:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4244:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4244:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3992:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4003:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4014:4:1",
														"type": ""
													}
												],
												"src": "3902:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4464:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4481:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4492:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4474:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4526:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4511:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4504:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4504:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4565:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4570:34:1",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4543:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4614:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4626:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4637:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4614:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4441:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4455:4:1",
														"type": ""
													}
												],
												"src": "4290:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4825:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4842:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4865:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4931:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4997:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4982:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5002:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5017:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5029:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5040:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5017:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4802:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4816:4:1",
														"type": ""
													}
												],
												"src": "4651:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5246:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5280:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5291:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5276:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5269:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5330:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5335:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5367:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5379:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5367:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5206:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5220:4:1",
														"type": ""
													}
												],
												"src": "5055:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5578:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5595:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5588:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5625:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5645:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5618:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5679:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5664:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5684:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5739:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5750:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5735:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5735:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5755:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5728:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5769:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5781:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5792:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5769:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5555:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5569:4:1",
														"type": ""
													}
												],
												"src": "5404:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6082:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6067:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6087:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6142:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6153:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6138:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6158:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6131:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6131:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6172:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6172:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5958:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5972:4:1",
														"type": ""
													}
												],
												"src": "5807:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6384:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6446:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6431:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6451:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6424:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6485:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6470:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6490:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6463:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6556:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6561:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6579:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6591:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6602:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6579:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6361:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6375:4:1",
														"type": ""
													}
												],
												"src": "6210:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6808:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6819:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6801:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6838:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6858:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6831:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6881:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6892:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6877:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6897:32:1",
																		"type": "",
																		"value": "Must have pauser role to pause"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6870:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6939:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6947:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6939:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_675d6be86aea312aa872194d54463171d5d8d72006f0b3de6f269bf84d56396f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6768:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6782:4:1",
														"type": ""
													}
												],
												"src": "6617:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7150:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7160:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7160:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7212:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7240:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7251:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7236:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7256:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7229:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7229:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7229:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7284:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7296:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7307:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7141:4:1",
														"type": ""
													}
												],
												"src": "6976:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7495:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7523:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7557:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7542:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7535:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7535:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7585:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7596:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7581:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7581:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7601:31:1",
																		"type": "",
																		"value": "Must have minter role to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7574:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7574:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7472:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7486:4:1",
														"type": ""
													}
												],
												"src": "7321:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7853:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7863:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7900:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7893:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7893:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7954:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7939:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7959:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8025:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8010:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8030:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8003:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8050:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8073:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8050:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7830:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7844:4:1",
														"type": ""
													}
												],
												"src": "7679:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8262:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8279:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8290:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8272:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8324:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8329:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8302:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8352:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8363:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8348:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8368:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8341:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8341:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8423:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8434:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8419:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8439:6:1",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8412:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8455:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8467:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8478:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8455:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8239:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8253:4:1",
														"type": ""
													}
												],
												"src": "8088:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8667:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8684:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8695:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8677:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8677:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8729:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8734:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8773:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8746:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8844:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8857:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8869:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8880:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8857:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8644:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8658:4:1",
														"type": ""
													}
												],
												"src": "8493:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9069:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9086:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9097:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9079:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9079:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9079:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9131:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9116:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9116:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9136:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9109:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9170:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9155:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9175:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9148:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9241:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9246:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9219:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9219:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9263:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9275:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9286:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9263:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9046:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9060:4:1",
														"type": ""
													}
												],
												"src": "8895:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9475:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9485:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9522:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9576:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9561:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9581:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9554:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9647:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9652:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9668:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9680:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9691:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9676:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9668:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9452:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9466:4:1",
														"type": ""
													}
												],
												"src": "9301:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9880:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9897:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9890:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9931:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9942:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9927:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9947:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9981:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9966:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9986:34:1",
																		"type": "",
																		"value": "Must have pauser role to unpause"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9959:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9959:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10030:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10053:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e10e367bc1c2b7ba783509b73c4559904203478c03c627f3695b4a65fc3e108f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9857:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9871:4:1",
														"type": ""
													}
												],
												"src": "9706:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10241:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10258:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10269:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10251:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10292:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10303:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10288:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10281:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10331:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10342:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10327:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10347:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10402:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10413:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10398:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10418:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10391:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10435:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10447:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10458:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10435:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10218:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10232:4:1",
														"type": ""
													}
												],
												"src": "10067:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10647:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10664:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10675:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10657:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10698:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10709:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10694:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10694:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10714:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10687:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10748:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10733:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10753:34:1",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10726:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10726:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10804:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10824:17:1",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10797:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10797:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10851:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10874:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10859:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10851:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10624:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10638:4:1",
														"type": ""
													}
												],
												"src": "10473:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11080:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11091:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11073:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11130:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11153:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11164:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11169:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11212:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11224:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11235:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11220:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11220:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11212:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11040:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11054:4:1",
														"type": ""
													}
												],
												"src": "10889:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11423:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11440:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11451:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11433:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11433:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11485:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11470:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11490:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11463:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11463:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11524:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11509:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11529:34:1",
																		"type": "",
																		"value": "ERC20Pausable: token transfer wh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11502:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11502:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11584:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11595:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11580:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11600:12:1",
																		"type": "",
																		"value": "ile paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11573:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11573:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11622:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11645:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11630:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11630:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11622:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11400:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11414:4:1",
														"type": ""
													}
												],
												"src": "11249:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11761:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11771:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11779:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11771:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11813:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11824:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11806:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11806:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11730:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11752:4:1",
														"type": ""
													}
												],
												"src": "11660:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11939:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11949:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11972:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11949:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11991:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12006:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12014:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11984:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11984:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11908:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11919:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11930:4:1",
														"type": ""
													}
												],
												"src": "11842:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12079:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12106:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12108:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12108:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12108:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12095:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12102:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12098:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12092:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:13:1"
															},
															"nodeType": "YulIf",
															"src": "12089:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12137:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12148:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12151:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12137:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12062:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12065:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12071:3:1",
														"type": ""
													}
												],
												"src": "12031:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12216:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12275:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12277:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12277:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12277:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12247:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12240:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12240:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12233:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12233:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12255:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12266:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12262:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12262:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12270:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12258:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12258:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12252:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12252:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12229:45:1"
															},
															"nodeType": "YulIf",
															"src": "12226:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12306:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12321:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12324:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12317:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12306:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12195:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12198:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12204:7:1",
														"type": ""
													}
												],
												"src": "12164:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12386:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12408:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12410:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12410:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12410:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12402:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12405:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12399:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12399:8:1"
															},
															"nodeType": "YulIf",
															"src": "12396:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12439:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12451:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12454:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12447:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12439:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12368:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12371:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12377:4:1",
														"type": ""
													}
												],
												"src": "12337:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12520:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12530:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12539:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12534:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12599:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12624:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12629:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12620:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12620:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12643:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12648:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12639:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12639:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12633:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12633:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12613:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12613:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12560:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12563:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12557:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12571:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12573:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12582:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12585:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12578:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12578:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12573:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12553:3:1",
																"statements": []
															},
															"src": "12549:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12688:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12701:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12706:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12697:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12697:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12715:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12690:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12690:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12690:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12677:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12680:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12674:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12674:13:1"
															},
															"nodeType": "YulIf",
															"src": "12671:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12498:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12503:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12508:6:1",
														"type": ""
													}
												],
												"src": "12467:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12777:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12806:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12806:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12797:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12790:13:1"
															},
															"nodeType": "YulIf",
															"src": "12787:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12835:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12846:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12853:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12835:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12759:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12769:3:1",
														"type": ""
													}
												],
												"src": "12730:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12926:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12936:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12950:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12956:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12946:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12936:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12967:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12997:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13003:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12993:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12971:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13044:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13046:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13060:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13068:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13056:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13056:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13046:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13024:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13017:26:1"
															},
															"nodeType": "YulIf",
															"src": "13014:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13134:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13155:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13162:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13167:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13158:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13158:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13148:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13148:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13148:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13199:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13202:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13192:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13192:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13192:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13227:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13230:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13220:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13220:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13220:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13090:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13113:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13121:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13110:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13110:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13087:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13087:38:1"
															},
															"nodeType": "YulIf",
															"src": "13084:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12906:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12915:6:1",
														"type": ""
													}
												],
												"src": "12871:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13288:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13305:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13312:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13317:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13308:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13298:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13298:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13345:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13348:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13338:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13338:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13372:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13362:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13362:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13256:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_675d6be86aea312aa872194d54463171d5d8d72006f0b3de6f269bf84d56396f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Must have pauser role to pause\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Must have minter role to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e10e367bc1c2b7ba783509b73c4559904203478c03c627f3695b4a65fc3e108f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Must have pauser role to unpause\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610385578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b3576101c4565b8063a457c2d71461034c578063a9059cbb1461035f578063ca15c87314610372576101c4565b80639010d07c116100d35780639010d07c1461030957806391d148541461032957806395d89b411461033c578063a217fddf14610344576101c4565b806370a08231146102db57806379cc6790146102ee5780638456cb5914610301576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a557806340c10f19146102ad57806342966c68146102c05780635c975abb146102d3576101c4565b8063313ce5671461026a57806336568abe1461027f5780633950935114610292576101c4565b806318160ddd116101a257806318160ddd1461021a57806323b872dd1461022f578063248a9ca3146102425780632f2ff15d14610255576101c4565b806301ffc9a7146101c957806306fdde03146101f2578063095ea7b314610207575b600080fd5b6101dc6101d7366004611491565b6103bb565b6040516101e99190611542565b60405180910390f35b6101fa6103e8565b6040516101e99190611556565b6101dc61021536600461140d565b61047a565b610222610498565b6040516101e9919061154d565b6101dc61023d3660046113d2565b61049e565b610222610250366004611436565b610537565b61026861026336600461144e565b61054c565b005b610272610573565b6040516101e99190611a31565b61026861028d36600461144e565b610578565b6101dc6102a036600461140d565b61059a565b6102686105ee565b6102686102bb36600461140d565b610640565b6102686102ce366004611436565b610696565b6101dc6106aa565b6102226102e9366004611386565b6106b3565b6102686102fc36600461140d565b6106ce565b61026861071c565b61031c610317366004611470565b61076c565b6040516101e9919061152e565b6101dc61033736600461144e565b61078b565b6101fa6107b4565b6102226107c3565b6101dc61035a36600461140d565b6107c8565b6101dc61036d36600461140d565b610841565b610222610380366004611436565b610855565b61022261086c565b61026861039b36600461144e565b610890565b6102226103ae3660046113a0565b61089a565b6102226108c5565b60006001600160e01b03198216635a05180f60e01b14806103e057506103e082610908565b90505b919050565b6060600580546103f790611ad0565b80601f016020809104026020016040519081016040528092919081815260200182805461042390611ad0565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050905090565b600061048e61048761092d565b8484610931565b5060015b92915050565b60045490565b60006104ab8484846109e5565b6001600160a01b0384166000908152600360205260408120816104cc61092d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156105185760405162461bcd60e51b815260040161050f90611791565b60405180910390fd5b61052c8561052461092d565b858403610931565b506001949350505050565b60009081526020819052604090206001015490565b6105568282610b0f565b600082815260016020526040902061056e90826108f3565b505050565b601290565b6105828282610b33565b600082815260016020526040902061056e9082610b75565b600061048e6105a761092d565b8484600360006105b561092d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546105e99190611a3f565b610931565b61061a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61033761092d565b6106365760405162461bcd60e51b815260040161050f906118e7565b61063e610b8a565b565b61066c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661033761092d565b6106885760405162461bcd60e51b815260040161050f9061175a565b6106928282610bf8565b5050565b6106a76106a161092d565b82610cc0565b50565b60075460ff1690565b6001600160a01b031660009081526002602052604090205490565b60006106dc836103ae61092d565b9050818110156106fe5760405162461bcd60e51b815260040161050f906117d9565b6107128361070a61092d565b848403610931565b61056e8383610cc0565b6107487f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61033761092d565b6107645760405162461bcd60e51b815260040161050f906116f9565b61063e610db1565b60008281526001602052604081206107849083610e0c565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546103f790611ad0565b600081565b600080600360006107d761092d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108235760405162461bcd60e51b815260040161050f9061191c565b61083761082e61092d565b85858403610931565b5060019392505050565b600061048e61084e61092d565b84846109e5565b60008181526001602052604081206103e090610e18565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6105828282610e23565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6106928282610e42565b6000610784836001600160a01b038416610ec7565b60006001600160e01b03198216637965db0b60e01b14806103e057506103e082610f11565b3390565b6001600160a01b0383166109575760405162461bcd60e51b815260040161050f906118a3565b6001600160a01b03821661097d5760405162461bcd60e51b815260040161050f90611671565b6001600160a01b0380841660008181526003602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109d890859061154d565b60405180910390a3505050565b6001600160a01b038316610a0b5760405162461bcd60e51b815260040161050f9061185e565b6001600160a01b038216610a315760405162461bcd60e51b815260040161050f906115be565b610a3c838383610f2a565b6001600160a01b03831660009081526002602052604090205481811015610a755760405162461bcd60e51b815260040161050f906116b3565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610aac908490611a3f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610af6919061154d565b60405180910390a3610b0984848461056e565b50505050565b610b1882610537565b610b2981610b2461092d565b610f35565b61056e8383610e42565b610b3b61092d565b6001600160a01b0316816001600160a01b031614610b6b5760405162461bcd60e51b815260040161050f90611961565b6106928282610f99565b6000610784836001600160a01b03841661101c565b610b926106aa565b610bae5760405162461bcd60e51b815260040161050f90611601565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610be161092d565b604051610bee919061152e565b60405180910390a1565b6001600160a01b038216610c1e5760405162461bcd60e51b815260040161050f906119b0565b610c2a60008383610f2a565b8060046000828254610c3c9190611a3f565b90915550506001600160a01b03821660009081526002602052604081208054839290610c69908490611a3f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cac90859061154d565b60405180910390a36106926000838361056e565b6001600160a01b038216610ce65760405162461bcd60e51b815260040161050f9061181d565b610cf282600083610f2a565b6001600160a01b03821660009081526002602052604090205481811015610d2b5760405162461bcd60e51b815260040161050f9061162f565b6001600160a01b0383166000908152600260205260408120838303905560048054849290610d5a908490611a76565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d9d90869061154d565b60405180910390a361056e8360008461056e565b610db96106aa565b15610dd65760405162461bcd60e51b815260040161050f90611730565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610be161092d565b60006107848383611139565b60006103e082611171565b610e2c82610537565b610e3881610b2461092d565b61056e8383610f99565b610e4c828261078b565b610692576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e8361092d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610ed38383611175565b610f0957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610492565b506000610492565b6001600160e01b031981166301ffc9a760e01b14919050565b61056e83838361118d565b610f3f828261078b565b61069257610f57816001600160a01b031660146111bd565b610f628360206111bd565b604051602001610f739291906114b9565b60408051601f198184030181529082905262461bcd60e51b825261050f91600401611556565b610fa3828261078b565b15610692576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610fd861092d565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000818152600183016020526040812054801561112f576000611040600183611a76565b855490915060009061105490600190611a76565b90508181146110d557600086600001828154811061108257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106110b357634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806110f457634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610492565b6000915050610492565b600082600001828154811061115e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b61119883838361056e565b6111a06106aa565b1561056e5760405162461bcd60e51b815260040161050f906119e7565b606060006111cc836002611a57565b6111d7906002611a3f565b67ffffffffffffffff8111156111fd57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611227576020820181803683370190505b509050600360fc1b8160008151811061125057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061128d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006112b1846002611a57565b6112bc906001611a3f565b90505b6001811115611350576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106112fe57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061132257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361134981611ab9565b90506112bf565b5083156107845760405162461bcd60e51b815260040161050f90611589565b80356001600160a01b03811681146103e357600080fd5b600060208284031215611397578081fd5b6107848261136f565b600080604083850312156113b2578081fd5b6113bb8361136f565b91506113c96020840161136f565b90509250929050565b6000806000606084860312156113e6578081fd5b6113ef8461136f565b92506113fd6020850161136f565b9150604084013590509250925092565b6000806040838503121561141f578182fd5b6114288361136f565b946020939093013593505050565b600060208284031215611447578081fd5b5035919050565b60008060408385031215611460578182fd5b823591506113c96020840161136f565b60008060408385031215611482578182fd5b50508035926020909101359150565b6000602082840312156114a2578081fd5b81356001600160e01b031981168114610784578182fd5b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516114f1816017850160208801611a8d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611522816028840160208801611a8d565b01602801949350505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602082528251806020840152611575816040850160208701611a8d565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601e908201527f4d75737420686176652070617573657220726f6c6520746f2070617573650000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601d908201527f4d7573742068617665206d696e74657220726f6c6520746f206d696e74000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252818101527f4d75737420686176652070617573657220726f6c6520746f20756e7061757365604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b60ff91909116815260200190565b60008219821115611a5257611a52611b0b565b500190565b6000816000190483118215151615611a7157611a71611b0b565b500290565b600082821015611a8857611a88611b0b565b500390565b60005b83811015611aa8578181015183820152602001611a90565b83811115610b095750506000910152565b600081611ac857611ac8611b0b565b506000190190565b600281046001821680611ae457607f821691505b60208210811415611b0557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220464c8841ca6b35160adf247900c10d011801c28f59ded1b0559bf3153a78176b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x372 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x344 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x301 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x292 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x255 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x222 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x222 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x268 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x222 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x268 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x268 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x222 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH2 0x3E0 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3F7 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x423 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x470 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x445 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x470 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x453 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x487 PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB DUP5 DUP5 DUP5 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x4CC PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52C DUP6 PUSH2 0x524 PUSH2 0x92D JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x556 DUP3 DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP3 PUSH2 0x8F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x582 DUP3 DUP3 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP3 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x5A7 PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x61A PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xB8A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xBF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x6A1 PUSH2 0x92D JUMP JUMPDEST DUP3 PUSH2 0xCC0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DC DUP4 PUSH2 0x3AE PUSH2 0x92D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x712 DUP4 PUSH2 0x70A PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x748 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x337 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x63E PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x784 SWAP1 DUP4 PUSH2 0xE0C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x3F7 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x7D7 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x837 PUSH2 0x82E PUSH2 0x92D JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x931 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E PUSH2 0x84E PUSH2 0x92D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E0 SWAP1 PUSH2 0xE18 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x582 DUP3 DUP3 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH2 0x3E0 DUP3 PUSH2 0xF11 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x9D8 SWAP1 DUP6 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0xA3C DUP4 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAAC SWAP1 DUP5 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB09 DUP5 DUP5 DUP5 PUSH2 0x56E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB18 DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH2 0xB29 DUP2 PUSH2 0xB24 PUSH2 0x92D JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xE42 JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x101C JUMP JUMPDEST PUSH2 0xB92 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBE1 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xC2A PUSH1 0x0 DUP4 DUP4 PUSH2 0xF2A JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC69 SWAP1 DUP5 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xCAC SWAP1 DUP6 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x692 PUSH1 0x0 DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH2 0xCF2 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD5A SWAP1 DUP5 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD9D SWAP1 DUP7 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x56E DUP4 PUSH1 0x0 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x6AA JUMP JUMPDEST ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBE1 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0xE2C DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH2 0xE38 DUP2 PUSH2 0xB24 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0xE4C DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH2 0x692 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE83 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED3 DUP4 DUP4 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0xF09 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x492 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56E DUP4 DUP4 DUP4 PUSH2 0x118D JUMP JUMPDEST PUSH2 0xF3F DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH2 0x692 JUMPI PUSH2 0xF57 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0xF62 DUP4 PUSH1 0x20 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF73 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x50F SWAP2 PUSH1 0x4 ADD PUSH2 0x1556 JUMP JUMPDEST PUSH2 0xFA3 DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xFD8 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 PUSH2 0x1040 PUSH1 0x1 DUP4 PUSH2 0x1A76 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1054 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1082 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x10F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x115E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1198 DUP4 DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x11A0 PUSH2 0x6AA JUMP JUMPDEST ISZERO PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x11CC DUP4 PUSH1 0x2 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x11D7 SWAP1 PUSH1 0x2 PUSH2 0x1A3F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x128D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x12B1 DUP5 PUSH1 0x2 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x12BC SWAP1 PUSH1 0x1 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1350 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x12FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1322 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1349 DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12BF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1589 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1397 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x784 DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13BB DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x13C9 PUSH1 0x20 DUP5 ADD PUSH2 0x136F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13EF DUP5 PUSH2 0x136F JUMP JUMPDEST SWAP3 POP PUSH2 0x13FD PUSH1 0x20 DUP6 ADD PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1428 DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1447 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1460 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13C9 PUSH1 0x20 DUP5 ADD PUSH2 0x136F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x784 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP3 MSTORE DUP4 MLOAD PUSH2 0x14F1 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1A8D JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1522 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1A8D JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1575 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4D75737420686176652070617573657220726F6C6520746F2070617573650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4D75737420686176652070617573657220726F6C6520746F20756E7061757365 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A52 JUMPI PUSH2 0x1A52 PUSH2 0x1B0B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x1B0B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A88 PUSH2 0x1B0B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB09 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1AC8 JUMPI PUSH2 0x1AC8 PUSH2 0x1B0B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C DUP9 COINBASE 0xCA PUSH12 0x35160ADF247900C10D011801 0xC2 DUP16 MSIZE 0xDE 0xD1 0xB0 SSTORE SWAP12 RETURN ISZERO GASPRICE PUSH25 0x176B64736F6C63430008000033000000000000000000000000 ",
							"sourceMap": "50497:1152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48049:212;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6432:98;;;:::i;:::-;;;;;;;:::i;8529:166::-;;;;;;:::i;:::-;;:::i;7520:106::-;;;:::i;:::-;;;;;;;:::i;9162:478::-;;;;;;:::i;:::-;;:::i;32247:121::-;;;;;;:::i;:::-;;:::i;49376:193::-;;;;;;:::i;:::-;;:::i;:::-;;7369:91;;;:::i;:::-;;;;;;;:::i;49945:202::-;;;;;;:::i;:::-;;:::i;10035:212::-;;;;;;:::i;:::-;;:::i;51310:150::-;;;:::i;50970:177::-;;;;;;:::i;:::-;;:::i;16601:89::-;;;;;;:::i;:::-;;:::i;18428:84::-;;;:::i;7684:125::-;;;;;;:::i;:::-;;:::i;16996:361::-;;;;;;:::i;:::-;;:::i;51157:144::-;;;:::i;48846:143::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;31164:137::-;;;;;;:::i;:::-;;:::i;6643:102::-;;;:::i;30282:49::-;;;:::i;10734:405::-;;;;;;:::i;:::-;;:::i;8012:172::-;;;;;;:::i;:::-;;:::i;49157:132::-;;;;;;:::i;:::-;;:::i;50589:62::-;;;:::i;49657:198::-;;;;;;:::i;:::-;;:::i;8242:149::-;;;;;;:::i;:::-;;:::i;50657:62::-;;;:::i;48049:212::-;48134:4;-1:-1:-1;;;;;;48157:57:0;;-1:-1:-1;;;48157:57:0;;:97;;;48218:36;48242:11;48218:23;:36::i;:::-;48150:104;;48049:212;;;;:::o;6432:98::-;6486:13;6518:5;6511:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:98;:::o;8529:166::-;8612:4;8628:39;8637:12;:10;:12::i;:::-;8651:7;8660:6;8628:8;:39::i;:::-;-1:-1:-1;8684:4:0;8529:166;;;;;:::o;7520:106::-;7607:12;;7520:106;:::o;9162:478::-;9298:4;9314:36;9324:6;9332:9;9343:6;9314:9;:36::i;:::-;-1:-1:-1;;;;;9388:19:0;;9361:24;9388:19;;;:11;:19;;;;;9361:24;9408:12;:10;:12::i;:::-;-1:-1:-1;;;;;9388:33:0;-1:-1:-1;;;;;9388:33:0;;;;;;;;;;;;;9361:60;;9459:6;9439:16;:26;;9431:79;;;;-1:-1:-1;;;9431:79:0;;;;;;;:::i;:::-;;;;;;;;;9544:57;9553:6;9561:12;:10;:12::i;:::-;9594:6;9575:16;:25;9544:8;:57::i;:::-;-1:-1:-1;9629:4:0;;9162:478;-1:-1:-1;;;;9162:478:0:o;32247:121::-;32313:7;32339:12;;;;;;;;;;:22;;;;32247:121::o;49376:193::-;49491:30;49507:4;49513:7;49491:15;:30::i;:::-;49531:18;;;;:12;:18;;;;;:31;;49554:7;49531:22;:31::i;:::-;;49376:193;;:::o;7369:91::-;7451:2;7369:91;:::o;49945:202::-;50063:33;50082:4;50088:7;50063:18;:33::i;:::-;50106:18;;;;:12;:18;;;;;:34;;50132:7;50106:25;:34::i;10035:212::-;10123:4;10139:80;10148:12;:10;:12::i;:::-;10162:7;10208:10;10171:11;:25;10183:12;:10;:12::i;:::-;-1:-1:-1;;;;;10171:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;10171:25:0;;;:34;;;;;;;;;;:47;;;;:::i;:::-;10139:8;:80::i;51310:150::-;51362:34;50695:24;51383:12;:10;:12::i;51362:34::-;51354:79;;;;-1:-1:-1;;;51354:79:0;;;;;;;:::i;:::-;51443:10;:8;:10::i;:::-;51310:150::o;50970:177::-;51045:34;50627:24;51066:12;:10;:12::i;51045:34::-;51037:76;;;;-1:-1:-1;;;51037:76:0;;;;;;;:::i;:::-;51123:17;51129:2;51133:6;51123:5;:17::i;:::-;50970:177;;:::o;16601:89::-;16656:27;16662:12;:10;:12::i;:::-;16676:6;16656:5;:27::i;:::-;16601:89;:::o;18428:84::-;18498:7;;;;18428:84;:::o;7684:125::-;-1:-1:-1;;;;;7784:18:0;7758:7;7784:18;;;:9;:18;;;;;;;7684:125::o;16996:361::-;17072:24;17099:32;17109:7;17118:12;:10;:12::i;17099:32::-;17072:59;;17169:6;17149:16;:26;;17141:75;;;;-1:-1:-1;;;17141:75:0;;;;;;;:::i;:::-;17250:58;17259:7;17268:12;:10;:12::i;:::-;17301:6;17282:16;:25;17250:8;:58::i;:::-;17328:22;17334:7;17343:6;17328:5;:22::i;51157:144::-;51207:34;50695:24;51228:12;:10;:12::i;51207:34::-;51199:77;;;;-1:-1:-1;;;51199:77:0;;;;;;;:::i;:::-;51286:8;:6;:8::i;48846:143::-;48928:7;48954:18;;;:12;:18;;;;;:28;;48976:5;48954:21;:28::i;:::-;48947:35;48846:143;-1:-1:-1;;;48846:143:0:o;31164:137::-;31242:4;31265:12;;;;;;;;;;;-1:-1:-1;;;;;31265:29:0;;;;;;;;;;;;;;;31164:137::o;6643:102::-;6699:13;6731:7;6724:14;;;;;:::i;30282:49::-;30327:4;30282:49;:::o;10734:405::-;10827:4;10843:24;10870:11;:25;10882:12;:10;:12::i;:::-;-1:-1:-1;;;;;10870:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;10870:25:0;;;:34;;;;;;;;;;;-1:-1:-1;10922:35:0;;;;10914:85;;;;-1:-1:-1;;;10914:85:0;;;;;;;:::i;:::-;11033:67;11042:12;:10;:12::i;:::-;11056:7;11084:15;11065:16;:34;11033:8;:67::i;:::-;-1:-1:-1;11128:4:0;;10734:405;-1:-1:-1;;;10734:405:0:o;8012:172::-;8098:4;8114:42;8124:12;:10;:12::i;:::-;8138:9;8149:6;8114:9;:42::i;49157:132::-;49229:7;49255:18;;;:12;:18;;;;;:27;;:25;:27::i;50589:62::-;50627:24;50589:62;:::o;49657:198::-;49773:31;49790:4;49796:7;49773:16;:31::i;8242:149::-;-1:-1:-1;;;;;8357:18:0;;;8331:7;8357:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8242:149::o;50657:62::-;50695:24;50657:62;:::o;34414:110::-;34492:25;34503:4;34509:7;34492:10;:25::i;42974:150::-;43044:4;43067:50;43072:3;-1:-1:-1;;;;;43092:23:0;;43067:4;:50::i;30875:202::-;30960:4;-1:-1:-1;;;;;;30983:47:0;;-1:-1:-1;;;30983:47:0;;:87;;;31034:36;31058:11;31034:23;:36::i;4183:96::-;4262:10;4183:96;:::o;14310:370::-;-1:-1:-1;;;;;14441:19:0;;14433:68;;;;-1:-1:-1;;;14433:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14519:21:0;;14511:68;;;;-1:-1:-1;;;14511:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14590:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;14641:32;;;;;14620:6;;14641:32;:::i;:::-;;;;;;;;14310:370;;;:::o;11613:713::-;-1:-1:-1;;;;;11748:20:0;;11740:70;;;;-1:-1:-1;;;11740:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11828:23:0;;11820:71;;;;-1:-1:-1;;;11820:71:0;;;;;;;:::i;:::-;11902:47;11923:6;11931:9;11942:6;11902:20;:47::i;:::-;-1:-1:-1;;;;;11984:17:0;;11960:21;11984:17;;;:9;:17;;;;;;12019:23;;;;12011:74;;;;-1:-1:-1;;;12011:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;12119:17:0;;;;;;;:9;:17;;;;;;12139:22;;;12119:42;;12181:20;;;;;;;;:30;;12155:6;;12119:17;12181:30;;12155:6;;12181:30;:::i;:::-;;;;;;;;12244:9;-1:-1:-1;;;;;12227:35:0;12236:6;-1:-1:-1;;;;;12227:35:0;;12255:6;12227:35;;;;;;:::i;:::-;;;;;;;;12273:46;12293:6;12301:9;12312:6;12273:19;:46::i;:::-;11613:713;;;;:::o;32618:145::-;32701:18;32714:4;32701:12;:18::i;:::-;30760:30;30771:4;30777:12;:10;:12::i;:::-;30760:10;:30::i;:::-;32731:25:::1;32742:4;32748:7;32731:10;:25::i;33635:214::-:0;33741:12;:10;:12::i;:::-;-1:-1:-1;;;;;33730:23:0;:7;-1:-1:-1;;;;;33730:23:0;;33722:83;;;;-1:-1:-1;;;33722:83:0;;;;;;;:::i;:::-;33816:26;33828:4;33834:7;33816:11;:26::i;43292:156::-;43365:4;43388:53;43396:3;-1:-1:-1;;;;;43416:23:0;;43388:7;:53::i;19440:117::-;19007:8;:6;:8::i;:::-;18999:41;;;;-1:-1:-1;;;18999:41:0;;;;;;;:::i;:::-;19498:7:::1;:15:::0;;-1:-1:-1;;19498:15:0::1;::::0;;19528:22:::1;19537:12;:10;:12::i;:::-;19528:22;;;;;;:::i;:::-;;;;;;;;19440:117::o:0;12602:389::-;-1:-1:-1;;;;;12685:21:0;;12677:65;;;;-1:-1:-1;;;12677:65:0;;;;;;;:::i;:::-;12753:49;12782:1;12786:7;12795:6;12753:20;:49::i;:::-;12829:6;12813:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12845:18:0;;;;;;:9;:18;;;;;:28;;12867:6;;12845:18;:28;;12867:6;;12845:28;:::i;:::-;;;;-1:-1:-1;;12888:37:0;;-1:-1:-1;;;;;12888:37:0;;;12905:1;;12888:37;;;;12918:6;;12888:37;:::i;:::-;;;;;;;;12936:48;12964:1;12968:7;12977:6;12936:19;:48::i;13311:576::-;-1:-1:-1;;;;;13394:21:0;;13386:67;;;;-1:-1:-1;;;13386:67:0;;;;;;;:::i;:::-;13464:49;13485:7;13502:1;13506:6;13464:20;:49::i;:::-;-1:-1:-1;;;;;13549:18:0;;13524:22;13549:18;;;:9;:18;;;;;;13585:24;;;;13577:71;;;;-1:-1:-1;;;13577:71:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;13682:18:0;;;;;;:9;:18;;;;;13703:23;;;13682:44;;13746:12;:22;;13720:6;;13682:18;13746:22;;13720:6;;13746:22;:::i;:::-;;;;-1:-1:-1;;13784:37:0;;13810:1;;-1:-1:-1;;;;;13784:37:0;;;;;;;13814:6;;13784:37;:::i;:::-;;;;;;;;13832:48;13852:7;13869:1;13873:6;13832:19;:48::i;19193:115::-;18742:8;:6;:8::i;:::-;18741:9;18733:38;;;;-1:-1:-1;;;18733:38:0;;;;;;;:::i;:::-;19252:7:::1;:14:::0;;-1:-1:-1;;19252:14:0::1;19262:4;19252:14;::::0;;19281:20:::1;19288:12;:10;:12::i;44232:156::-:0;44306:7;44356:22;44360:3;44372:5;44356:3;:22::i;43775:115::-;43838:7;43864:19;43872:3;43864:7;:19::i;32997:147::-;33081:18;33094:4;33081:12;:18::i;:::-;30760:30;30771:4;30777:12;:10;:12::i;30760:30::-;33111:26:::1;33123:4;33129:7;33111:11;:26::i;34902:224::-:0;34976:22;34984:4;34990:7;34976;:22::i;:::-;34971:149;;35014:6;:12;;;;;;;;;;;-1:-1:-1;;;;;35014:29:0;;;;;;;;;:36;;-1:-1:-1;;35014:36:0;35046:4;35014:36;;;35096:12;:10;:12::i;:::-;-1:-1:-1;;;;;35069:40:0;35087:7;-1:-1:-1;;;;;35069:40:0;35081:4;35069:40;;;;;;;;;;34902:224;;:::o;37059:404::-;37122:4;37143:21;37153:3;37158:5;37143:9;:21::i;:::-;37138:319;;-1:-1:-1;37180:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;37360:18;;37338:19;;;:12;;;:19;;;;;;:40;;;;37392:11;;37138:319;-1:-1:-1;37441:5:0;37434:12;;28245:155;-1:-1:-1;;;;;;28353:40:0;;-1:-1:-1;;;28353:40:0;28245:155;;;:::o;51466:181::-;51596:44;51623:4;51629:2;51633:6;51596:26;:44::i;31582:484::-;31662:22;31670:4;31676:7;31662;:22::i;:::-;31657:403;;31845:41;31873:7;-1:-1:-1;;;;;31845:41:0;31883:2;31845:19;:41::i;:::-;31957:38;31985:4;31992:2;31957:19;:38::i;:::-;31752:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;31752:265:0;;;;;;;;;;-1:-1:-1;;;31700:349:0;;;;;;;:::i;35132:225::-;35206:22;35214:4;35220:7;35206;:22::i;:::-;35202:149;;;35276:5;35244:12;;;;;;;;;;;-1:-1:-1;;;;;35244:29:0;;;;;;;;;:37;;-1:-1:-1;;35244:37:0;;;35327:12;:10;:12::i;:::-;-1:-1:-1;;;;;35300:40:0;35318:7;-1:-1:-1;;;;;35300:40:0;35312:4;35300:40;;;;;;;;;;35132:225;;:::o;37631:1388::-;37697:4;37834:19;;;:12;;;:19;;;;;;37868:15;;37864:1149;;38237:21;38261:14;38274:1;38261:10;:14;:::i;:::-;38309:18;;38237:38;;-1:-1:-1;38289:17:0;;38309:22;;38330:1;;38309:22;:::i;:::-;38289:42;;38363:13;38350:9;:26;38346:398;;38396:17;38416:3;:11;;38428:9;38416:22;;;;;;-1:-1:-1;;;38416:22:0;;;;;;;;;;;;;;;;;38396:42;;38567:9;38538:3;:11;;38550:13;38538:26;;;;;;-1:-1:-1;;;38538:26:0;;;;;;;;;;;;;;;;;;;;:38;;;;38650:23;;;:12;;;:23;;;;;:36;;;38346:398;38822:17;;:3;;:17;;;-1:-1:-1;;;38822:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;38914:3;:12;;:19;38927:5;38914:19;;;;;;;;;;;38907:26;;;38955:4;38948:11;;;;;;;37864:1149;38997:5;38990:12;;;;;39757:118;39824:7;39850:3;:11;;39862:5;39850:18;;;;;;-1:-1:-1;;;39850:18:0;;;;;;;;;;;;;;;;;39843:25;;39757:118;;;;:::o;39308:107::-;39390:18;;39308:107::o;39100:127::-;39173:4;39196:19;;;:12;;;;;:19;;;;;;:24;;;39100:127::o;20163:264::-;20301:44;20328:4;20334:2;20338:6;20301:26;:44::i;:::-;20365:8;:6;:8::i;:::-;20364:9;20356:64;;;;-1:-1:-1;;;20356:64:0;;;;;;;:::i;26140:441::-;26215:13;26240:19;26272:10;26276:6;26272:1;:10;:::i;:::-;:14;;26285:1;26272:14;:::i;:::-;26262:25;;;;;;-1:-1:-1;;;26262:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26262:25:0;;26240:47;;-1:-1:-1;;;26297:6:0;26304:1;26297:9;;;;;;-1:-1:-1;;;26297:9:0;;;;;;;;;;;;:15;-1:-1:-1;;;;;26297:15:0;;;;;;;;;-1:-1:-1;;;26322:6:0;26329:1;26322:9;;;;;;-1:-1:-1;;;26322:9:0;;;;;;;;;;;;:15;-1:-1:-1;;;;;26322:15:0;;;;;;;;-1:-1:-1;26352:9:0;26364:10;26368:6;26364:1;:10;:::i;:::-;:14;;26377:1;26364:14;:::i;:::-;26352:26;;26347:132;26384:1;26380;:5;26347:132;;;-1:-1:-1;;;26431:5:0;26439:3;26431:11;26418:25;;;;;-1:-1:-1;;;26418:25:0;;;;;;;;;;;;26406:6;26413:1;26406:9;;;;;;-1:-1:-1;;;26406:9:0;;;;;;;;;;;;:37;-1:-1:-1;;;;;26406:37:0;;;;;;;;-1:-1:-1;26467:1:0;26457:11;;;;;26387:3;;;:::i;:::-;;;26347:132;;;-1:-1:-1;26496:10:0;;26488:55;;;;-1:-1:-1;;;26488:55:0;;;;;;;:::i;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:1:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:1;;1364:120;-1:-1:-1;1364:120:1:o;1489:266::-;;;1618:2;1606:9;1597:7;1593:23;1589:32;1586:2;;;1639:6;1631;1624:22;1586:2;1680:9;1667:23;1657:33;;1709:40;1745:2;1734:9;1730:18;1709:40;:::i;1760:258::-;;;1889:2;1877:9;1868:7;1864:23;1860:32;1857:2;;;1910:6;1902;1895:22;1857:2;-1:-1:-1;;1938:23:1;;;2008:2;1993:18;;;1980:32;;-1:-1:-1;1847:171:1:o;2023:306::-;;2134:2;2122:9;2113:7;2109:23;2105:32;2102:2;;;2155:6;2147;2140:22;2102:2;2186:23;;-1:-1:-1;;;;;;2238:32:1;;2228:43;;2218:2;;2290:6;2282;2275:22;2529:786;;2940:25;2935:3;2928:38;2995:6;2989:13;3011:62;3066:6;3061:2;3056:3;3052:12;3045:4;3037:6;3033:17;3011:62;:::i;:::-;-1:-1:-1;;;3132:2:1;3092:16;;;3124:11;;;3117:40;3182:13;;3204:63;3182:13;3253:2;3245:11;;3238:4;3226:17;;3204:63;:::i;:::-;3287:17;3306:2;3283:26;;2918:397;-1:-1:-1;;;;2918:397:1:o;3320:203::-;-1:-1:-1;;;;;3484:32:1;;;;3466:51;;3454:2;3439:18;;3421:102::o;3528:187::-;3693:14;;3686:22;3668:41;;3656:2;3641:18;;3623:92::o;3720:177::-;3866:25;;;3854:2;3839:18;;3821:76::o;3902:383::-;;4051:2;4040:9;4033:21;4083:6;4077:13;4126:6;4121:2;4110:9;4106:18;4099:34;4142:66;4201:6;4196:2;4185:9;4181:18;4176:2;4168:6;4164:15;4142:66;:::i;:::-;4269:2;4248:15;-1:-1:-1;;4244:29:1;4229:45;;;;4276:2;4225:54;;4023:262;-1:-1:-1;;4023:262:1:o;4290:356::-;4492:2;4474:21;;;4511:18;;;4504:30;4570:34;4565:2;4550:18;;4543:62;4637:2;4622:18;;4464:182::o;4651:399::-;4853:2;4835:21;;;4892:2;4872:18;;;4865:30;4931:34;4926:2;4911:18;;4904:62;-1:-1:-1;;;4997:2:1;4982:18;;4975:33;5040:3;5025:19;;4825:225::o;5055:344::-;5257:2;5239:21;;;5296:2;5276:18;;;5269:30;-1:-1:-1;;;5330:2:1;5315:18;;5308:50;5390:2;5375:18;;5229:170::o;5404:398::-;5606:2;5588:21;;;5645:2;5625:18;;;5618:30;5684:34;5679:2;5664:18;;5657:62;-1:-1:-1;;;5750:2:1;5735:18;;5728:32;5792:3;5777:19;;5578:224::o;5807:398::-;6009:2;5991:21;;;6048:2;6028:18;;;6021:30;6087:34;6082:2;6067:18;;6060:62;-1:-1:-1;;;6153:2:1;6138:18;;6131:32;6195:3;6180:19;;5981:224::o;6210:402::-;6412:2;6394:21;;;6451:2;6431:18;;;6424:30;6490:34;6485:2;6470:18;;6463:62;-1:-1:-1;;;6556:2:1;6541:18;;6534:36;6602:3;6587:19;;6384:228::o;6617:354::-;6819:2;6801:21;;;6858:2;6838:18;;;6831:30;6897:32;6892:2;6877:18;;6870:60;6962:2;6947:18;;6791:180::o;6976:340::-;7178:2;7160:21;;;7217:2;7197:18;;;7190:30;-1:-1:-1;;;7251:2:1;7236:18;;7229:46;7307:2;7292:18;;7150:166::o;7321:353::-;7523:2;7505:21;;;7562:2;7542:18;;;7535:30;7601:31;7596:2;7581:18;;7574:59;7665:2;7650:18;;7495:179::o;7679:404::-;7881:2;7863:21;;;7920:2;7900:18;;;7893:30;7959:34;7954:2;7939:18;;7932:62;-1:-1:-1;;;8025:2:1;8010:18;;8003:38;8073:3;8058:19;;7853:230::o;8088:400::-;8290:2;8272:21;;;8329:2;8309:18;;;8302:30;8368:34;8363:2;8348:18;;8341:62;-1:-1:-1;;;8434:2:1;8419:18;;8412:34;8478:3;8463:19;;8262:226::o;8493:397::-;8695:2;8677:21;;;8734:2;8714:18;;;8707:30;8773:34;8768:2;8753:18;;8746:62;-1:-1:-1;;;8839:2:1;8824:18;;8817:31;8880:3;8865:19;;8667:223::o;8895:401::-;9097:2;9079:21;;;9136:2;9116:18;;;9109:30;9175:34;9170:2;9155:18;;9148:62;-1:-1:-1;;;9241:2:1;9226:18;;9219:35;9286:3;9271:19;;9069:227::o;9301:400::-;9503:2;9485:21;;;9542:2;9522:18;;;9515:30;9581:34;9576:2;9561:18;;9554:62;-1:-1:-1;;;9647:2:1;9632:18;;9625:34;9691:3;9676:19;;9475:226::o;9706:356::-;9908:2;9890:21;;;9927:18;;;9920:30;9986:34;9981:2;9966:18;;9959:62;10053:2;10038:18;;9880:182::o;10067:401::-;10269:2;10251:21;;;10308:2;10288:18;;;10281:30;10347:34;10342:2;10327:18;;10320:62;-1:-1:-1;;;10413:2:1;10398:18;;10391:35;10458:3;10443:19;;10241:227::o;10473:411::-;10675:2;10657:21;;;10714:2;10694:18;;;10687:30;10753:34;10748:2;10733:18;;10726:62;-1:-1:-1;;;10819:2:1;10804:18;;10797:45;10874:3;10859:19;;10647:237::o;10889:355::-;11091:2;11073:21;;;11130:2;11110:18;;;11103:30;11169:33;11164:2;11149:18;;11142:61;11235:2;11220:18;;11063:181::o;11249:406::-;11451:2;11433:21;;;11490:2;11470:18;;;11463:30;11529:34;11524:2;11509:18;;11502:62;-1:-1:-1;;;11595:2:1;11580:18;;11573:40;11645:3;11630:19;;11423:232::o;11842:184::-;12014:4;12002:17;;;;11984:36;;11972:2;11957:18;;11939:87::o;12031:128::-;;12102:1;12098:6;12095:1;12092:13;12089:2;;;12108:18;;:::i;:::-;-1:-1:-1;12144:9:1;;12079:80::o;12164:168::-;;12270:1;12266;12262:6;12258:14;12255:1;12252:21;12247:1;12240:9;12233:17;12229:45;12226:2;;;12277:18;;:::i;:::-;-1:-1:-1;12317:9:1;;12216:116::o;12337:125::-;;12405:1;12402;12399:8;12396:2;;;12410:18;;:::i;:::-;-1:-1:-1;12447:9:1;;12386:76::o;12467:258::-;12539:1;12549:113;12563:6;12560:1;12557:13;12549:113;;;12639:11;;;12633:18;12620:11;;;12613:39;12585:2;12578:10;12549:113;;;12680:6;12677:1;12674:13;12671:2;;;-1:-1:-1;;12715:1:1;12697:16;;12690:27;12520:205::o;12730:136::-;;12797:5;12787:2;;12806:18;;:::i;:::-;-1:-1:-1;;;12842:18:1;;12777:89::o;12871:380::-;12956:1;12946:12;;13003:1;12993:12;;;13014:2;;13068:4;13060:6;13056:17;13046:27;;13014:2;13121;13113:6;13110:14;13090:18;13087:38;13084:2;;;13167:10;13162:3;13158:20;13155:1;13148:31;13202:4;13199:1;13192:15;13230:4;13227:1;13220:15;13084:2;;12926:325;;;:::o;13256:127::-;13317:10;13312:3;13308:20;13305:1;13298:31;13348:4;13345:1;13338:15;13372:4;13369:1;13362:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1399800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "339",
								"MINTER_ROLE()": "272",
								"PAUSER_ROLE()": "338",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22675",
								"balanceOf(address)": "1316",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "286",
								"decreaseAllowance(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "1270",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "1450",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "1151",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1074",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50791,
									"end": 50795,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50791,
									"end": 50795,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50797,
									"end": 50803,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50797,
									"end": 50803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6350,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6343,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18311,
									"end": 18318,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 18311,
									"end": 18326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18311,
									"end": 18326,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18311,
									"end": 18326,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18311,
									"end": 18326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18311,
									"end": 18326,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50815,
									"end": 50859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18321,
									"end": 18326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50846,
									"end": 50858,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50846,
									"end": 50856,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50846,
									"end": 50858,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50846,
									"end": 50858,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50846,
									"end": 50858,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50815,
									"end": 50825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50815,
									"end": 50859,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50815,
									"end": 50859,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50815,
									"end": 50859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50870,
									"end": 50907,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50627,
									"end": 50651,
									"name": "PUSH",
									"source": 0,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 50894,
									"end": 50906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50894,
									"end": 50904,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50894,
									"end": 50906,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50870,
									"end": 50907,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50870,
									"end": 50907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50917,
									"end": 50954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50695,
									"end": 50719,
									"name": "PUSH",
									"source": 0,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 50941,
									"end": 50953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50941,
									"end": 50951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50941,
									"end": 50953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50917,
									"end": 50954,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50917,
									"end": 50954,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50731,
									"end": 50961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4183,
									"end": 4279,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 4183,
									"end": 4279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4262,
									"end": 4272,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4183,
									"end": 4279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4183,
									"end": 4279,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 50235,
									"end": 50401,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50235,
									"end": 50401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50339,
									"end": 50343,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50345,
									"end": 50352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50322,
									"end": 50338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 50322,
									"end": 50338,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50322,
									"end": 50338,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 50322,
									"end": 50338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551763"
								},
								{
									"begin": 50322,
									"end": 50338,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50322,
									"end": 50353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50375,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50381,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 50393,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50386,
									"end": 50393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551764"
								},
								{
									"begin": 50363,
									"end": 50385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 50363,
									"end": 50385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50385,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50385,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50363,
									"end": 50394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50235,
									"end": 50401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50235,
									"end": 50401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50235,
									"end": 50401,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 34414,
									"end": 34524,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 34414,
									"end": 34524,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34492,
									"end": 34517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 34503,
									"end": 34507,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34509,
									"end": 34516,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34492,
									"end": 34502,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 34492,
									"end": 34517,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34492,
									"end": 34517,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 34492,
									"end": 34517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34414,
									"end": 34524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34414,
									"end": 34524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34414,
									"end": 34524,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43044,
									"end": 43048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43067,
									"end": 43117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43072,
									"end": 43075,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43092,
									"end": 43115,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43092,
									"end": 43115,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 43071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 43067,
									"end": 43117,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 43067,
									"end": 43117,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43067,
									"end": 43117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43060,
									"end": 43117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43060,
									"end": 43117,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42974,
									"end": 43124,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 34902,
									"end": 35126,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 34902,
									"end": 35126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34976,
									"end": 34998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 34984,
									"end": 34988,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34990,
									"end": 34997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34976,
									"end": 34983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 34976,
									"end": 34998,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 34976,
									"end": 34998,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 34976,
									"end": 34998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34971,
									"end": 35120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 34971,
									"end": 35120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35026,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35043,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35046,
									"end": 35050,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35014,
									"end": 35050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35096,
									"end": 35108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 35096,
									"end": 35106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 35096,
									"end": 35108,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 35096,
									"end": 35108,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 35096,
									"end": 35108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35087,
									"end": 35094,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35081,
									"end": 35085,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35069,
									"end": 35109,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 34902,
									"end": 35126,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34902,
									"end": 35126,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34902,
									"end": 35126,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 37059,
									"end": 37463,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 37059,
									"end": 37463,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37122,
									"end": 37126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37143,
									"end": 37164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37153,
									"end": 37156,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37158,
									"end": 37163,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 37143,
									"end": 37164,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 37143,
									"end": 37164,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37143,
									"end": 37164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37138,
									"end": 37457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 37138,
									"end": 37457,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37180,
									"end": 37203,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 37360,
									"end": 37378,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37360,
									"end": 37378,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37350,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37350,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37350,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37357,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 37392,
									"end": 37403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 37392,
									"end": 37403,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37138,
									"end": 37457,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 37138,
									"end": 37457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 37441,
									"end": 37446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37434,
									"end": 37446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 37434,
									"end": 37446,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31164,
									"end": 31301,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 31164,
									"end": 31301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31242,
									"end": 31246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31277,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31265,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31164,
									"end": 31301,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39100,
									"end": 39227,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 39100,
									"end": 39227,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39173,
									"end": 39177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39208,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39196,
									"end": 39208,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39208,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39208,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39215,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39220,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39220,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39196,
									"end": 39220,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39100,
									"end": 39227,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 14,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 126,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 120,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 104,
									"end": 121,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 100,
									"end": 127,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 90,
									"end": 92,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 145,
									"end": 150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 131,
									"end": 151,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 90,
									"end": 92,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 185,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 185,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 231,
									"end": 233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 231,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 231,
									"end": 233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 296,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 390,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 369,
									"end": 382,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 369,
									"end": 382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 365,
									"end": 392,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 353,
									"end": 393,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 353,
									"end": 393,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 349,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 398,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 410,
									"end": 456,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 407,
									"end": 409,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 407,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 407,
									"end": 409,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 510,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 549,
									"end": 582,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 599,
									"end": 604,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 592,
									"end": 597,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 585,
									"end": 605,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 625,
									"end": 630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 616,
									"end": 630,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 616,
									"end": 630,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 653,
									"end": 655,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 650,
									"end": 651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 647,
									"end": 656,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 737,
									"end": 760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 737,
									"end": 760,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 731,
									"end": 761,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 706,
									"end": 729,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 706,
									"end": 729,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 699,
									"end": 762,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 790,
									"end": 792,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 784,
									"end": 793,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 849,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 844,
									"end": 846,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 839,
									"end": 841,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 831,
									"end": 837,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 827,
									"end": 842,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 823,
									"end": 847,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 816,
									"end": 855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1057,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1046,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1058,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1031,
									"end": 1063,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1088,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1210,
									"end": 1216,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1217,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1291,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1336,
									"end": 1345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1482,
									"end": 1489,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1469,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1587,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1698,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1690,
									"end": 1696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1743,
									"end": 1749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1755,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1792,
									"end": 1795,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1788,
									"end": 1808,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1809,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1836,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1829,
									"end": 1830,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1822,
									"end": 1837,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 1957,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1942,
									"end": 1945,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1938,
									"end": 1958,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1928,
									"end": 1959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1968,
									"end": 1983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50497,
									"end": 51649,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220464c8841ca6b35160adf247900c10d011801c28f59ded1b0559bf3153a78176b64736f6c63430008000033",
									".code": [
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "E63AB1E9"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50497,
											"end": 51649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48134,
											"end": 48138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 48157,
											"end": 48214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A05180F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48157,
											"end": 48214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 48157,
											"end": 48254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48157,
											"end": 48254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48218,
											"end": 48254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 48242,
											"end": 48253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48218,
											"end": 48241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 48218,
											"end": 48254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48218,
											"end": 48254,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 48218,
											"end": 48254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48150,
											"end": 48254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48150,
											"end": 48254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48049,
											"end": 48261,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6499,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6518,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8637,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9332,
											"end": 9341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9399,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9408,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9561,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32339,
											"end": 32361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32339,
											"end": 32361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32247,
											"end": 32368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49491,
											"end": 49521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49507,
											"end": 49511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49513,
											"end": 49520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49491,
											"end": 49506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 49491,
											"end": 49521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49491,
											"end": 49521,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49491,
											"end": 49521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49554,
											"end": 49561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49376,
											"end": 49569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49945,
											"end": 50147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50063,
											"end": 50096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 50082,
											"end": 50086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50088,
											"end": 50095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50063,
											"end": 50081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 50063,
											"end": 50096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50063,
											"end": 50096,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 50063,
											"end": 50096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50118,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50106,
											"end": 50140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50132,
											"end": 50139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50106,
											"end": 50131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 50106,
											"end": 50140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 10148,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10162,
											"end": 10169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10183,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10139,
											"end": 10219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 50695,
											"end": 50719,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 51383,
											"end": 51395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51383,
											"end": 51393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 51383,
											"end": 51395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51362,
											"end": 51396,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 51362,
											"end": 51396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 51354,
											"end": 51433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51443,
											"end": 51453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51443,
											"end": 51451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 51443,
											"end": 51453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51443,
											"end": 51453,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51443,
											"end": 51453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51310,
											"end": 51460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 50627,
											"end": 50651,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 51066,
											"end": 51078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51066,
											"end": 51076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 51066,
											"end": 51078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51045,
											"end": 51079,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 51045,
											"end": 51079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 51037,
											"end": 51113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51123,
											"end": 51140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 51129,
											"end": 51131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51133,
											"end": 51139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51123,
											"end": 51128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 51123,
											"end": 51140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51123,
											"end": 51140,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 51123,
											"end": 51140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50970,
											"end": 51147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16656,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16662,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16662,
											"end": 16672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 16662,
											"end": 16674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16662,
											"end": 16674,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16662,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16676,
											"end": 16682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16656,
											"end": 16661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 16656,
											"end": 16683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16656,
											"end": 16683,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16656,
											"end": 16683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16601,
											"end": 16690,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18505,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18498,
											"end": 18505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18505,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18498,
											"end": 18505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16996,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17072,
											"end": 17096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17109,
											"end": 17116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17118,
											"end": 17128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17072,
											"end": 17131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17072,
											"end": 17131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17169,
											"end": 17175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17141,
											"end": 17216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17259,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17268,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17268,
											"end": 17280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17268,
											"end": 17280,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17268,
											"end": 17280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17307,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17282,
											"end": 17298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17282,
											"end": 17307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17250,
											"end": 17308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17250,
											"end": 17308,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17250,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17334,
											"end": 17341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17349,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17328,
											"end": 17350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51157,
											"end": 51301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51207,
											"end": 51241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 50695,
											"end": 50719,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 51228,
											"end": 51240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51228,
											"end": 51238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 51228,
											"end": 51240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51207,
											"end": 51241,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 51207,
											"end": 51241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 51199,
											"end": 51276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51286,
											"end": 51294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51286,
											"end": 51292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 51286,
											"end": 51294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48928,
											"end": 48935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 48954,
											"end": 48982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48976,
											"end": 48981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48954,
											"end": 48975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 48954,
											"end": 48982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48954,
											"end": 48982,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 48954,
											"end": 48982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48947,
											"end": 48982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48846,
											"end": 48989,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31242,
											"end": 31246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31277,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31265,
											"end": 31294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31301,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6731,
											"end": 6738,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30327,
											"end": 30331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30282,
											"end": 30331,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10843,
											"end": 10867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10881,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 10882,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11042,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11084,
											"end": 11099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11065,
											"end": 11081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11065,
											"end": 11099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8124,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8114,
											"end": 8156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 49157,
											"end": 49289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49229,
											"end": 49236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 49255,
											"end": 49282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49255,
											"end": 49280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 49255,
											"end": 49282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50627,
											"end": 50651,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50589,
											"end": 50651,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 49657,
											"end": 49855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49773,
											"end": 49804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 49790,
											"end": 49794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49796,
											"end": 49803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49773,
											"end": 49789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 49773,
											"end": 49804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8368,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50695,
											"end": 50719,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50657,
											"end": 50719,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34414,
											"end": 34524,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34414,
											"end": 34524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34492,
											"end": 34517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 34503,
											"end": 34507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34509,
											"end": 34516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34492,
											"end": 34502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34492,
											"end": 34517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42974,
											"end": 43124,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 42974,
											"end": 43124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43044,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43067,
											"end": 43117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 43072,
											"end": 43075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43092,
											"end": 43115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 43071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 43067,
											"end": 43117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30875,
											"end": 31077,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30875,
											"end": 31077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30960,
											"end": 30964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30983,
											"end": 31030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30983,
											"end": 31030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30983,
											"end": 31030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30983,
											"end": 31030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30983,
											"end": 31070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30983,
											"end": 31070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30983,
											"end": 31070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31058,
											"end": 31069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31034,
											"end": 31070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14441,
											"end": 14460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14441,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14519,
											"end": 14540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11828,
											"end": 11851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11828,
											"end": 11851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11931,
											"end": 11940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11902,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11960,
											"end": 11981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12161,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12244,
											"end": 12253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12255,
											"end": 12261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32618,
											"end": 32763,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 32618,
											"end": 32763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32701,
											"end": 32719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32714,
											"end": 32718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32701,
											"end": 32713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 32701,
											"end": 32719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32701,
											"end": 32719,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32701,
											"end": 32719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 30771,
											"end": 30775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30760,
											"end": 30770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32731,
											"end": 32756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32742,
											"end": 32746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32748,
											"end": 32755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32731,
											"end": 32741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 32731,
											"end": 32756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33635,
											"end": 33849,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 33635,
											"end": 33849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33741,
											"end": 33751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 33741,
											"end": 33753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33741,
											"end": 33753,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 33741,
											"end": 33753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33730,
											"end": 33753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33730,
											"end": 33753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 33722,
											"end": 33805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33816,
											"end": 33842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33828,
											"end": 33832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33834,
											"end": 33841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33816,
											"end": 33827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 33816,
											"end": 33842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43292,
											"end": 43448,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 43292,
											"end": 43448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43365,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43388,
											"end": 43441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 43396,
											"end": 43399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43416,
											"end": 43439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43416,
											"end": 43439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43388,
											"end": 43395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 43388,
											"end": 43441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19440,
											"end": 19557,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 19440,
											"end": 19557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 19007,
											"end": 19013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19007,
											"end": 19015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 19015,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 19007,
											"end": 19015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 18999,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19498,
											"end": 19505,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19498,
											"end": 19513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19498,
											"end": 19513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19498,
											"end": 19513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19498,
											"end": 19513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19498,
											"end": 19513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 19537,
											"end": 19549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 19537,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 19537,
											"end": 19549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19537,
											"end": 19549,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 19537,
											"end": 19549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19528,
											"end": 19550,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19557,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12602,
											"end": 12991,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12602,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12685,
											"end": 12706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12685,
											"end": 12706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12677,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12753,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 12782,
											"end": 12783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12795,
											"end": 12801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12753,
											"end": 12773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 12753,
											"end": 12802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12753,
											"end": 12802,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 12753,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12829,
											"end": 12835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12813,
											"end": 12825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12854,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12905,
											"end": 12906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12905,
											"end": 12906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12918,
											"end": 12924,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12918,
											"end": 12924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12925,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12964,
											"end": 12965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12977,
											"end": 12983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12936,
											"end": 12984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13311,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 13311,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13394,
											"end": 13415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13394,
											"end": 13415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13386,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13485,
											"end": 13492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 13464,
											"end": 13513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13464,
											"end": 13513,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13464,
											"end": 13513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13524,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 13577,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13703,
											"end": 13726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13703,
											"end": 13726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13703,
											"end": 13726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13726,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13746,
											"end": 13768,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13810,
											"end": 13811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13810,
											"end": 13811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13820,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13821,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 13852,
											"end": 13859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13869,
											"end": 13870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13873,
											"end": 13879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 13832,
											"end": 13880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19193,
											"end": 19308,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 19193,
											"end": 19308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 18742,
											"end": 18748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18742,
											"end": 18750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18742,
											"end": 18750,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 18742,
											"end": 18750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 18750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19259,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19262,
											"end": 19266,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19266,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19281,
											"end": 19301,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 19288,
											"end": 19300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 19288,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 19288,
											"end": 19300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44232,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 44232,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44306,
											"end": 44313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44356,
											"end": 44378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 44360,
											"end": 44363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44372,
											"end": 44377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44356,
											"end": 44359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 44356,
											"end": 44378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43775,
											"end": 43890,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 43775,
											"end": 43890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43838,
											"end": 43845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43864,
											"end": 43883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 43872,
											"end": 43875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43864,
											"end": 43871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 43864,
											"end": 43883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32997,
											"end": 33144,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 32997,
											"end": 33144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33081,
											"end": 33099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 33094,
											"end": 33098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33081,
											"end": 33093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33081,
											"end": 33099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33081,
											"end": 33099,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 33081,
											"end": 33099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 30771,
											"end": 30775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30777,
											"end": 30789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 30760,
											"end": 30790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33111,
											"end": 33137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33123,
											"end": 33127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33129,
											"end": 33136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33111,
											"end": 33122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 33111,
											"end": 33137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34902,
											"end": 35126,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34902,
											"end": 35126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34976,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34984,
											"end": 34988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34990,
											"end": 34997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34976,
											"end": 34983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 34976,
											"end": 34998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34976,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34976,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34971,
											"end": 35120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 34971,
											"end": 35120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35026,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35046,
											"end": 35050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35014,
											"end": 35050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35096,
											"end": 35108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35096,
											"end": 35106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35096,
											"end": 35108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35096,
											"end": 35108,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35096,
											"end": 35108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35087,
											"end": 35094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35081,
											"end": 35085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35069,
											"end": 35109,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37059,
											"end": 37463,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37059,
											"end": 37463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37122,
											"end": 37126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37143,
											"end": 37164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 37153,
											"end": 37156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37143,
											"end": 37152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 37143,
											"end": 37164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37143,
											"end": 37164,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 37143,
											"end": 37164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37138,
											"end": 37457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 37138,
											"end": 37457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37203,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37360,
											"end": 37378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37360,
											"end": 37378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37350,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37338,
											"end": 37378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37392,
											"end": 37403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37392,
											"end": 37403,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37138,
											"end": 37457,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 37138,
											"end": 37457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37441,
											"end": 37446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37434,
											"end": 37446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37434,
											"end": 37446,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28353,
											"end": 28393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28353,
											"end": 28393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28353,
											"end": 28393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28245,
											"end": 28400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51466,
											"end": 51647,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 51466,
											"end": 51647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51596,
											"end": 51640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 51623,
											"end": 51627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51629,
											"end": 51631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51596,
											"end": 51622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 51596,
											"end": 51640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31582,
											"end": 32066,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 31582,
											"end": 32066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 31670,
											"end": 31674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31676,
											"end": 31683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31662,
											"end": 31684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31662,
											"end": 31684,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 31662,
											"end": 31684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31657,
											"end": 32060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 31657,
											"end": 32060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31845,
											"end": 31886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 31873,
											"end": 31880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31845,
											"end": 31886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31883,
											"end": 31885,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31845,
											"end": 31864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 31845,
											"end": 31886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31845,
											"end": 31886,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 31845,
											"end": 31886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31957,
											"end": 31995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 31985,
											"end": 31989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31992,
											"end": 31994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31957,
											"end": 31976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 31957,
											"end": 31995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31957,
											"end": 31995,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 31957,
											"end": 31995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31752,
											"end": 32017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 31700,
											"end": 32049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35132,
											"end": 35357,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 35132,
											"end": 35357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 35214,
											"end": 35218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35220,
											"end": 35227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 35206,
											"end": 35228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35206,
											"end": 35228,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 35206,
											"end": 35228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35202,
											"end": 35351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35276,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35244,
											"end": 35281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35327,
											"end": 35339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 35327,
											"end": 35337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35327,
											"end": 35339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35327,
											"end": 35339,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 35327,
											"end": 35339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35300,
											"end": 35340,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 35132,
											"end": 35357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35132,
											"end": 35357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35132,
											"end": 35357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37631,
											"end": 39019,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 37631,
											"end": 39019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37697,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37834,
											"end": 37846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37868,
											"end": 37883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37868,
											"end": 37883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37864,
											"end": 39013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 37864,
											"end": 39013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38237,
											"end": 38258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38261,
											"end": 38275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 38274,
											"end": 38275,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38261,
											"end": 38271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38261,
											"end": 38275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 38261,
											"end": 38275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38261,
											"end": 38275,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 38261,
											"end": 38275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38309,
											"end": 38327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38309,
											"end": 38327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38237,
											"end": 38275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38237,
											"end": 38275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38289,
											"end": 38306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38289,
											"end": 38306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38330,
											"end": 38331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38330,
											"end": 38331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 38309,
											"end": 38331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38289,
											"end": 38331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38289,
											"end": 38331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38363,
											"end": 38376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38350,
											"end": 38359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38350,
											"end": 38376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38346,
											"end": 38744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 38346,
											"end": 38744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38419,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38428,
											"end": 38437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38567,
											"end": 38576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38541,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38538,
											"end": 38549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38538,
											"end": 38576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38650,
											"end": 38662,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38346,
											"end": 38744,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 38346,
											"end": 38744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38825,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38822,
											"end": 38839,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38917,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38926,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38914,
											"end": 38926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38927,
											"end": 38932,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38914,
											"end": 38933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38907,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38907,
											"end": 38933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38907,
											"end": 38933,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38955,
											"end": 38959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 38948,
											"end": 38959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37864,
											"end": 39013,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 37864,
											"end": 39013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38997,
											"end": 39002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38990,
											"end": 39002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38990,
											"end": 39002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 38990,
											"end": 39002,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39824,
											"end": 39831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39862,
											"end": 39867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 39868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 39868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39757,
											"end": 39875,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39308,
											"end": 39415,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 39308,
											"end": 39415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39390,
											"end": 39408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39390,
											"end": 39408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39415,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39100,
											"end": 39227,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 39100,
											"end": 39227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39173,
											"end": 39177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39196,
											"end": 39208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39196,
											"end": 39220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20163,
											"end": 20427,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 20163,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20301,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20328,
											"end": 20332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20334,
											"end": 20336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20338,
											"end": 20344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20301,
											"end": 20327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20301,
											"end": 20345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20301,
											"end": 20345,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 20301,
											"end": 20345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20365,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 20365,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 20365,
											"end": 20373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20365,
											"end": 20373,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 20365,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 20356,
											"end": 20420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26140,
											"end": 26581,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 26140,
											"end": 26581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26215,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26240,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26272,
											"end": 26282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 26276,
											"end": 26282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26272,
											"end": 26273,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26272,
											"end": 26282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 26272,
											"end": 26282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26272,
											"end": 26282,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 26272,
											"end": 26282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26285,
											"end": 26286,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 26272,
											"end": 26286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26262,
											"end": 26287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26240,
											"end": 26287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26240,
											"end": 26287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26297,
											"end": 26303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 26297,
											"end": 26312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26322,
											"end": 26328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26329,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26322,
											"end": 26337,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26364,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 26368,
											"end": 26374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26365,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26364,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 26364,
											"end": 26374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26364,
											"end": 26374,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 26364,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 26364,
											"end": 26378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26352,
											"end": 26378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26352,
											"end": 26378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26385,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26380,
											"end": 26381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26380,
											"end": 26385,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26431,
											"end": 26436,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26439,
											"end": 26442,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 26431,
											"end": 26442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 26418,
											"end": 26443,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26443,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26467,
											"end": 26468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26457,
											"end": 26468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26457,
											"end": 26468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26457,
											"end": 26468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26457,
											"end": 26468,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26457,
											"end": 26468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26387,
											"end": 26390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 26347,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26496,
											"end": 26506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 26488,
											"end": 26543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1484,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1489,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1489,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1709,
											"end": 1749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 2018,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1760,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 2018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1875,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1961,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1961,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 2018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2023,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2209,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 3315,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 2529,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 2935,
											"end": 2938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3056,
											"end": 3059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3043,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 3011,
											"end": 3073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3073,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3011,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3255,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3204,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 3315,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 3315,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3320,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3320,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3523,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3528,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3528,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3708,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3715,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3720,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3720,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3902,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4201,
											"end": 4207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4142,
											"end": 4208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4142,
											"end": 4208,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4142,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4271,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4248,
											"end": 4263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4023,
											"end": 4285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4290,
											"end": 4646,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4290,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4622,
											"end": 4640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4651,
											"end": 5050,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4651,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5040,
											"end": 5043,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5025,
											"end": 5044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 5050,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5055,
											"end": 5399,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5055,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5399,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5404,
											"end": 5802,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5404,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5647,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5795,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5777,
											"end": 5796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5802,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5807,
											"end": 6205,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5807,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6009,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6121,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 6082,
											"end": 6084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6180,
											"end": 6199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6205,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6612,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6210,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6453,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6490,
											"end": 6524,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6587,
											"end": 6606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6587,
											"end": 6606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6617,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6617,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6860,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "PUSH",
											"source": 1,
											"value": "4D75737420686176652070617573657220726F6C6520746F2070617573650000"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6976,
											"end": 7316,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6976,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7307,
											"end": 7309,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7321,
											"end": 7674,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7321,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7505,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7542,
											"end": 7560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742068617665206D696E74657220726F6C6520746F206D696E74000000"
										},
										{
											"begin": 7596,
											"end": 7598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7667,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7674,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7679,
											"end": 8083,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7679,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7959,
											"end": 7993,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 7954,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7932,
											"end": 7994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8025,
											"end": 8027,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8076,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8058,
											"end": 8077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 8083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8088,
											"end": 8488,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8088,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8272,
											"end": 8293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8331,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8481,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8463,
											"end": 8482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8493,
											"end": 8890,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 8493,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8695,
											"end": 8697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8677,
											"end": 8698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8736,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8807,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8841,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8883,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8865,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8895,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8895,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9079,
											"end": 9100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9079,
											"end": 9100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9175,
											"end": 9209,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9271,
											"end": 9290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9296,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9301,
											"end": 9701,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 9301,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9576,
											"end": 9578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9554,
											"end": 9616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9647,
											"end": 9649,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9625,
											"end": 9659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9694,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9706,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 9706,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9890,
											"end": 9911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9890,
											"end": 9911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9890,
											"end": 9911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "4D75737420686176652070617573657220726F6C6520746F20756E7061757365"
										},
										{
											"begin": 9981,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9959,
											"end": 10021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10055,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 10062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10067,
											"end": 10468,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10067,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10269,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10347,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 10342,
											"end": 10344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10413,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10468,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10473,
											"end": 10884,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10473,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10657,
											"end": 10678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10716,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10753,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10726,
											"end": 10788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10804,
											"end": 10822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10874,
											"end": 10877,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10859,
											"end": 10878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10859,
											"end": 10878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10647,
											"end": 10884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10889,
											"end": 11244,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10889,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11132,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 11164,
											"end": 11166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11142,
											"end": 11203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11235,
											"end": 11237,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11249,
											"end": 11655,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 11249,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11433,
											"end": 11454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11492,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11470,
											"end": 11488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11470,
											"end": 11488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11470,
											"end": 11488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11529,
											"end": 11563,
											"name": "PUSH",
											"source": 1,
											"value": "45524332305061757361626C653A20746F6B656E207472616E73666572207768"
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11509,
											"end": 11527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11502,
											"end": 11564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B19481C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11595,
											"end": 11597,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11580,
											"end": 11598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11580,
											"end": 11598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11630,
											"end": 11649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11630,
											"end": 11649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11655,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11842,
											"end": 12026,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 11842,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12014,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11984,
											"end": 12020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11984,
											"end": 12020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 11974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11939,
											"end": 12026,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12031,
											"end": 12159,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12031,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12098,
											"end": 12104,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12092,
											"end": 12105,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12089,
											"end": 12091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12089,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 12089,
											"end": 12091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12159,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12332,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 12164,
											"end": 12332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12266,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12268,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12258,
											"end": 12272,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12256,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12273,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12247,
											"end": 12248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12240,
											"end": 12249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12233,
											"end": 12250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12229,
											"end": 12274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12226,
											"end": 12228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12216,
											"end": 12332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12337,
											"end": 12462,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12337,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12407,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12447,
											"end": 12456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12447,
											"end": 12456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12386,
											"end": 12462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12467,
											"end": 12725,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12467,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12539,
											"end": 12540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12563,
											"end": 12569,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12560,
											"end": 12561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12613,
											"end": 12652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12585,
											"end": 12587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12578,
											"end": 12588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12549,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12680,
											"end": 12686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12687,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12671,
											"end": 12673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12715,
											"end": 12716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12697,
											"end": 12713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12697,
											"end": 12713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12520,
											"end": 12725,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12730,
											"end": 12866,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 12730,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12787,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12787,
											"end": 12789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12866,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12871,
											"end": 13251,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 12871,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12946,
											"end": 12958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12946,
											"end": 12958,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13004,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12993,
											"end": 13005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12993,
											"end": 13005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12993,
											"end": 13005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 13060,
											"end": 13066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13046,
											"end": 13073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13046,
											"end": 13073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13124,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13087,
											"end": 13125,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13177,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13162,
											"end": 13165,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13158,
											"end": 13178,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13155,
											"end": 13156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13148,
											"end": 13179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13199,
											"end": 13200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13192,
											"end": 13207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13227,
											"end": 13228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 13251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13256,
											"end": 13383,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 13256,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13317,
											"end": 13327,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13312,
											"end": 13315,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13308,
											"end": 13328,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13352,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13345,
											"end": 13346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13338,
											"end": 13353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13369,
											"end": 13370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13362,
											"end": 13377,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"Cenun\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1196,
								"contract": "Cenun.sol:Cenun",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)1191_storage)"
							},
							{
								"astId": 2091,
								"contract": "Cenun.sol:Cenun",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1789_storage)"
							},
							{
								"astId": 133,
								"contract": "Cenun.sol:Cenun",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "Cenun.sol:Cenun",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "Cenun.sol:Cenun",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "Cenun.sol:Cenun",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "Cenun.sol:Cenun",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 738,
								"contract": "Cenun.sol:Cenun",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1789_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1789_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)1191_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)1191_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1789_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1788,
										"contract": "Cenun.sol:Cenun",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1488_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)1191_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 1188,
										"contract": "Cenun.sol:Cenun",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 1190,
										"contract": "Cenun.sol:Cenun",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1488_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1483,
										"contract": "Cenun.sol:Cenun",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1487,
										"contract": "Cenun.sol:Cenun",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cenun.sol\":5679:16095  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"Cenun.sol\":6254:6367  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Cenun.sol\":6320:6333  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"Cenun.sol\":6320:6325  _name */\n  0x03\n  swap1\n    /* \"Cenun.sol\":6320:6333  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Cenun.sol\":6343:6360  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"Cenun.sol\":6343:6350  _symbol */\n  0x04\n  swap1\n    /* \"Cenun.sol\":6343:6360  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Cenun.sol\":6254:6367  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Cenun.sol\":5679:16095  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:895   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":123:126   */\n  dup3\n    /* \"#utility.yul\":116:120   */\n  0x1f\n    /* \"#utility.yul\":108:114   */\n  dup4\n    /* \"#utility.yul\":104:121   */\n  add\n    /* \"#utility.yul\":100:127   */\n  slt\n    /* \"#utility.yul\":90:92   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":145:150   */\n  dup1\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":131:151   */\n  revert\n    /* \"#utility.yul\":90:92   */\ntag_24:\n    /* \"#utility.yul\":172:185   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":234:244   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":231:233   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":247:265   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":296:298   */\n  0x40\n    /* \"#utility.yul\":290:299   */\n  mload\n    /* \"#utility.yul\":318:322   */\n  0x20\n    /* \"#utility.yul\":388:390   */\n  0x1f\n    /* \"#utility.yul\":369:382   */\n  dup5\n  add\n  not(0x1f)\n    /* \"#utility.yul\":365:392   */\n  and\n    /* \"#utility.yul\":353:393   */\n  dup3\n  add\n    /* \"#utility.yul\":349:398   */\n  dup2\n  add\n    /* \"#utility.yul\":413:431   */\n  dup4\n  dup2\n  gt\n    /* \"#utility.yul\":433:455   */\n  dup4\n  dup3\n  lt\n    /* \"#utility.yul\":410:456   */\n  or\n    /* \"#utility.yul\":407:409   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":459:477   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":495:497   */\n  0x40\n    /* \"#utility.yul\":488:510   */\n  mstore\n    /* \"#utility.yul\":519:537   */\n  dup4\n  dup3\n  mstore\n    /* \"#utility.yul\":556:571   */\n  dup6\n  dup5\n  add\n    /* \"#utility.yul\":552:576   */\n  dup2\n  add\n    /* \"#utility.yul\":549:582   */\n  dup8\n  lt\n    /* \"#utility.yul\":546:548   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":599:604   */\n  dup5\n    /* \"#utility.yul\":592:597   */\n  dup6\n    /* \"#utility.yul\":585:605   */\n  revert\n    /* \"#utility.yul\":546:548   */\ntag_30:\n    /* \"#utility.yul\":625:630   */\n  dup5\n    /* \"#utility.yul\":616:630   */\n  swap3\n  pop\n    /* \"#utility.yul\":639:772   */\ntag_31:\n    /* \"#utility.yul\":653:655   */\n  dup4\n    /* \"#utility.yul\":650:651   */\n  dup4\n    /* \"#utility.yul\":647:656   */\n  lt\n    /* \"#utility.yul\":639:772   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":741:755   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":737:760   */\n  dup2\n  add\n    /* \"#utility.yul\":731:761   */\n  mload\n    /* \"#utility.yul\":710:724   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":706:729   */\n  dup3\n  add\n    /* \"#utility.yul\":699:762   */\n  mstore\n    /* \"#utility.yul\":664:674   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"#utility.yul\":639:772   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":790:792   */\n  dup4\n    /* \"#utility.yul\":787:788   */\n  dup4\n    /* \"#utility.yul\":784:793   */\n  gt\n    /* \"#utility.yul\":781:783   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":849:854   */\n  dup5\n    /* \"#utility.yul\":844:846   */\n  dup2\n    /* \"#utility.yul\":839:841   */\n  dup6\n    /* \"#utility.yul\":831:837   */\n  dup5\n    /* \"#utility.yul\":827:842   */\n  add\n    /* \"#utility.yul\":823:847   */\n  add\n    /* \"#utility.yul\":816:855   */\n  mstore\n    /* \"#utility.yul\":781:783   */\ntag_34:\n  pop\n    /* \"#utility.yul\":883:889   */\n  swap6\n    /* \"#utility.yul\":80:895   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":900:1496   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":1060:1062   */\n  0x40\n    /* \"#utility.yul\":1048:1057   */\n  dup4\n    /* \"#utility.yul\":1039:1046   */\n  dup6\n    /* \"#utility.yul\":1035:1058   */\n  sub\n    /* \"#utility.yul\":1031:1063   */\n  slt\n    /* \"#utility.yul\":1028:1030   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1081:1087   */\n  dup2\n    /* \"#utility.yul\":1073:1079   */\n  dup3\n    /* \"#utility.yul\":1066:1088   */\n  revert\n    /* \"#utility.yul\":1028:1030   */\ntag_36:\n    /* \"#utility.yul\":1113:1129   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1178:1192   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1175:1177   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1210:1216   */\n  dup4\n    /* \"#utility.yul\":1202:1208   */\n  dup5\n    /* \"#utility.yul\":1195:1217   */\n  revert\n    /* \"#utility.yul\":1175:1177   */\ntag_37:\n    /* \"#utility.yul\":1238:1301   */\n  tag_38\n    /* \"#utility.yul\":1293:1300   */\n  dup7\n    /* \"#utility.yul\":1284:1290   */\n  dup4\n    /* \"#utility.yul\":1273:1282   */\n  dup8\n    /* \"#utility.yul\":1269:1291   */\n  add\n    /* \"#utility.yul\":1238:1301   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1228:1301   */\n  swap4\n  pop\n    /* \"#utility.yul\":1347:1349   */\n  0x20\n    /* \"#utility.yul\":1336:1345   */\n  dup6\n    /* \"#utility.yul\":1332:1350   */\n  add\n    /* \"#utility.yul\":1326:1351   */\n  mload\n    /* \"#utility.yul\":1310:1351   */\n  swap2\n  pop\n    /* \"#utility.yul\":1376:1378   */\n  dup1\n    /* \"#utility.yul\":1366:1374   */\n  dup3\n    /* \"#utility.yul\":1363:1379   */\n  gt\n    /* \"#utility.yul\":1360:1362   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1389:1395   */\n  dup4\n    /* \"#utility.yul\":1382:1404   */\n  revert\n    /* \"#utility.yul\":1360:1362   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1425:1490   */\n  tag_40\n    /* \"#utility.yul\":1482:1489   */\n  dup6\n    /* \"#utility.yul\":1471:1479   */\n  dup3\n    /* \"#utility.yul\":1460:1469   */\n  dup7\n    /* \"#utility.yul\":1456:1480   */\n  add\n    /* \"#utility.yul\":1425:1490   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1415:1490   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1018:1496   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1501:1881   */\ntag_11:\n    /* \"#utility.yul\":1586:1587   */\n  0x02\n    /* \"#utility.yul\":1576:1588   */\n  dup2\n  div\n    /* \"#utility.yul\":1633:1634   */\n  0x01\n    /* \"#utility.yul\":1623:1635   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1644:1646   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1698:1702   */\n  0x7f\n    /* \"#utility.yul\":1690:1696   */\n  dup3\n    /* \"#utility.yul\":1686:1703   */\n  and\n    /* \"#utility.yul\":1676:1703   */\n  swap2\n  pop\n    /* \"#utility.yul\":1644:1646   */\ntag_42:\n    /* \"#utility.yul\":1751:1753   */\n  0x20\n    /* \"#utility.yul\":1743:1749   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  lt\n    /* \"#utility.yul\":1720:1738   */\n  dup2\n    /* \"#utility.yul\":1717:1755   */\n  eq\n    /* \"#utility.yul\":1714:1716   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1797:1807   */\n  0x4e487b71\n    /* \"#utility.yul\":1792:1795   */\n  0xe0\n    /* \"#utility.yul\":1788:1808   */\n  shl\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1809   */\n  mstore\n    /* \"#utility.yul\":1832:1836   */\n  0x22\n    /* \"#utility.yul\":1829:1830   */\n  0x04\n    /* \"#utility.yul\":1822:1837   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1714:1716   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1556:1881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1886:2013   */\ntag_27:\n    /* \"#utility.yul\":1947:1957   */\n  0x4e487b71\n    /* \"#utility.yul\":1942:1945   */\n  0xe0\n    /* \"#utility.yul\":1938:1958   */\n  shl\n    /* \"#utility.yul\":1935:1936   */\n  0x00\n    /* \"#utility.yul\":1928:1959   */\n  mstore\n    /* \"#utility.yul\":1978:1982   */\n  0x41\n    /* \"#utility.yul\":1975:1976   */\n  0x04\n    /* \"#utility.yul\":1968:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x24\n    /* \"#utility.yul\":1999:2000   */\n  0x00\n    /* \"#utility.yul\":1992:2007   */\n  revert\n    /* \"#utility.yul\":1918:2013   */\ntag_21:\n    /* \"Cenun.sol\":5679:16095  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cenun.sol\":5679:16095  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"Cenun.sol\":10035:10247  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"Cenun.sol\":6643:6745  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"Cenun.sol\":8012:8184  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"Cenun.sol\":6486:6499  string memory */\n      0x60\n        /* \"Cenun.sol\":6518:6523  _name */\n      0x03\n        /* \"Cenun.sol\":6511:6523  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Cenun.sol\":6432:6530  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"Cenun.sol\":8612:8616  bool */\n      0x00\n        /* \"Cenun.sol\":8628:8667  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"Cenun.sol\":8637:8649  _msgSender() */\n      tag_72\n        /* \"Cenun.sol\":8637:8647  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":8637:8649  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"Cenun.sol\":8651:8658  spender */\n      dup5\n        /* \"Cenun.sol\":8660:8666  amount */\n      dup5\n        /* \"Cenun.sol\":8628:8636  _approve */\n      tag_74\n        /* \"Cenun.sol\":8628:8667  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"Cenun.sol\":8684:8688  true */\n      0x01\n        /* \"Cenun.sol\":8529:8695  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"Cenun.sol\":7607:7619  _totalSupply */\n      sload(0x02)\n        /* \"Cenun.sol\":7520:7626  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n    tag_32:\n        /* \"Cenun.sol\":9298:9302  bool */\n      0x00\n        /* \"Cenun.sol\":9314:9350  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"Cenun.sol\":9324:9330  sender */\n      dup5\n        /* \"Cenun.sol\":9332:9341  recipient */\n      dup5\n        /* \"Cenun.sol\":9343:9349  amount */\n      dup5\n        /* \"Cenun.sol\":9314:9323  _transfer */\n      tag_78\n        /* \"Cenun.sol\":9314:9350  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      dup5\n      and\n        /* \"Cenun.sol\":9361:9385  uint256 currentAllowance */\n      0x00\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":9388:9399  _allowances */\n      0x01\n        /* \"Cenun.sol\":9388:9407  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Cenun.sol\":9361:9385  uint256 currentAllowance */\n      dup2\n        /* \"Cenun.sol\":9408:9420  _msgSender() */\n      tag_79\n        /* \"Cenun.sol\":9408:9418  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":9408:9420  _msgSender() */\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":9388:9421  _allowances[sender][_msgSender()] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Cenun.sol\":9361:9421  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"Cenun.sol\":9459:9465  amount */\n      dup3\n        /* \"Cenun.sol\":9439:9455  currentAllowance */\n      dup2\n        /* \"Cenun.sol\":9439:9465  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"Cenun.sol\":9431:9510  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"Cenun.sol\":9544:9601  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"Cenun.sol\":9553:9559  sender */\n      dup6\n        /* \"Cenun.sol\":9561:9573  _msgSender() */\n      tag_84\n        /* \"Cenun.sol\":9561:9571  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":9561:9573  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Cenun.sol\":9594:9600  amount */\n      dup6\n        /* \"Cenun.sol\":9575:9591  currentAllowance */\n      dup5\n        /* \"Cenun.sol\":9575:9600  currentAllowance - amount */\n      sub\n        /* \"Cenun.sol\":9544:9552  _approve */\n      tag_74\n        /* \"Cenun.sol\":9544:9601  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"Cenun.sol\":9629:9633  true */\n      0x01\n      swap5\n        /* \"Cenun.sol\":9162:9640  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"Cenun.sol\":7451:7453  18 */\n      0x12\n        /* \"Cenun.sol\":7369:7460  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":10035:10247  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"Cenun.sol\":10123:10127  bool */\n      0x00\n        /* \"Cenun.sol\":10139:10219  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n        /* \"Cenun.sol\":10148:10160  _msgSender() */\n      tag_88\n        /* \"Cenun.sol\":10148:10158  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":10148:10160  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"Cenun.sol\":10162:10169  spender */\n      dup5\n        /* \"Cenun.sol\":10208:10218  addedValue */\n      dup5\n        /* \"Cenun.sol\":10171:10182  _allowances */\n      0x01\n        /* \"Cenun.sol\":10171:10196  _allowances[_msgSender()] */\n      0x00\n        /* \"Cenun.sol\":10183:10195  _msgSender() */\n      tag_89\n        /* \"Cenun.sol\":10183:10193  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":10183:10195  _msgSender() */\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":10171:10196  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":10171:10205  _allowances[_msgSender()][spender] */\n      swap2\n      dup12\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":10171:10218  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"Cenun.sol\":10139:10147  _approve */\n      tag_74\n        /* \"Cenun.sol\":10139:10219  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":7784:7802  _balances[account] */\n      dup2\n      and\n        /* \"Cenun.sol\":7758:7765  uint256 */\n      0x00\n        /* \"Cenun.sol\":7784:7802  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":7684:7809  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_92:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":6643:6745  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"Cenun.sol\":6699:6712  string memory */\n      0x60\n        /* \"Cenun.sol\":6731:6738  _symbol */\n      0x04\n        /* \"Cenun.sol\":6724:6738  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"Cenun.sol\":10827:10831  bool */\n      0x00\n        /* \"Cenun.sol\":10843:10867  uint256 currentAllowance */\n      dup1\n        /* \"Cenun.sol\":10870:10881  _allowances */\n      0x01\n        /* \"Cenun.sol\":10870:10895  _allowances[_msgSender()] */\n      0x00\n        /* \"Cenun.sol\":10882:10894  _msgSender() */\n      tag_100\n        /* \"Cenun.sol\":10882:10892  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":10882:10894  _msgSender() */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":10870:10895  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":10870:10904  _allowances[_msgSender()][spender] */\n      swap2\n      dup9\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"Cenun.sol\":10922:10957  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"Cenun.sol\":10914:10999  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_103\n      jump\t// in\n    tag_101:\n        /* \"Cenun.sol\":11033:11100  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"Cenun.sol\":11042:11054  _msgSender() */\n      tag_105\n        /* \"Cenun.sol\":11042:11052  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":11042:11054  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"Cenun.sol\":11056:11063  spender */\n      dup6\n        /* \"Cenun.sol\":11084:11099  subtractedValue */\n      dup6\n        /* \"Cenun.sol\":11065:11081  currentAllowance */\n      dup5\n        /* \"Cenun.sol\":11065:11099  currentAllowance - subtractedValue */\n      sub\n        /* \"Cenun.sol\":11033:11041  _approve */\n      tag_74\n        /* \"Cenun.sol\":11033:11100  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"Cenun.sol\":11128:11132  true */\n      0x01\n      swap4\n        /* \"Cenun.sol\":10734:11139  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":8012:8184  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"Cenun.sol\":8098:8102  bool */\n      0x00\n        /* \"Cenun.sol\":8114:8156  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"Cenun.sol\":8124:8136  _msgSender() */\n      tag_108\n        /* \"Cenun.sol\":8124:8134  _msgSender */\n      tag_73\n        /* \"Cenun.sol\":8124:8136  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"Cenun.sol\":8138:8147  recipient */\n      dup5\n        /* \"Cenun.sol\":8149:8155  amount */\n      dup5\n        /* \"Cenun.sol\":8114:8123  _transfer */\n      tag_78\n        /* \"Cenun.sol\":8114:8156  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Cenun.sol\":8331:8338  uint256 */\n      0x00\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Cenun.sol\":8357:8368  _allowances */\n      0x01\n        /* \"Cenun.sol\":8357:8375  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Cenun.sol\":8357:8384  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Cenun.sol\":8242:8391  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"Cenun.sol\":4262:4272  msg.sender */\n      caller\n        /* \"Cenun.sol\":4183:4279  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Cenun.sol\":14310:14680  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14441:14460  owner != address(0) */\n      dup4\n      and\n        /* \"Cenun.sol\":14433:14501  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14519:14540  spender != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":14511:14579  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_117\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":14590:14608  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Cenun.sol\":14590:14601  _allowances */\n      0x01\n        /* \"Cenun.sol\":14590:14608  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Cenun.sol\":14590:14617  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Cenun.sol\":14590:14626  _allowances[owner][spender] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"Cenun.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_118\n      swap1\n        /* \"Cenun.sol\":14620:14626  amount */\n      dup6\n      swap1\n        /* \"Cenun.sol\":14641:14673  Approval(owner, spender, amount) */\n      tag_28\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":14310:14680  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":11613:12326  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11748:11768  sender != address(0) */\n      dup4\n      and\n        /* \"Cenun.sol\":11740:11810  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_122\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11828:11851  recipient != address(0) */\n      dup3\n      and\n        /* \"Cenun.sol\":11820:11891  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_125\n      jump\t// in\n    tag_123:\n        /* \"Cenun.sol\":11902:11949  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_126\n        /* \"Cenun.sol\":11923:11929  sender */\n      dup4\n        /* \"Cenun.sol\":11931:11940  recipient */\n      dup4\n        /* \"Cenun.sol\":11942:11948  amount */\n      dup4\n        /* \"Cenun.sol\":11902:11922  _beforeTokenTransfer */\n      tag_127\n        /* \"Cenun.sol\":11902:11949  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":11984:12001  _balances[sender] */\n      dup4\n      and\n        /* \"Cenun.sol\":11960:11981  uint256 senderBalance */\n      0x00\n        /* \"Cenun.sol\":11984:12001  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Cenun.sol\":12019:12042  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Cenun.sol\":12011:12085  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_130\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12119:12136  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Cenun.sol\":12119:12128  _balances */\n      0x00\n        /* \"Cenun.sol\":12119:12136  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Cenun.sol\":12139:12161  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"Cenun.sol\":12119:12161  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"Cenun.sol\":12181:12201  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"Cenun.sol\":12155:12161  amount */\n      dup5\n      swap3\n        /* \"Cenun.sol\":12119:12128  _balances */\n      swap1\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"Cenun.sol\":12155:12161  amount */\n      dup5\n      swap1\n        /* \"Cenun.sol\":12181:12211  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cenun.sol\":12244:12253  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      and\n        /* \"Cenun.sol\":12236:12242  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Cenun.sol\":12255:12261  amount */\n      dup5\n        /* \"Cenun.sol\":12227:12262  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Cenun.sol\":12273:12319  _afterTokenTransfer(sender, recipient, amount) */\n      tag_133\n        /* \"Cenun.sol\":12293:12299  sender */\n      dup5\n        /* \"Cenun.sol\":12301:12310  recipient */\n      dup5\n        /* \"Cenun.sol\":12312:12318  amount */\n      dup5\n        /* \"Cenun.sol\":12273:12292  _afterTokenTransfer */\n      tag_127\n        /* \"Cenun.sol\":12273:12319  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"Cenun.sol\":11613:12326  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Cenun.sol\":15264:15385  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_138:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:392   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_142:\n        /* \"#utility.yul\":355:386   */\n      tag_143\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:671   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_145:\n        /* \"#utility.yul\":575:606   */\n      tag_146\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":565:606   */\n      swap2\n      pop\n        /* \"#utility.yul\":625:665   */\n      tag_147\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":625:665   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":615:665   */\n      swap1\n      pop\n        /* \"#utility.yul\":484:671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:1018   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x60\n        /* \"#utility.yul\":810:819   */\n      dup5\n        /* \"#utility.yul\":801:808   */\n      dup7\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":843:849   */\n      dup1\n        /* \"#utility.yul\":835:841   */\n      dup2\n        /* \"#utility.yul\":828:850   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_149:\n        /* \"#utility.yul\":871:902   */\n      tag_150\n        /* \"#utility.yul\":892:901   */\n      dup5\n        /* \"#utility.yul\":871:902   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":861:902   */\n      swap3\n      pop\n        /* \"#utility.yul\":921:961   */\n      tag_151\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup6\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":921:961   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":911:961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":993:1011   */\n      add\n        /* \"#utility.yul\":980:1012   */\n      calldataload\n        /* \"#utility.yul\":970:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1018   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1023:1289   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1131:1138   */\n      dup6\n        /* \"#utility.yul\":1127:1150   */\n      sub\n        /* \"#utility.yul\":1123:1155   */\n      slt\n        /* \"#utility.yul\":1120:1122   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1173:1179   */\n      dup2\n        /* \"#utility.yul\":1165:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1180   */\n      revert\n        /* \"#utility.yul\":1120:1122   */\n    tag_153:\n        /* \"#utility.yul\":1201:1232   */\n      tag_154\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1201:1232   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1191:1232   */\n      swap5\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1251:1283   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1110:1289   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1481   */\n    tag_24:\n        /* \"#utility.yul\":1459:1473   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1452:1474   */\n      iszero\n        /* \"#utility.yul\":1434:1475   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1407:1425   */\n      add\n      swap1\n        /* \"#utility.yul\":1389:1481   */\n      jump\t// out\n        /* \"#utility.yul\":1486:2089   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x20\n        /* \"#utility.yul\":1656:1658   */\n      dup1\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1638:1659   */\n      mstore\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1682:1695   */\n      mload\n        /* \"#utility.yul\":1731:1737   */\n      dup1\n        /* \"#utility.yul\":1726:1728   */\n      dup3\n        /* \"#utility.yul\":1715:1724   */\n      dup6\n        /* \"#utility.yul\":1711:1729   */\n      add\n        /* \"#utility.yul\":1704:1738   */\n      mstore\n        /* \"#utility.yul\":1756:1760   */\n      dup3\n        /* \"#utility.yul\":1769:1909   */\n    tag_157:\n        /* \"#utility.yul\":1783:1789   */\n      dup2\n        /* \"#utility.yul\":1780:1781   */\n      dup2\n        /* \"#utility.yul\":1777:1790   */\n      lt\n        /* \"#utility.yul\":1769:1909   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1878:1892   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1874:1897   */\n      dup4\n      add\n        /* \"#utility.yul\":1868:1898   */\n      mload\n        /* \"#utility.yul\":1844:1861   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1863:1865   */\n      0x40\n        /* \"#utility.yul\":1840:1866   */\n      add\n        /* \"#utility.yul\":1833:1899   */\n      mstore\n        /* \"#utility.yul\":1798:1808   */\n      dup3\n      add\n        /* \"#utility.yul\":1769:1909   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1927:1933   */\n      dup2\n        /* \"#utility.yul\":1924:1925   */\n      dup2\n        /* \"#utility.yul\":1921:1934   */\n      gt\n        /* \"#utility.yul\":1918:1920   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1997:2001   */\n      dup4\n        /* \"#utility.yul\":1992:1994   */\n      0x40\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1972:1981   */\n      dup8\n        /* \"#utility.yul\":1968:1990   */\n      add\n        /* \"#utility.yul\":1964:1995   */\n      add\n        /* \"#utility.yul\":1957:2002   */\n      mstore\n        /* \"#utility.yul\":1918:1920   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x1f\n        /* \"#utility.yul\":2052:2067   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2048:2077   */\n      and\n        /* \"#utility.yul\":2033:2078   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2080:2082   */\n      0x40\n        /* \"#utility.yul\":2029:2083   */\n      add\n      swap4\n        /* \"#utility.yul\":1607:2089   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2493   */\n    tag_125:\n        /* \"#utility.yul\":2296:2298   */\n      0x20\n        /* \"#utility.yul\":2278:2299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2335:2337   */\n      0x23\n        /* \"#utility.yul\":2315:2333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2308:2338   */\n      mstore\n        /* \"#utility.yul\":2374:2408   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2369:2371   */\n      0x40\n        /* \"#utility.yul\":2354:2372   */\n      dup3\n      add\n        /* \"#utility.yul\":2347:2409   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2440:2442   */\n      0x60\n        /* \"#utility.yul\":2425:2443   */\n      dup3\n      add\n        /* \"#utility.yul\":2418:2451   */\n      mstore\n        /* \"#utility.yul\":2483:2486   */\n      0x80\n        /* \"#utility.yul\":2468:2487   */\n      add\n      swap1\n        /* \"#utility.yul\":2268:2493   */\n      jump\t// out\n        /* \"#utility.yul\":2498:2896   */\n    tag_117:\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2682:2703   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2739:2741   */\n      0x22\n        /* \"#utility.yul\":2719:2737   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2712:2742   */\n      mstore\n        /* \"#utility.yul\":2778:2812   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2773:2775   */\n      0x40\n        /* \"#utility.yul\":2758:2776   */\n      dup3\n      add\n        /* \"#utility.yul\":2751:2813   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2844:2846   */\n      0x60\n        /* \"#utility.yul\":2829:2847   */\n      dup3\n      add\n        /* \"#utility.yul\":2822:2854   */\n      mstore\n        /* \"#utility.yul\":2886:2889   */\n      0x80\n        /* \"#utility.yul\":2871:2890   */\n      add\n      swap1\n        /* \"#utility.yul\":2672:2896   */\n      jump\t// out\n        /* \"#utility.yul\":2901:3303   */\n    tag_130:\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3085:3106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3142:3144   */\n      0x26\n        /* \"#utility.yul\":3122:3140   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3115:3145   */\n      mstore\n        /* \"#utility.yul\":3181:3215   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3161:3179   */\n      dup3\n      add\n        /* \"#utility.yul\":3154:3216   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3247:3249   */\n      0x60\n        /* \"#utility.yul\":3232:3250   */\n      dup3\n      add\n        /* \"#utility.yul\":3225:3261   */\n      mstore\n        /* \"#utility.yul\":3293:3296   */\n      0x80\n        /* \"#utility.yul\":3278:3297   */\n      add\n      swap1\n        /* \"#utility.yul\":3075:3303   */\n      jump\t// out\n        /* \"#utility.yul\":3308:3712   */\n    tag_82:\n        /* \"#utility.yul\":3510:3512   */\n      0x20\n        /* \"#utility.yul\":3492:3513   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3549:3551   */\n      0x28\n        /* \"#utility.yul\":3529:3547   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3522:3552   */\n      mstore\n        /* \"#utility.yul\":3588:3622   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3583:3585   */\n      0x40\n        /* \"#utility.yul\":3568:3586   */\n      dup3\n      add\n        /* \"#utility.yul\":3561:3623   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3654:3656   */\n      0x60\n        /* \"#utility.yul\":3639:3657   */\n      dup3\n      add\n        /* \"#utility.yul\":3632:3670   */\n      mstore\n        /* \"#utility.yul\":3702:3705   */\n      0x80\n        /* \"#utility.yul\":3687:3706   */\n      add\n      swap1\n        /* \"#utility.yul\":3482:3712   */\n      jump\t// out\n        /* \"#utility.yul\":3717:4118   */\n    tag_122:\n        /* \"#utility.yul\":3919:3921   */\n      0x20\n        /* \"#utility.yul\":3901:3922   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3958:3960   */\n      0x25\n        /* \"#utility.yul\":3938:3956   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3931:3961   */\n      mstore\n        /* \"#utility.yul\":3997:4031   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3992:3994   */\n      0x40\n        /* \"#utility.yul\":3977:3995   */\n      dup3\n      add\n        /* \"#utility.yul\":3970:4032   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4063:4065   */\n      0x60\n        /* \"#utility.yul\":4048:4066   */\n      dup3\n      add\n        /* \"#utility.yul\":4041:4076   */\n      mstore\n        /* \"#utility.yul\":4108:4111   */\n      0x80\n        /* \"#utility.yul\":4093:4112   */\n      add\n      swap1\n        /* \"#utility.yul\":3891:4118   */\n      jump\t// out\n        /* \"#utility.yul\":4123:4523   */\n    tag_114:\n        /* \"#utility.yul\":4325:4327   */\n      0x20\n        /* \"#utility.yul\":4307:4328   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4364:4366   */\n      0x24\n        /* \"#utility.yul\":4344:4362   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4337:4367   */\n      mstore\n        /* \"#utility.yul\":4403:4437   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4398:4400   */\n      0x40\n        /* \"#utility.yul\":4383:4401   */\n      dup3\n      add\n        /* \"#utility.yul\":4376:4438   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4469:4471   */\n      0x60\n        /* \"#utility.yul\":4454:4472   */\n      dup3\n      add\n        /* \"#utility.yul\":4447:4481   */\n      mstore\n        /* \"#utility.yul\":4513:4516   */\n      0x80\n        /* \"#utility.yul\":4498:4517   */\n      add\n      swap1\n        /* \"#utility.yul\":4297:4523   */\n      jump\t// out\n        /* \"#utility.yul\":4528:4929   */\n    tag_103:\n        /* \"#utility.yul\":4730:4732   */\n      0x20\n        /* \"#utility.yul\":4712:4733   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4769:4771   */\n      0x25\n        /* \"#utility.yul\":4749:4767   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4742:4772   */\n      mstore\n        /* \"#utility.yul\":4808:4842   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4803:4805   */\n      0x40\n        /* \"#utility.yul\":4788:4806   */\n      dup3\n      add\n        /* \"#utility.yul\":4781:4843   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4874:4876   */\n      0x60\n        /* \"#utility.yul\":4859:4877   */\n      dup3\n      add\n        /* \"#utility.yul\":4852:4887   */\n      mstore\n        /* \"#utility.yul\":4919:4922   */\n      0x80\n        /* \"#utility.yul\":4904:4923   */\n      add\n      swap1\n        /* \"#utility.yul\":4702:4929   */\n      jump\t// out\n        /* \"#utility.yul\":4934:5111   */\n    tag_28:\n        /* \"#utility.yul\":5080:5105   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5068:5070   */\n      0x20\n        /* \"#utility.yul\":5053:5071   */\n      add\n      swap1\n        /* \"#utility.yul\":5035:5111   */\n      jump\t// out\n        /* \"#utility.yul\":5116:5300   */\n    tag_37:\n        /* \"#utility.yul\":5288:5292   */\n      0xff\n        /* \"#utility.yul\":5276:5293   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5258:5294   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5246:5248   */\n      0x20\n        /* \"#utility.yul\":5231:5249   */\n      add\n      swap1\n        /* \"#utility.yul\":5213:5300   */\n      jump\t// out\n        /* \"#utility.yul\":5305:5534   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":5376:5377   */\n      dup3\n        /* \"#utility.yul\":5372:5378   */\n      not\n        /* \"#utility.yul\":5369:5370   */\n      dup3\n        /* \"#utility.yul\":5366:5379   */\n      gt\n        /* \"#utility.yul\":5363:5365   */\n      iszero\n      tag_171\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5402:5435   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5458:5462   */\n      0x11\n        /* \"#utility.yul\":5455:5456   */\n      0x04\n        /* \"#utility.yul\":5448:5463   */\n      mstore\n        /* \"#utility.yul\":5488:5492   */\n      0x24\n        /* \"#utility.yul\":5409:5412   */\n      dup2\n        /* \"#utility.yul\":5476:5493   */\n      revert\n        /* \"#utility.yul\":5363:5365   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5519:5528   */\n      add\n      swap1\n        /* \"#utility.yul\":5353:5534   */\n      jump\t// out\n        /* \"#utility.yul\":5539:5919   */\n    tag_65:\n        /* \"#utility.yul\":5624:5625   */\n      0x02\n        /* \"#utility.yul\":5614:5626   */\n      dup2\n      div\n        /* \"#utility.yul\":5671:5672   */\n      0x01\n        /* \"#utility.yul\":5661:5673   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5682:5684   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5736:5740   */\n      0x7f\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5724:5741   */\n      and\n        /* \"#utility.yul\":5714:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5682:5684   */\n    tag_173:\n        /* \"#utility.yul\":5789:5791   */\n      0x20\n        /* \"#utility.yul\":5781:5787   */\n      dup3\n        /* \"#utility.yul\":5778:5792   */\n      lt\n        /* \"#utility.yul\":5758:5776   */\n      dup2\n        /* \"#utility.yul\":5755:5793   */\n      eq\n        /* \"#utility.yul\":5752:5754   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5835:5845   */\n      0x4e487b71\n        /* \"#utility.yul\":5830:5833   */\n      0xe0\n        /* \"#utility.yul\":5826:5846   */\n      shl\n        /* \"#utility.yul\":5823:5824   */\n      0x00\n        /* \"#utility.yul\":5816:5847   */\n      mstore\n        /* \"#utility.yul\":5870:5874   */\n      0x22\n        /* \"#utility.yul\":5867:5868   */\n      0x04\n        /* \"#utility.yul\":5860:5875   */\n      mstore\n        /* \"#utility.yul\":5898:5902   */\n      0x24\n        /* \"#utility.yul\":5895:5896   */\n      0x00\n        /* \"#utility.yul\":5888:5903   */\n      revert\n        /* \"#utility.yul\":5752:5754   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5594:5919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073cd5a41fec207463eef9f1a9ab7de191a513e848ac1094c63a91c81ef6e71e764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2015:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:815:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "138:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "145:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "108:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "116:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "104:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "104:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "123:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "93:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:35:1"
															},
															"nodeType": "YulIf",
															"src": "90:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "162:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "172:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "166:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "194:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "212:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "216:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "220:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "245:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "247:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "247:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "247:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "237:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "241:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "234:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:10:1"
															},
															"nodeType": "YulIf",
															"src": "231:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "276:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "296:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "290:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "280:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "318:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "312:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:67:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "373:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "377:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "369:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "369:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "384:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "384:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:27:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:40:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "395:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:49:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "335:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "457:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "459:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "459:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "459:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "416:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "428:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "413:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "436:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "448:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "433:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "410:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:46:1"
															},
															"nodeType": "YulIf",
															"src": "407:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "499:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "534:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "583:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "592:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "599:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "560:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "568:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "556:15:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "578:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "549:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:33:1"
															},
															"nodeType": "YulIf",
															"src": "546:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "616:14:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "625:5:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "620:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "714:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "722:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "710:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "710:14:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "726:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "706:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "706:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "745:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "753:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "741:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "741:14:1"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "757:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "737:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "737:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "731:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "731:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "650:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "647:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "657:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "659:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "668:1:1"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "671:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "664:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "659:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "643:3:1",
																"statements": []
															},
															"src": "639:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "831:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "839:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "827:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "827:15:1"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "844:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "823:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "823:24:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "849:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "787:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "790:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "784:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:9:1"
															},
															"nodeType": "YulIf",
															"src": "781:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "883:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "874:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "54:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "62:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "70:5:1",
														"type": ""
													}
												],
												"src": "14:881:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1064:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1073:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1081:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1039:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1035:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:32:1"
															},
															"nodeType": "YulIf",
															"src": "1028:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1099:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1103:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1138:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1160:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1142:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1193:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1202:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1210:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1178:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:14:1"
															},
															"nodeType": "YulIf",
															"src": "1175:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1228:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1293:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1238:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:63:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1314:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1389:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1376:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:16:1"
															},
															"nodeType": "YulIf",
															"src": "1360:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1471:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1482:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1425:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:65:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "976:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "987:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "999:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1007:6:1",
														"type": ""
													}
												],
												"src": "900:596:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1566:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1580:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1597:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1627:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1601:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1676:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1690:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1698:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1686:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1654:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:26:1"
															},
															"nodeType": "YulIf",
															"src": "1644:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1764:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1792:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1797:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1788:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1788:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1778:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1778:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1829:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1832:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:38:1"
															},
															"nodeType": "YulIf",
															"src": "1714:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1536:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1545:6:1",
														"type": ""
													}
												],
												"src": "1501:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1938:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1928:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1978:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c4038038062000c408339810160408190526200003491620001b9565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6109bd80620002836000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122073cd5a41fec207463eef9f1a9ab7de191a513e848ac1094c63a91c81ef6e71e764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC40 CODESIZE SUB DUP1 PUSH3 0xC40 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x273 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x220 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x164 JUMPI PUSH3 0x164 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x17B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x17F JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x1AF JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1CC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F1 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x216 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9BD DUP1 PUSH3 0x283 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x356 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x22F PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x273 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D3 DUP6 PUSH2 0x2CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x2F0 PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x2FE PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x374 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x3EB PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x4C8 SWAP1 DUP6 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x59C SWAP1 DUP5 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5F9 DUP5 DUP5 DUP5 PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH2 0x604 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x657 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH2 0x665 PUSH1 0x20 DUP5 ADD PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x68B DUP5 PUSH2 0x604 JUMP JUMPDEST SWAP3 POP PUSH2 0x699 PUSH1 0x20 DUP6 ADD PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6BB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x6C4 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x709 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6ED JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x71A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x947 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x960 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xCD5A41FEC207463EEF9F1A9AB7DE191A513E848A 0xC1 MULMOD 0x4C PUSH4 0xA91C81EF PUSH15 0x71E764736F6C634300080000330000 ",
							"sourceMap": "5679:10416:0:-:0;;;6254:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6320:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6343:17:0;;;;:7;;:17;;;;;:::i;:::-;;6254:113;;5679:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5679:10416:0;;;-1:-1:-1;5679:10416:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:1;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:1;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:1;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:1;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:1;80:815;-1:-1:-1;;;;;80:815:1:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:1;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;5679:10416:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5921:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "397:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "843:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:1"
															},
															"nodeType": "YulIf",
															"src": "790:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "861:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "871:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "970:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "769:6:1",
														"type": ""
													}
												],
												"src": "676:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1165:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1131:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1140:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:32:1"
															},
															"nodeType": "YulIf",
															"src": "1120:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1201:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1251:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1099:6:1",
														"type": ""
													}
												],
												"src": "1023:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1466:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1459:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1434:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1369:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:1",
														"type": ""
													}
												],
												"src": "1294:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1617:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1627:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1621:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1656:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1668:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1682:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1672:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1715:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1726:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1731:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1756:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1751:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1819:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1848:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1859:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1844:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1844:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1863:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1840:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1840:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1882:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1890:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1878:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1878:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1894:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1874:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1874:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1868:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1868:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1833:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1833:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1833:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1780:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1777:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1791:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1793:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1802:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1805:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1798:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1798:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1793:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1773:3:1",
																"statements": []
															},
															"src": "1769:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1972:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1983:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1968:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1968:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1992:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1964:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1964:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1997:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1957:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1924:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1927:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1921:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:13:1"
															},
															"nodeType": "YulIf",
															"src": "1918:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2021:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2056:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2064:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2052:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2052:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2073:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2048:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1587:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1598:4:1",
														"type": ""
													}
												],
												"src": "1486:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2268:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2278:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2369:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2354:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2374:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2347:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2347:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2445:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2460:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2460:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2245:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2259:4:1",
														"type": ""
													}
												],
												"src": "2094:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2849:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2649:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2663:4:1",
														"type": ""
													}
												],
												"src": "2498:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3075:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3137:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3115:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3165:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3176:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3181:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3247:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3252:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3225:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3270:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3270:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3052:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3066:4:1",
														"type": ""
													}
												],
												"src": "2901:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3482:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3499:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3492:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3544:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3572:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3583:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3588:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3561:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3659:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3679:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3459:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3473:4:1",
														"type": ""
													}
												],
												"src": "3308:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3958:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3992:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3997:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3970:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4052:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4063:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4068:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4085:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4097:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4108:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4085:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3868:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3882:4:1",
														"type": ""
													}
												],
												"src": "3717:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4297:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4348:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4337:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4403:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4376:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4458:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4469:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4474:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4447:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4490:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4502:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4490:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4274:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4288:4:1",
														"type": ""
													}
												],
												"src": "4123:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4702:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4730:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4749:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4742:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4803:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4808:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4781:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4863:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4874:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4859:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4879:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4852:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4908:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4896:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4679:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4693:4:1",
														"type": ""
													}
												],
												"src": "4528:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5035:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5045:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5057:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5053:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5045:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5087:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5080:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5015:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5026:4:1",
														"type": ""
													}
												],
												"src": "4934:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5235:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5265:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5280:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5288:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5276:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5204:4:1",
														"type": ""
													}
												],
												"src": "5116:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5409:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5418:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5423:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5414:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5414:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5455:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5458:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5448:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5448:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5448:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5483:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5488:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5476:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5476:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5476:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5369:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5376:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5372:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5366:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:13:1"
															},
															"nodeType": "YulIf",
															"src": "5363:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5512:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5523:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5526:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5336:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5339:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5345:3:1",
														"type": ""
													}
												],
												"src": "5305:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5594:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5604:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5618:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5614:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5635:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5665:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5639:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5712:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5714:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5728:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5736:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5724:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5724:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5714:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5692:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:26:1"
															},
															"nodeType": "YulIf",
															"src": "5682:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5802:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5823:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5830:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5835:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5826:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5826:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5816:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5816:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5867:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5870:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5860:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5860:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5860:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5895:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5898:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5888:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5888:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5888:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5758:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5781:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5789:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5778:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5778:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5755:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:38:1"
															},
															"nodeType": "YulIf",
															"src": "5752:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5574:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5583:6:1",
														"type": ""
													}
												],
												"src": "5539:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122073cd5a41fec207463eef9f1a9ab7de191a513e848ac1094c63a91c81ef6e71e764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x356 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x22F PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x273 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D3 DUP6 PUSH2 0x2CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x2F0 PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x2FE PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x374 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x3EB PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x4C8 SWAP1 DUP6 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x59C SWAP1 DUP5 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5F9 DUP5 DUP5 DUP5 PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH2 0x604 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x657 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH2 0x665 PUSH1 0x20 DUP5 ADD PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x68B DUP5 PUSH2 0x604 JUMP JUMPDEST SWAP3 POP PUSH2 0x699 PUSH1 0x20 DUP6 ADD PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6BB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x6C4 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x709 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6ED JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x71A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x947 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x960 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xCD5A41FEC207463EEF9F1A9AB7DE191A513E848A 0xC1 MULMOD 0x4C PUSH4 0xA91C81EF PUSH15 0x71E764736F6C634300080000330000 ",
							"sourceMap": "5679:10416:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8529:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7520:106::-;;;:::i;:::-;;;;;;;:::i;9162:478::-;;;;;;:::i;:::-;;:::i;7369:91::-;;;:::i;:::-;;;;;;;:::i;10035:212::-;;;;;;:::i;:::-;;:::i;7684:125::-;;;;;;:::i;:::-;;:::i;6643:102::-;;;:::i;10734:405::-;;;;;;:::i;:::-;;:::i;8012:172::-;;;;;;:::i;:::-;;:::i;8242:149::-;;;;;;:::i;:::-;;:::i;6432:98::-;6486:13;6518:5;6511:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:98;:::o;8529:166::-;8612:4;8628:39;8637:12;:10;:12::i;:::-;8651:7;8660:6;8628:8;:39::i;:::-;-1:-1:-1;8684:4:0;8529:166;;;;:::o;7520:106::-;7607:12;;7520:106;:::o;9162:478::-;9298:4;9314:36;9324:6;9332:9;9343:6;9314:9;:36::i;:::-;-1:-1:-1;;;;;9388:19:0;;9361:24;9388:19;;;:11;:19;;;;;9361:24;9408:12;:10;:12::i;:::-;-1:-1:-1;;;;;9388:33:0;-1:-1:-1;;;;;9388:33:0;;;;;;;;;;;;;9361:60;;9459:6;9439:16;:26;;9431:79;;;;-1:-1:-1;;;9431:79:0;;;;;;;:::i;:::-;;;;;;;;;9544:57;9553:6;9561:12;:10;:12::i;:::-;9594:6;9575:16;:25;9544:8;:57::i;:::-;-1:-1:-1;9629:4:0;;9162:478;-1:-1:-1;;;;9162:478:0:o;7369:91::-;7451:2;7369:91;:::o;10035:212::-;10123:4;10139:80;10148:12;:10;:12::i;:::-;10162:7;10208:10;10171:11;:25;10183:12;:10;:12::i;:::-;-1:-1:-1;;;;;10171:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;10171:25:0;;;:34;;;;;;;;;;:47;;;;:::i;:::-;10139:8;:80::i;7684:125::-;-1:-1:-1;;;;;7784:18:0;;7758:7;7784:18;;;;;;;;;;;7684:125;;;;:::o;6643:102::-;6699:13;6731:7;6724:14;;;;;:::i;10734:405::-;10827:4;10843:24;10870:11;:25;10882:12;:10;:12::i;:::-;-1:-1:-1;;;;;10870:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;10870:25:0;;;:34;;;;;;;;;;;-1:-1:-1;10922:35:0;;;;10914:85;;;;-1:-1:-1;;;10914:85:0;;;;;;;:::i;:::-;11033:67;11042:12;:10;:12::i;:::-;11056:7;11084:15;11065:16;:34;11033:8;:67::i;:::-;-1:-1:-1;11128:4:0;;10734:405;-1:-1:-1;;;10734:405:0:o;8012:172::-;8098:4;8114:42;8124:12;:10;:12::i;:::-;8138:9;8149:6;8114:9;:42::i;8242:149::-;-1:-1:-1;;;;;8357:18:0;;;8331:7;8357:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8242:149::o;4183:96::-;4262:10;4183:96;:::o;14310:370::-;-1:-1:-1;;;;;14441:19:0;;14433:68;;;;-1:-1:-1;;;14433:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14519:21:0;;14511:68;;;;-1:-1:-1;;;14511:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14590:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;14641:32;;;;;14620:6;;14641:32;:::i;:::-;;;;;;;;14310:370;;;:::o;11613:713::-;-1:-1:-1;;;;;11748:20:0;;11740:70;;;;-1:-1:-1;;;11740:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11828:23:0;;11820:71;;;;-1:-1:-1;;;11820:71:0;;;;;;;:::i;:::-;11902:47;11923:6;11931:9;11942:6;11902:20;:47::i;:::-;-1:-1:-1;;;;;11984:17:0;;11960:21;11984:17;;;;;;;;;;;12019:23;;;;12011:74;;;;-1:-1:-1;;;12011:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;12119:17:0;;;:9;:17;;;;;;;;;;;12139:22;;;12119:42;;12181:20;;;;;;;;:30;;12155:6;;12119:9;12181:30;;12155:6;;12181:30;:::i;:::-;;;;;;;;12244:9;-1:-1:-1;;;;;12227:35:0;12236:6;-1:-1:-1;;;;;12227:35:0;;12255:6;12227:35;;;;;;:::i;:::-;;;;;;;;12273:46;12293:6;12301:9;12312:6;12273:19;:46::i;:::-;11613:713;;;;:::o;15264:121::-;;;;:::o;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:1:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:1:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:1;2052:15;-1:-1:-1;;2048:29:1;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:1:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:1;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:1;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:402::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:34;3176:2;3161:18;;3154:62;-1:-1:-1;;;3247:2:1;3232:18;;3225:36;3293:3;3278:19;;3075:228::o;3308:404::-;3510:2;3492:21;;;3549:2;3529:18;;;3522:30;3588:34;3583:2;3568:18;;3561:62;-1:-1:-1;;;3654:2:1;3639:18;;3632:38;3702:3;3687:19;;3482:230::o;3717:401::-;3919:2;3901:21;;;3958:2;3938:18;;;3931:30;3997:34;3992:2;3977:18;;3970:62;-1:-1:-1;;;4063:2:1;4048:18;;4041:35;4108:3;4093:19;;3891:227::o;4123:400::-;4325:2;4307:21;;;4364:2;4344:18;;;4337:30;4403:34;4398:2;4383:18;;4376:62;-1:-1:-1;;;4469:2:1;4454:18;;4447:34;4513:3;4498:19;;4297:226::o;4528:401::-;4730:2;4712:21;;;4769:2;4749:18;;;4742:30;4808:34;4803:2;4788:18;;4781:62;-1:-1:-1;;;4874:2:1;4859:18;;4852:35;4919:3;4904:19;;4702:227::o;4934:177::-;5080:25;;;5068:2;5053:18;;5035:76::o;5116:184::-;5288:4;5276:17;;;;5258:36;;5246:2;5231:18;;5213:87::o;5305:229::-;;5376:1;5372:6;5369:1;5366:13;5363:2;;;-1:-1:-1;;;5402:33:1;;5458:4;5455:1;5448:15;5488:4;5409:3;5476:17;5363:2;-1:-1:-1;5519:9:1;;5353:181::o;5539:380::-;5624:1;5614:12;;5671:1;5661:12;;;5682:2;;5736:4;5728:6;5724:17;5714:27;;5682:2;5789;5781:6;5778:14;5758:18;5755:38;5752:2;;;5835:10;5830:3;5826:20;5823:1;5816:31;5870:4;5867:1;5860:15;5898:4;5895:1;5888:15;5752:2;;5594:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "498600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22606",
								"balanceOf(address)": "infinite",
								"decimals()": "329",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1073",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6320,
									"end": 6333,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6350,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6343,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6343,
									"end": 6360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6254,
									"end": 6367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 126,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 120,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 108,
									"end": 114,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 104,
									"end": 121,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 100,
									"end": 127,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 90,
									"end": 92,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 145,
									"end": 150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 131,
									"end": 151,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 90,
									"end": 92,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 92,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 185,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 172,
									"end": 185,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 234,
									"end": 244,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 231,
									"end": 233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 231,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 231,
									"end": 233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 247,
									"end": 265,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 296,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 390,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 369,
									"end": 382,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 369,
									"end": 382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 365,
									"end": 392,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 353,
									"end": 393,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 353,
									"end": 393,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 349,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 398,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 413,
									"end": 431,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 410,
									"end": 456,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 407,
									"end": 409,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 407,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 407,
									"end": 409,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 459,
									"end": 477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 510,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 519,
									"end": 537,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 556,
									"end": 571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 549,
									"end": 582,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 599,
									"end": 604,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 592,
									"end": 597,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 585,
									"end": 605,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 546,
									"end": 548,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 625,
									"end": 630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 616,
									"end": 630,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 616,
									"end": 630,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 653,
									"end": 655,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 650,
									"end": 651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 647,
									"end": 656,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 741,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 737,
									"end": 760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 737,
									"end": 760,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 731,
									"end": 761,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 706,
									"end": 729,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 706,
									"end": 729,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 699,
									"end": 762,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 664,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 639,
									"end": 772,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 639,
									"end": 772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 790,
									"end": 792,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 784,
									"end": 793,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 849,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 844,
									"end": 846,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 839,
									"end": 841,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 831,
									"end": 837,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 827,
									"end": 842,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 823,
									"end": 847,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 816,
									"end": 855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 80,
									"end": 895,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1057,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1046,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1058,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1031,
									"end": 1063,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1073,
									"end": 1079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1088,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1028,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1178,
									"end": 1192,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1210,
									"end": 1216,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1217,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1291,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1238,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1349,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1336,
									"end": 1345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1489,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1469,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1425,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1496,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1501,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1587,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1588,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1635,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1698,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1690,
									"end": 1696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1676,
									"end": 1703,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1644,
									"end": 1646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1751,
									"end": 1753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1743,
									"end": 1749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1755,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1792,
									"end": 1795,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1788,
									"end": 1808,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1809,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1836,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1829,
									"end": 1830,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1822,
									"end": 1837,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1881,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1886,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 1957,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1942,
									"end": 1945,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1938,
									"end": 1958,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1928,
									"end": 1959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1968,
									"end": 1983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1918,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 16095,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073cd5a41fec207463eef9f1a9ab7de191a513e848ac1094c63a91c81ef6e71e764736f6c63430008000033",
									".code": [
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 16095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6499,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6518,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6530,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8637,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8628,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8529,
											"end": 8695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9332,
											"end": 9341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9314,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9408,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9408,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9361,
											"end": 9421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9439,
											"end": 9465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9431,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9561,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9544,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9640,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10123,
											"end": 10127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10148,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10148,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10162,
											"end": 10169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10182,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10183,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10183,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10171,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10139,
											"end": 10219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7809,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6643,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6731,
											"end": 6738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10843,
											"end": 10867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10881,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10882,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10882,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10914,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11042,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11042,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11084,
											"end": 11099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11065,
											"end": 11081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11065,
											"end": 11099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11033,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11033,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10734,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8012,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8124,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8114,
											"end": 8156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8242,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14441,
											"end": 14460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14441,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14433,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14519,
											"end": 14540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14511,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14626,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11740,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11828,
											"end": 11851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11828,
											"end": 11851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11931,
											"end": 11940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11942,
											"end": 11948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11902,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11902,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11960,
											"end": 11981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12019,
											"end": 12042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12011,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12161,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12244,
											"end": 12253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12255,
											"end": 12261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12262,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12312,
											"end": 12318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12273,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12273,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 12326,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 625,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 828,
											"end": 850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 871,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 871,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 861,
											"end": 902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 861,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 921,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 921,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 911,
											"end": 961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 1018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1294,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1790,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1769,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 2002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2083,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 2089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2094,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2408,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2486,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2493,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2498,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3303,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2901,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3308,
											"end": 3712,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3308,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3712,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3717,
											"end": 4118,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3717,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3958,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4031,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4065,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 4118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4123,
											"end": 4523,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4123,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4498,
											"end": 4517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4523,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4528,
											"end": 4929,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4528,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4842,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4929,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4934,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5111,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5116,
											"end": 5300,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5116,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5305,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5305,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5462,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5448,
											"end": 5463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5534,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5539,
											"end": 5919,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5539,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5661,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5792,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5793,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5845,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5830,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5874,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5860,
											"end": 5875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5902,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5895,
											"end": 5896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5903,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "Cenun.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "Cenun.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "Cenun.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "Cenun.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "Cenun.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "Cenun.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "Cenun.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "Cenun.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "Cenun.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "Cenun.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"ERC20Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 738,
								"contract": "Cenun.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cenun.sol\":36174:47542  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cenun.sol\":36174:47542  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5cf3c4924d3c27a0ebbf9afd461ebac1ea0ee12cec82d75e9530767fdbeaab864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a5cf3c4924d3c27a0ebbf9afd461ebac1ea0ee12cec82d75e9530767fdbeaab864736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xCF EXTCODECOPY 0x49 0x24 0xD3 0xC2 PUSH27 0xEBBF9AFD461EBAC1EA0EE12CEC82D75E9530767FDBEAAB864736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "36174:11368:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;36174:11368:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a5cf3c4924d3c27a0ebbf9afd461ebac1ea0ee12cec82d75e9530767fdbeaab864736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xCF EXTCODECOPY 0x49 0x24 0xD3 0xC2 PUSH27 0xEBBF9AFD461EBAC1EA0EE12CEC82D75E9530767FDBEAAB864736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "36174:11368:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36174,
									"end": 47542,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5cf3c4924d3c27a0ebbf9afd461ebac1ea0ee12cec82d75e9530767fdbeaab864736f6c63430008000033",
									".code": [
										{
											"begin": 36174,
											"end": 47542,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36174,
											"end": 47542,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 738,
								"contract": "Cenun.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cenun.sol\":24698:26583  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cenun.sol\":24698:26583  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220587a272e24a49ff458481d32c0518f8e31a99c54a6bc3a4608b43542fc0a52b064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220587a272e24a49ff458481d32c0518f8e31a99c54a6bc3a4608b43542fc0a52b064736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH27 0x272E24A49FF458481D32C0518F8E31A99C54A6BC3A4608B43542FC EXP MSTORE 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "24698:1885:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;24698:1885:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220587a272e24a49ff458481d32c0518f8e31a99c54a6bc3a4608b43542fc0a52b064736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH27 0x272E24A49FF458481D32C0518F8E31A99C54A6BC3A4608B43542FC EXP MSTORE 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "24698:1885:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24698,
									"end": 26583,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220587a272e24a49ff458481d32c0518f8e31a99c54a6bc3a4608b43542fc0a52b064736f6c63430008000033",
									".code": [
										{
											"begin": 24698,
											"end": 26583,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 26583,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cenun.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cenun.sol\":{\"keccak256\":\"0x004b2d358df46eea67e0f4bed92222b19c8e0fbb2ae319f62004f26f42a20487\",\"license\":\"MIXED\",\"urls\":[\"bzz-raw://b76baad4cdcefd34640c97bd17a3adf4624574540375b639bc12145fb993ee92\",\"dweb:/ipfs/QmRvAQf7ZCpnZSwYkQ5Aa1VirpfosRHuFdYExLZuknxHR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1294:5:\n     |\n1294 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 40887,
					"file": "Cenun.sol",
					"start": 40764
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1360:5:\n     |\n1360 |     function add(AddressSet storage set, address value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 43124,
					"file": "Cenun.sol",
					"start": 42974
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1433:5:\n     |\n1433 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 45548,
					"file": "Cenun.sol",
					"start": 45419
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1294:5:\n     |\n1294 |     function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 40887,
					"file": "Cenun.sol",
					"start": 40764
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1360:5:\n     |\n1360 |     function add(AddressSet storage set, address value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 43124,
					"file": "Cenun.sol",
					"start": 42974
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8261",
				"formattedMessage": "Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    --> Cenun.sol:1433:5:\n     |\n1433 |     function add(UintSet storage set, uint256 value) internal returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Variable is shadowed in inline assembly by an instruction of the same name",
				"severity": "warning",
				"sourceLocation": {
					"end": 45548,
					"file": "Cenun.sol",
					"start": 45419
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Cenun.sol": {
				"ast": {
					"absolutePath": "Cenun.sol",
					"exportedSymbols": {
						"AccessControl": [
							1478
						],
						"AccessControlEnumerable": [
							2251
						],
						"Cenun": [
							2376
						],
						"Context": [
							121
						],
						"ERC165": [
							1176
						],
						"ERC20": [
							663
						],
						"ERC20Burnable": [
							722
						],
						"ERC20Pausable": [
							846
						],
						"EnumerableSet": [
							2076
						],
						"IAccessControl": [
							918
						],
						"IAccessControlEnumerable": [
							941
						],
						"IERC165": [
							1154
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"Pausable": [
							812
						],
						"Strings": [
							1143
						]
					},
					"id": 2377,
					"license": "MIXED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "188:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "213:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "424:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:9:0"
									},
									"scope": 77,
									"src": "378:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "439:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:9:0"
									},
									"scope": 77,
									"src": "516:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "590:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "822:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "841:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "875:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:6:0"
									},
									"scope": 77,
									"src": "804:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "887:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:0"
									},
									"scope": 77,
									"src": "1156:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1245:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1926:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1960:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:6:0"
									},
									"scope": 77,
									"src": "1892:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1972:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2328:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:6:0"
									},
									"scope": 77,
									"src": "2273:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2406:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2584:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2606:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:57:0"
									},
									"src": "2569:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2647:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2815:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:63:0"
									},
									"src": "2800:78:0"
								}
							],
							"scope": 2377,
							"src": "284:2596:0"
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2993:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3163:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3163:6:0"
								}
							],
							"contractDependencies": [
								77
							],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3018:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3176:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3248:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3274:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:15:0"
									},
									"scope": 100,
									"src": "3235:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3295:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3371:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3397:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:15:0"
									},
									"scope": 100,
									"src": "3356:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3418:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3531:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3531:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3530:7:0"
									},
									"scope": 100,
									"src": "3488:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2377,
							"src": "3135:405:0"
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3629:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3654:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4245:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4262:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4262:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4255:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4202:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:9:0"
									},
									"scope": 121,
									"src": "4183:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4352:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4369:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4369:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4362:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4302:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4336:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4335:16:0"
									},
									"scope": 121,
									"src": "4285:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "4151:235:0"
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4479:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5697:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5697:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5706:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5706:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5714:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5714:14:0"
								}
							],
							"contractDependencies": [
								77,
								100,
								121
							],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4506:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5735:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5743:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5735:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5754:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5787:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5795:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5787:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5814:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5806:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5825:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5861:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5861:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5896:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5896:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5922:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5922:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6310:57:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6320:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6320:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6320:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6343:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6343:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5951:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6266:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6287:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:0:0"
									},
									"scope": 663,
									"src": "6254:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6501:29:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6511:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6373:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6468:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6445:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6486:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6486:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6485:15:0"
									},
									"scope": 663,
									"src": "6432:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6714:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6724:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6536:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6681:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6658:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6699:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6698:15:0"
									},
									"scope": 663,
									"src": "6643:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7434:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7451:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7444:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6751:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7409:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7386:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7427:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:7:0"
									},
									"scope": 663,
									"src": "7369:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7590:36:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7607:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7600:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7466:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7563:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7581:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7580:9:0"
									},
									"scope": 663,
									"src": "7520:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7767:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7784:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7784:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7777:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7632:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7740:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7702:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7757:9:0"
									},
									"scope": 663,
									"src": "7684:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "8104:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8124:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8124:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8138:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "8114:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "8114:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "8166:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7815:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8080:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8030:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8049:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8029:35:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:0"
									},
									"scope": 663,
									"src": "8012:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8340:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 248,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8357:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8369:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"id": 251,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "8376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8357:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "8350:34:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "8190:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8313:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8260:32:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8331:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8330:9:0"
									},
									"scope": 663,
									"src": "8242:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8618:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 267,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8637:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8637:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "8651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "8628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8628:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "8628:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 274,
												"nodeType": "Return",
												"src": "8677:11:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8397:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8594:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8546:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8563:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8612:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8612:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8611:6:0"
									},
									"scope": 663,
									"src": "8529:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "9304:336:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9332:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9314:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9314:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9314:36:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "9361:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 297,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "9388:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9388:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 302,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 300,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "9408:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9408:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9388:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9361:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "9439:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "9459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9439:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9467:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9431:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9431:79:0"
											},
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "9520:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 312,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "9553:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 313,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "9561:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9561:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "9575:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "9594:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9575:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 311,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9544:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9544:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "9544:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 322,
												"nodeType": "Return",
												"src": "9622:11:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8701:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9280:8:0"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9217:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9183:81:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9298:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:6:0"
									},
									"scope": 663,
									"src": "9162:478:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10129:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10148:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10148:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "10162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 338,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "10171:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 339,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "10183:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10183:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10171:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "10197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10171:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "10208:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10171:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "10139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10139:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "10139:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 349,
												"nodeType": "Return",
												"src": "10229:11:0"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "9646:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10079:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10061:37:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10123:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10122:6:0"
									},
									"scope": 663,
									"src": "10035:212:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "10833:306:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "10843:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "10870:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 366,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 364,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10882:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10882:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10870:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 368,
													"indexExpression": {
														"id": 367,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "10896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10870:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10843:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "10922:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "10942:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10922:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10959:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10914:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "10914:85:0"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "11009:102:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "11042:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11042:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "11056:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11065:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 382,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "11084:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11065:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 377,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11033:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11033:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "11033:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 388,
												"nodeType": "Return",
												"src": "11121:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10253:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10761:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10778:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10827:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10826:6:0"
									},
									"scope": 663,
									"src": "10734:405:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11730:596:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11766:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11758:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11758:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11758:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11748:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11770:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11740:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "11740:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "11828:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11849:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11841:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11841:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11828:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11853:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11820:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "11820:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "11923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "11931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "11942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "11902:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11902:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "11902:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "senderBalance",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "11960:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "11984:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "11994:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11984:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11960:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12019:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12036:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12019:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12044:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12011:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12011:74:0"
											},
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "12095:77:0",
												"statements": [
													{
														"expression": {
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12119:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12129:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12119:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "12139:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12155:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12139:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12119:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "12119:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12181:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12191:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12181:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "12205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12181:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12181:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12244:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12255:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12227:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "12222:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12301:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12273:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12273:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "12273:46:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11145:463:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11665:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11631:81:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11730:0:0"
									},
									"scope": 663,
									"src": "11613:713:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "12667:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "12685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12704:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12696:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12696:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12696:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12685:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12708:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12677:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12677:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12774:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12774:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12753:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12753:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "12753:49:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "12813:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "12829:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12813:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "12813:22:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12845:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12845:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 501,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "12867:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12845:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "12845:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12897:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12918:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12888:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12888:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "12883:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12964:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12956:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12956:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12956:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12977:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12936:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12936:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "12936:48:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "12332:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12616:33:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12667:0:0"
									},
									"scope": 663,
									"src": "12602:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13376:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13394:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13413:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13405:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13405:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13394:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13417:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13386:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "13386:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13494:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13494:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13506:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13464:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13464:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "13464:49:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13524:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"baseExpression": {
														"id": 552,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13549:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "13559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13549:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13524:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "13585:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "13603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13585:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13611:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13577:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "13577:71:0"
											},
											{
												"id": 571,
												"nodeType": "UncheckedBlock",
												"src": "13658:79:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13682:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "13692:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13682:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "13703:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 567,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "13720:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13703:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13682:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "13682:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13746:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "13762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13746:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "13746:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 577,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13810:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13802:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13802:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13784:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13784:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "13779:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13861:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13861:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13861:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "13832:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13832:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "13832:48:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "12997:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13343:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13325:33:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13376:0:0"
									},
									"scope": 663,
									"src": "13311:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "14423:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14441:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14458:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14450:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14450:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14450:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14441:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14462:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14433:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14433:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "14519:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14538:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14530:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14519:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14542:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14511:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "14511:68:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 625,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "14590:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 628,
															"indexExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14590:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14590:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "14620:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14590:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "14590:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14650:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "14666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "14641:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14641:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "14636:37:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "13893:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14337:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14385:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14327:78:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14423:0:0"
									},
									"scope": 663,
									"src": "14310:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15383:2:0",
										"statements": []
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "14686:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15303:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15345:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15293:72:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15383:0:0"
									},
									"scope": 663,
									"src": "15264:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "16091:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15391:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16011:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16033:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:72:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16091:0:0"
									},
									"scope": 663,
									"src": "15973:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "5679:10416:0"
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16207:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 666,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "16477:7:0"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "16477:7:0"
								},
								{
									"baseName": {
										"id": 668,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "16486:5:0"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "16486:5:0"
								}
							],
							"contractDependencies": [
								77,
								100,
								121,
								663
							],
							"contractKind": "contract",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "16233:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 722,
							"linearizedBaseContracts": [
								722,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Burnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16646:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "16662:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16662:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "16656:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16656:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "16656:27:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "16498:98:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16614:16:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16646:0:0"
									},
									"scope": 722,
									"src": "16601:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "17062:295:0",
										"statements": [
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 720,
														"src": "17072:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "17109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 694,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17118:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17118:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "17099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17099:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17072:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "17149:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 700,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "17169:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17149:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17177:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17141:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17141:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "17141:75:0"
											},
											{
												"id": 714,
												"nodeType": "UncheckedBlock",
												"src": "17226:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 706,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 707,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "17268:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17268:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 709,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "17282:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 710,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "17301:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17282:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 705,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "17250:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17250:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "17250:58:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "17334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "17343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "17328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17328:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "17328:22:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "16696:295:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "17014:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "17031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17013:33:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17062:0:0"
									},
									"scope": 722,
									"src": "16996:361:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2377,
							"src": "16442:917:0"
						},
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17452:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 725,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "17947:7:0"
									},
									"id": 726,
									"nodeType": "InheritanceSpecifier",
									"src": "17947:7:0"
								}
							],
							"contractDependencies": [
								121
							],
							"contractKind": "contract",
							"documentation": {
								"id": 724,
								"nodeType": "StructuredDocumentation",
								"src": "17477:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								121
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "17961:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 731,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "18052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18051:17:0"
									},
									"src": "18039:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "18075:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 736,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "18165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18164:17:0"
									},
									"src": "18150:32:0"
								},
								{
									"constant": false,
									"id": 738,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "18188:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 737,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "18188:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "18301:32:0",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "18311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18321:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "18311:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "18311:15:0"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "18215:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 747,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18298:2:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18301:0:0"
									},
									"scope": 812,
									"src": "18287:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "18481:31:0",
										"statements": [
											{
												"expression": {
													"id": 753,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "18498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 752,
												"id": 754,
												"nodeType": "Return",
												"src": "18491:14:0"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "18339:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18443:2:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "18475:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18474:6:0"
									},
									"scope": 812,
									"src": "18428:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "18723:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18741:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 760,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "18742:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18742:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18752:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18733:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "18733:38:0"
											},
											{
												"id": 766,
												"nodeType": "PlaceholderStatement",
												"src": "18781:1:0"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "18518:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 768,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18720:2:0"
									},
									"src": "18698:91:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "18989:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 772,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "19007:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19007:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19017:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18999:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "18999:41:0"
											},
											{
												"id": 777,
												"nodeType": "PlaceholderStatement",
												"src": "19050:1:0"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "18795:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 779,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18986:2:0"
									},
									"src": "18967:91:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "19242:66:0",
										"statements": [
											{
												"expression": {
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 785,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "19252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19262:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19252:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "19252:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 790,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "19288:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19288:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "19281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19281:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "EmitStatement",
												"src": "19276:25:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "19064:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 783,
											"modifierName": {
												"id": 782,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 768,
												"src": "19228:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19228:13:0"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19208:2:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19242:0:0"
									},
									"scope": 812,
									"src": "19193:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "19488:69:0",
										"statements": [
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 801,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "19498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19508:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "19498:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "19498:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 806,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "19537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19537:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 805,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "19528:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19528:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "EmitStatement",
												"src": "19523:27:0"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "19314:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 799,
											"modifierName": {
												"id": 798,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "19477:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19477:10:0"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19457:2:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19488:0:0"
									},
									"scope": 812,
									"src": "19440:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "17917:1642:0"
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19671:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "20002:5:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "20002:5:0"
								},
								{
									"baseName": {
										"id": 817,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "20009:8:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "20009:8:0"
								}
							],
							"contractDependencies": [
								77,
								100,
								121,
								663,
								812
							],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "19697:269:0",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."
							},
							"fullyImplemented": false,
							"id": 846,
							"linearizedBaseContracts": [
								846,
								812,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20291:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 832,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "20328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "20334:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "20338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 829,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "20301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$846_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "20301:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20301:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "20301:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "20364:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 838,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "20365:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20365:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20375:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															},
															"value": "ERC20Pausable: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															}
														],
														"id": 837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20356:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "20356:64:0"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "20024:134:0",
										"text": " @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 827,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20282:8:0"
									},
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20224:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20192:72:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20291:0:0"
									},
									"scope": 846,
									"src": "20163:264:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "19967:462:0"
						},
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20526:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "20551:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 918,
							"linearizedBaseContracts": [
								918
							],
							"name": "IAccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "20672:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 857,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "20992:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 850,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "21014:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 852,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "21049:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20991:87:0"
									},
									"src": "20969:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "21085:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 866,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "21320:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "21342:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "21367:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21319:71:0"
									},
									"src": "21302:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "21397:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 875,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21695:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21742:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21694:71:0"
									},
									"src": "21677:89:0"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "21772:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "21870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "21884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21869:31:0"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "21924:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21923:6:0"
									},
									"scope": 918,
									"src": "21853:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "21936:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "22147:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22146:14:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "22184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22183:9:0"
									},
									"scope": 918,
									"src": "22125:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "22199:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "22462:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 895,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "22476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22461:31:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22501:0:0"
									},
									"scope": 918,
									"src": "22443:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "22508:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "22756:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 903,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "22770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22755:31:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22795:0:0"
									},
									"scope": 918,
									"src": "22736:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "22802:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "23309:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 911,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "23323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23308:31:0"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23348:0:0"
									},
									"scope": 918,
									"src": "23287:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2377,
							"src": "20641:2710:0"
						},
						{
							"id": 919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23458:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 921,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 918,
										"src": "23621:14:0"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "23621:14:0"
								}
							],
							"contractDependencies": [
								918
							],
							"contractKind": "interface",
							"documentation": {
								"id": 920,
								"nodeType": "StructuredDocumentation",
								"src": "23483:99:0",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 941,
							"linearizedBaseContracts": [
								941,
								918
							],
							"name": "IAccessControlEnumerable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "23642:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "24244:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 924,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "24258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24243:29:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "24296:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24295:9:0"
									},
									"scope": 941,
									"src": "24221:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "24311:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "24501:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 934,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24500:14:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "24538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24537:9:0"
									},
									"scope": 941,
									"src": "24473:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2377,
							"src": "23583:966:0"
						},
						{
							"id": 942,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24638:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 943,
								"nodeType": "StructuredDocumentation",
								"src": "24663:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "Strings",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 946,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "24720:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 944,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "24720:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24760:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "24951:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 954,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "25153:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25162:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25153:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "IfStatement",
												"src": "25149:51:0",
												"trueBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "25165:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25186:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 953,
															"id": 958,
															"nodeType": "Return",
															"src": "25179:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "25209:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"id": 963,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "25224:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25209:20:0"
											},
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "digits",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "25239:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"nodeType": "VariableDeclarationStatement",
												"src": "25239:14:0"
											},
											{
												"body": {
													"id": 978,
													"nodeType": "Block",
													"src": "25281:57:0",
													"statements": [
														{
															"expression": {
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "25295:8:0",
																"subExpression": {
																	"id": 971,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "25295:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "25295:8:0"
														},
														{
															"expression": {
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 974,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "25317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25325:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "25317:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "25317:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "25270:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25278:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25270:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "WhileStatement",
												"src": "25263:75:0"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "buffer",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "25347:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 980,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"arguments": [
														{
															"id": 984,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "25379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25369:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 982,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25373:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25369:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25347:39:0"
											},
											{
												"body": {
													"id": 1017,
													"nodeType": "Block",
													"src": "25415:131:0",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 990,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "25429:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25439:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25429:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "25429:11:0"
														},
														{
															"expression": {
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 994,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "25454:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 996,
																	"indexExpression": {
																		"id": 995,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "25461:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25454:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1001,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25484:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1006,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1004,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 949,
																									"src": "25497:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1005,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "25505:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "25497:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1003,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "25489:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1002,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "25489:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1007,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "25489:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25484:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "25478:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 999,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "25478:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25478:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25471:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 997,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "25471:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25471:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "25454:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1012,
															"nodeType": "ExpressionStatement",
															"src": "25454:56:0"
														},
														{
															"expression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "25524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25533:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "25524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "25524:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "25403:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25412:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25403:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "WhileStatement",
												"src": "25396:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "25569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1019,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "25562:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25562:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 953,
												"id": 1023,
												"nodeType": "Return",
												"src": "25555:21:0"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "24785:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24898:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24897:15:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24936:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 951,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24935:15:0"
									},
									"scope": 1143,
									"src": "24880:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "25762:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "25776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25776:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "25772:54:0",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "25788:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25809:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1032,
															"id": 1037,
															"nodeType": "Return",
															"src": "25802:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "temp",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "25835:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25835:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"id": 1042,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1028,
													"src": "25850:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25835:20:0"
											},
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "25865:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25882:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25865:18:0"
											},
											{
												"body": {
													"id": 1058,
													"nodeType": "Block",
													"src": "25911:57:0",
													"statements": [
														{
															"expression": {
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "25925:8:0",
																"subExpression": {
																	"id": 1051,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "25925:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "25925:8:0"
														},
														{
															"expression": {
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1054,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "25947:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25956:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25947:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "25947:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "25900:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25908:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25900:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "WhileStatement",
												"src": "25893:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "25996:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1062,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "26003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1066,
															1142
														],
														"referencedDeclaration": 1142,
														"src": "25984:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25984:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1064,
												"nodeType": "Return",
												"src": "25977:33:0"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "25589:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "25709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25708:15:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "25747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25746:15:0"
									},
									"scope": 1143,
									"src": "25688:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "26230:351:0",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "buffer",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "26240:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1076,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26240:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26272:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1081,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "26276:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26272:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "26272:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "26262:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1078,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26262:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26240:47:0"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1087,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "26297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1089,
														"indexExpression": {
															"hexValue": "30",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26304:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26297:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26309:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "26297:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "26297:15:0"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1093,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "26322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1095,
														"indexExpression": {
															"hexValue": "31",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26322:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26334:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "26322:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "26322:15:0"
											},
											{
												"body": {
													"id": 1127,
													"nodeType": "Block",
													"src": "26392:87:0",
													"statements": [
														{
															"expression": {
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1113,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "26406:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"id": 1114,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "26413:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26406:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1116,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "26418:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1120,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "26431:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26439:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "26431:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26418:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "26406:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1122,
															"nodeType": "ExpressionStatement",
															"src": "26406:37:0"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "26457:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26457:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "26457:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "26380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26384:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"initializationExpression": {
													"assignments": [
														1100
													],
													"declarations": [
														{
															"constant": false,
															"id": 1100,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1128,
															"src": "26352:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26352:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1106,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26364:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1102,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "26368:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26364:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "26364:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "26352:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "26387:3:0",
														"subExpression": {
															"id": 1110,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "26389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ExpressionStatement",
													"src": "26387:3:0"
												},
												"nodeType": "ForStatement",
												"src": "26347:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "26496:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26496:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26508:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26488:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "26488:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "26567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "26560:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1136,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "26560:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26560:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1140,
												"nodeType": "Return",
												"src": "26553:21:0"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "26023:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "26161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "length",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "26176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26160:31:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "26215:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26215:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26214:15:0"
									},
									"scope": 1143,
									"src": "26140:441:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "24698:1885:0"
						},
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26686:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1145,
								"nodeType": "StructuredDocumentation",
								"src": "26711:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1154,
							"linearizedBaseContracts": [
								1154
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "27015:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "27387:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27386:20:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "27430:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27429:6:0"
									},
									"scope": 1154,
									"src": "27360:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2377,
							"src": "26991:447:0"
						},
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27540:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1157,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "28170:7:0"
									},
									"id": 1158,
									"nodeType": "InheritanceSpecifier",
									"src": "28170:7:0"
								}
							],
							"contractDependencies": [
								1154
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1156,
								"nodeType": "StructuredDocumentation",
								"src": "27565:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176,
								1154
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1153
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "28336:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "28353:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "28373:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1154_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1154_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1168,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "28368:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28368:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1154",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "28368:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "28353:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1173,
												"nodeType": "Return",
												"src": "28346:47:0"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "28184:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28312:8:0"
									},
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "28272:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28271:20:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "28330:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28329:6:0"
									},
									"scope": 1176,
									"src": "28245:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2377,
							"src": "28142:260:0"
						},
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28498:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "30096:7:0"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "30096:7:0"
								},
								{
									"baseName": {
										"id": 1181,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 918,
										"src": "30105:14:0"
									},
									"id": 1182,
									"nodeType": "InheritanceSpecifier",
									"src": "30105:14:0"
								},
								{
									"baseName": {
										"id": 1183,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "30121:6:0"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "30121:6:0"
								}
							],
							"contractDependencies": [
								121,
								918,
								1154,
								1176
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "28526:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478,
								1176,
								1154,
								918,
								121
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 1191,
									"members": [
										{
											"constant": false,
											"id": 1188,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"scope": 1191,
											"src": "30160:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1187,
												"keyType": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "30160:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"scope": 1191,
											"src": "30202:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1189,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "30202:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 1478,
									"src": "30134:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "30232:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 1195,
										"keyType": {
											"id": 1192,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "30240:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "30232:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 1194,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1193,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1191,
												"src": "30251:8:0"
											},
											"referencedDeclaration": 1191,
											"src": "30251:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$1191_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 1199,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 1478,
									"src": "30282:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1197,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "30282:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 1198,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30327:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "30750:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "30771:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "30777:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30777:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1204,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "30760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30760:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "30760:30:0"
											},
											{
												"id": 1210,
												"nodeType": "PlaceholderStatement",
												"src": "30800:1:0"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "30338:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 1212,
									"name": "onlyRole",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30736:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30735:14:0"
									},
									"src": "30718:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "30966:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1221,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "30983:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "31003:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$918_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$918_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 1222,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "30998:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30998:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$918",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "30998:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "30983:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1229,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "31058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1227,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "31034:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1478_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1175,
															"src": "31034:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31034:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30983:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1232,
												"nodeType": "Return",
												"src": "30976:94:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "30814:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30942:8:0"
									},
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "30902:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30902:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30901:20:0"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "30960:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30959:6:0"
									},
									"scope": 1478,
									"src": "30875:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										885
									],
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "31248:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1245,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "31265:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1247,
															"indexExpression": {
																"id": 1246,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "31272:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31265:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$1191_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "31265:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1250,
													"indexExpression": {
														"id": 1249,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "31286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31265:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1251,
												"nodeType": "Return",
												"src": "31258:36:0"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "31083:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1241,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31224:8:0"
									},
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "31181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "31195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31180:31:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "31242:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31241:6:0"
									},
									"scope": 1478,
									"src": "31164:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "31647:419:0",
										"statements": [
											{
												"condition": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31661:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1262,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "31670:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1263,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "31676:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1261,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "31662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31662:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1294,
												"nodeType": "IfStatement",
												"src": "31657:403:0",
												"trueBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "31686:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "31794:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1276,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1258,
																										"src": "31873:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1275,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "31865:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 1274,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "31865:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1277,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "31865:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 1278,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31883:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 1272,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1143,
																								"src": "31845:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1143_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1142,
																							"src": "31845:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1279,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "31845:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 1280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "31912:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1285,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1256,
																										"src": "31985:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 1284,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "31977:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 1283,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "31977:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1286,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "31977:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 1287,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31992:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 1281,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1143,
																								"src": "31957:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1143_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1142,
																							"src": "31957:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "31957:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 1269,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "31752:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "31752:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31752:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31724:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "31724:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31724:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1266,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "31700:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31700:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1292,
															"nodeType": "ExpressionStatement",
															"src": "31700:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "31307:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "31602:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "31616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31601:31:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31647:0:0"
									},
									"scope": 1478,
									"src": "31582:484:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										893
									],
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "32322:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1305,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "32339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"id": 1306,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "32346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32339:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$1191_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "32339:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1309,
												"nodeType": "Return",
												"src": "32332:29:0"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "32072:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32295:8:0"
									},
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "32269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32268:14:0"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "32313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32312:9:0"
									},
									"scope": 1478,
									"src": "32247:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "32721:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "32742:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1327,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "32748:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "32731:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32731:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "32731:25:0"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "32374:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1321,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "32714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1320,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "32701:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32701:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1323,
											"modifierName": {
												"id": 1319,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1212,
												"src": "32692:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32692:28:0"
										}
									],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32683:8:0"
									},
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "32637:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "32651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32636:31:0"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32721:0:0"
									},
									"scope": 1478,
									"src": "32618:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "33101:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "33123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1347,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "33129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1345,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "33111:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33111:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "33111:26:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "32769:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1341,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "33094:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1340,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "33081:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33081:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1343,
											"modifierName": {
												"id": 1339,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1212,
												"src": "33072:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33072:28:0"
										}
									],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33063:8:0"
									},
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "33017:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "33031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33016:31:0"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33101:0:0"
									},
									"scope": 1478,
									"src": "32997:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										917
									],
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "33712:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "33730:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1362,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "33741:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33741:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33730:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33755:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33722:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33722:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "33722:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "33828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1370,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "33834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1368,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "33816:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33816:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "33816:26:0"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "33150:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33703:8:0"
									},
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "33657:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "33671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33656:31:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33712:0:0"
									},
									"scope": 1478,
									"src": "33635:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "34482:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1383,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "34503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1384,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "34509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1382,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "34492:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34492:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "34492:25:0"
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "33855:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "34434:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "34448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34433:31:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34482:0:0"
									},
									"scope": 1478,
									"src": "34414:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "34722:174:0",
										"statements": [
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "34732:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1396,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "34732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"arguments": [
														{
															"id": 1399,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "34773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1398,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "34760:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34760:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34732:46:0"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1402,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "34788:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1404,
															"indexExpression": {
																"id": 1403,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "34795:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34788:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$1191_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "34788:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1406,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "34813:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "34788:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "34788:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "34854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1411,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "34860:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1412,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "34879:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1409,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "34837:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34837:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "EmitStatement",
												"src": "34832:57:0"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "34530:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "34672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "34686:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34671:33:0"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34722:0:0"
									},
									"scope": 1478,
									"src": "34649:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "34961:165:0",
										"statements": [
											{
												"condition": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "34975:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1424,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "34984:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1425,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "34990:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1423,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "34976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34976:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "34971:149:0",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "35000:120:0",
													"statements": [
														{
															"expression": {
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1428,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "35014:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1430,
																			"indexExpression": {
																				"id": 1429,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1418,
																				"src": "35021:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35014:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$1191_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1188,
																		"src": "35014:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1433,
																	"indexExpression": {
																		"id": 1432,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "35035:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35014:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35046:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "35014:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1436,
															"nodeType": "ExpressionStatement",
															"src": "35014:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "35081:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1439,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "35087:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1440,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "35096:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35096:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1437,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "35069:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35069:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1443,
															"nodeType": "EmitStatement",
															"src": "35064:45:0"
														}
													]
												}
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "34922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "34936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34921:31:0"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34961:0:0"
									},
									"scope": 1478,
									"src": "34902:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "35192:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1455,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "35214:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "35220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1454,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "35206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35206:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "35202:149:0",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "35230:121:0",
													"statements": [
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1458,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "35244:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$1191_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1460,
																			"indexExpression": {
																				"id": 1459,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "35251:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35244:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$1191_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1188,
																		"src": "35244:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1463,
																	"indexExpression": {
																		"id": 1462,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "35265:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35244:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35276:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "35244:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "35244:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1468,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "35312:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1469,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "35318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1470,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "35327:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35327:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1467,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "35300:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35300:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "EmitStatement",
															"src": "35295:45:0"
														}
													]
												}
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "35153:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "35167:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35152:31:0"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35192:0:0"
									},
									"scope": 1478,
									"src": "35132:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2377,
							"src": "30061:5298:0"
						},
						{
							"id": 1479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35462:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1480,
								"nodeType": "StructuredDocumentation",
								"src": "35487:686:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2076,
							"linearizedBaseContracts": [
								2076
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1488,
									"members": [
										{
											"constant": false,
											"id": 1483,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"scope": 1488,
											"src": "36696:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1481,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1482,
												"nodeType": "ArrayTypeName",
												"src": "36696:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1487,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"scope": 1488,
											"src": "36846:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1486,
												"keyType": {
													"id": 1484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "36846:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 2076,
									"src": "36642:247:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "37128:335:0",
										"statements": [
											{
												"condition": {
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "37142:22:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1500,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "37153:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "37158:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1499,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "37143:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37143:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "37420:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37441:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1498,
															"id": 1526,
															"nodeType": "Return",
															"src": "37434:12:0"
														}
													]
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "37138:319:0",
												"trueBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "37166:248:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1509,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "37197:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1504,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "37180:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1483,
																		"src": "37180:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "37180:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37180:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "37180:23:0"
														},
														{
															"expression": {
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1512,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "37338:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1487,
																		"src": "37338:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1516,
																	"indexExpression": {
																		"id": 1514,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "37351:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37338:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1517,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "37360:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1483,
																		"src": "37360:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "37360:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37338:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "37338:40:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37399:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1498,
															"id": 1523,
															"nodeType": "Return",
															"src": "37392:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "36895:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "37073:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "37073:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "37073:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "37090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37072:32:0"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "37122:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37122:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37121:6:0"
									},
									"scope": 2076,
									"src": "37059:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "37703:1316:0",
										"statements": [
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1613,
														"src": "37813:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1547,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1543,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "37834:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1487,
														"src": "37834:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1546,
													"indexExpression": {
														"id": 1545,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "37847:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37834:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37813:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1548,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "37868:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "37868:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1611,
													"nodeType": "Block",
													"src": "38976:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38997:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1540,
															"id": 1610,
															"nodeType": "Return",
															"src": "38990:12:0"
														}
													]
												},
												"id": 1612,
												"nodeType": "IfStatement",
												"src": "37864:1149:0",
												"trueBody": {
													"id": 1608,
													"nodeType": "Block",
													"src": "37885:1085:0",
													"statements": [
														{
															"assignments": [
																1552
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1552,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1608,
																	"src": "38237:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1551,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38237:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1556,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1553,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "38261:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38261:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "38237:38:0"
														},
														{
															"assignments": [
																1558
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1558,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1608,
																	"src": "38289:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1557,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38289:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1564,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1559,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1534,
																			"src": "38309:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1483,
																		"src": "38309:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "38309:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38330:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38309:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "38289:42:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "38350:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1566,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "38363:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38350:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1592,
															"nodeType": "IfStatement",
															"src": "38346:398:0",
															"trueBody": {
																"id": 1591,
																"nodeType": "Block",
																"src": "38378:366:0",
																"statements": [
																	{
																		"assignments": [
																			1569
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1569,
																				"mutability": "mutable",
																				"name": "lastvalue",
																				"nodeType": "VariableDeclaration",
																				"scope": 1591,
																				"src": "38396:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1568,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "38396:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1574,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1570,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1534,
																					"src": "38416:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1483,
																				"src": "38416:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1573,
																			"indexExpression": {
																				"id": 1572,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1558,
																				"src": "38428:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "38416:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "38396:42:0"
																	},
																	{
																		"expression": {
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1575,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1534,
																						"src": "38538:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1483,
																					"src": "38538:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1579,
																				"indexExpression": {
																					"id": 1577,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1552,
																					"src": "38550:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "38538:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1580,
																				"name": "lastvalue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1569,
																				"src": "38567:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "38538:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1582,
																		"nodeType": "ExpressionStatement",
																		"src": "38538:38:0"
																	},
																	{
																		"expression": {
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1583,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1534,
																						"src": "38650:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1586,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1487,
																					"src": "38650:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1587,
																				"indexExpression": {
																					"id": 1585,
																					"name": "lastvalue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1569,
																					"src": "38663:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "38650:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1588,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "38676:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38650:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1590,
																		"nodeType": "ExpressionStatement",
																		"src": "38650:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1593,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1534,
																			"src": "38822:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1483,
																		"src": "38822:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "38822:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38822:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1599,
															"nodeType": "ExpressionStatement",
															"src": "38822:17:0"
														},
														{
															"expression": {
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "38907:26:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1600,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1534,
																			"src": "38914:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1487,
																		"src": "38914:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1603,
																	"indexExpression": {
																		"id": 1602,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "38927:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38914:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1605,
															"nodeType": "ExpressionStatement",
															"src": "38907:26:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38955:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1540,
															"id": 1607,
															"nodeType": "Return",
															"src": "38948:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "37469:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "37648:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1532,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "37648:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "37648:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "37665:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37647:32:0"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "37697:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37697:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37696:6:0"
									},
									"scope": 2076,
									"src": "37631:1388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "39179:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1625,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "39196:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1487,
															"src": "39196:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "39209:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39196:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1624,
												"id": 1631,
												"nodeType": "Return",
												"src": "39189:31:0"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "39025:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "39119:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1616,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "39119:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "39119:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "39136:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1619,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39118:32:0"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "39173:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39172:6:0"
									},
									"scope": 2076,
									"src": "39100:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "39373:42:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1642,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "39390:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1483,
														"src": "39390:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "39390:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1645,
												"nodeType": "Return",
												"src": "39383:25:0"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "39233:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "39325:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1635,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "39325:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "39325:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39324:17:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "39364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39363:9:0"
									},
									"scope": 2076,
									"src": "39308:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "39833:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1658,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "39850:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1483,
														"src": "39850:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1661,
													"indexExpression": {
														"id": 1660,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "39862:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39850:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1662,
												"nodeType": "Return",
												"src": "39843:25:0"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "39421:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "39770:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1649,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "39770:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "39770:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "39787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39769:32:0"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "39824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39823:9:0"
									},
									"scope": 2076,
									"src": "39757:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "40489:35:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1674,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "40506:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1483,
													"src": "40506:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1676,
												"nodeType": "Return",
												"src": "40499:18:0"
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "39881:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "40432:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1666,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "40432:3:0"
													},
													"referencedDeclaration": 1488,
													"src": "40432:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40431:17:0"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "40471:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1670,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "40471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1671,
													"nodeType": "ArrayTypeName",
													"src": "40471:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40470:18:0"
									},
									"scope": 2076,
									"src": "40415:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1682,
									"members": [
										{
											"constant": false,
											"id": 1681,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1682,
											"src": "40577:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1680,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1679,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1488,
													"src": "40577:3:0"
												},
												"referencedDeclaration": 1488,
												"src": "40577:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 2076,
									"src": "40549:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "40840:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1694,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "40862:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "40862:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1696,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "40874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1693,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "40857:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40857:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1698,
												"nodeType": "Return",
												"src": "40850:30:0"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "40600:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "40777:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1684,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "40777:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "40777:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "40801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "40801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40776:39:0"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "40834:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40834:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40833:6:0"
									},
									"scope": 2076,
									"src": "40764:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "41134:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1712,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "41159:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "41159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "41171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1711,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "41151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41151:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1716,
												"nodeType": "Return",
												"src": "41144:33:0"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "40893:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "41071:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1702,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "41071:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "41071:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "41095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41070:39:0"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "41128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41127:6:0"
									},
									"scope": 2076,
									"src": "41055:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "41351:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1730,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "41378:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "41378:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "41390:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1729,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "41368:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41368:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1734,
												"nodeType": "Return",
												"src": "41361:35:0"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "41190:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "41283:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1720,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "41283:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "41283:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "41307:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41282:39:0"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "41345:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41344:6:0"
									},
									"scope": 2076,
									"src": "41265:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "41556:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1746,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "41581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "41581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1745,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "41573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41573:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1749,
												"nodeType": "Return",
												"src": "41566:26:0"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "41409:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "41500:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1738,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "41500:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "41500:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41499:24:0"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "41547:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41546:9:0"
									},
									"scope": 2076,
									"src": "41484:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "42024:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1763,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "42045:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "42045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1765,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "42057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1762,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "42041:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42041:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1761,
												"id": 1767,
												"nodeType": "Return",
												"src": "42034:29:0"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "41605:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "41953:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1753,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "41953:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "41953:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "41977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41952:39:0"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "42015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1759,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42014:9:0"
									},
									"scope": 2076,
									"src": "41941:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "42691:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1780,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "42716:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "42716:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1779,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "42708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42708:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1783,
												"nodeType": "Return",
												"src": "42701:26:0"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "42076:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "42626:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1771,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1682,
														"src": "42626:10:0"
													},
													"referencedDeclaration": 1682,
													"src": "42626:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1682_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42625:24:0"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "42673:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1775,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "42673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1776,
													"nodeType": "ArrayTypeName",
													"src": "42673:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42672:18:0"
									},
									"scope": 2076,
									"src": "42610:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1789,
									"members": [
										{
											"constant": false,
											"id": 1788,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1789,
											"src": "42787:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1787,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1786,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1488,
													"src": "42787:3:0"
												},
												"referencedDeclaration": 1488,
												"src": "42787:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 2076,
									"src": "42759:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "43050:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1801,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "43072:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "43072:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1809,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "43108:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "43100:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1807,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "43100:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43100:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "43092:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "43092:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43092:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43084:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1803,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "43084:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43084:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1800,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "43067:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43067:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1814,
												"nodeType": "Return",
												"src": "43060:57:0"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "42810:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "42987:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1791,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "42987:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "42987:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "43011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42986:39:0"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "43044:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43043:6:0"
									},
									"scope": 2076,
									"src": "42974:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "43371:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1828,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "43396:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "43396:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1836,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1822,
																					"src": "43432:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "43424:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1834,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "43424:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43424:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "43416:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1832,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "43416:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43416:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1830,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "43408:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43408:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1827,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "43388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43388:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1841,
												"nodeType": "Return",
												"src": "43381:60:0"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "43130:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "43308:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1818,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "43308:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "43308:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "43332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43307:39:0"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "43365:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43364:6:0"
									},
									"scope": 2076,
									"src": "43292:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "43615:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1855,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "43642:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "43642:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1863,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "43678:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "43670:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1861,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "43670:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43670:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "43662:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1859,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "43662:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43662:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43654:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1857,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "43654:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43654:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1854,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "43632:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43632:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1868,
												"nodeType": "Return",
												"src": "43625:62:0"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "43454:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "43547:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1845,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "43547:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "43547:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "43571:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43546:39:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "43609:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43609:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43608:6:0"
									},
									"scope": 2076,
									"src": "43529:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "43847:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1880,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "43872:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "43872:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1879,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "43864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43864:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1878,
												"id": 1883,
												"nodeType": "Return",
												"src": "43857:26:0"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "43700:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "43791:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "43791:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "43791:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43790:24:0"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "43838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43837:9:0"
									},
									"scope": 2076,
									"src": "43775:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "44315:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1903,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1889,
																						"src": "44360:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1904,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1788,
																					"src": "44360:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1488_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1905,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "44372:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1488_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1902,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "44356:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44356:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44348:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1900,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "44348:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44348:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44340:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1898,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "44340:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44340:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "44332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1896,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44332:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44332:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1895,
												"id": 1910,
												"nodeType": "Return",
												"src": "44325:56:0"
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "43896:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "44244:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "44244:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "44244:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "44268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44243:39:0"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "44306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44305:9:0"
									},
									"scope": 2076,
									"src": "44232:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "45009:176:0",
										"statements": [
											{
												"assignments": [
													1926
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "store",
														"nodeType": "VariableDeclaration",
														"scope": 1941,
														"src": "45019:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1924,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "45019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1925,
															"nodeType": "ArrayTypeName",
															"src": "45019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1931,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1928,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "45052:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "45052:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1927,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "45044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45044:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45019:44:0"
											},
											{
												"assignments": [
													1936
												],
												"declarations": [
													{
														"constant": false,
														"id": 1936,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 1941,
														"src": "45073:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45073:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1935,
															"nodeType": "ArrayTypeName",
															"src": "45073:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1937,
												"nodeType": "VariableDeclarationStatement",
												"src": "45073:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45116:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "45130:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "45140:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "45130:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1936,
														"isOffset": false,
														"isSlot": false,
														"src": "45130:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1926,
														"isOffset": false,
														"isSlot": false,
														"src": "45140:5:0",
														"valueSize": 1
													}
												],
												"id": 1938,
												"nodeType": "InlineAssembly",
												"src": "45107:48:0"
											},
											{
												"expression": {
													"id": 1939,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1936,
													"src": "45172:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1940,
												"nodeType": "Return",
												"src": "45165:13:0"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "44394:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "44944:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1915,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1914,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "44944:10:0"
													},
													"referencedDeclaration": 1789,
													"src": "44944:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44943:24:0"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "44991:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1918,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "44991:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1919,
													"nodeType": "ArrayTypeName",
													"src": "44991:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44990:18:0"
									},
									"scope": 2076,
									"src": "44928:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1946,
									"members": [
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"scope": 1946,
											"src": "45232:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1944,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1943,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1488,
													"src": "45232:3:0"
												},
												"referencedDeclaration": 1488,
												"src": "45232:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1488_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 2076,
									"src": "45207:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "45492:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1958,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "45514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "45514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "45534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45526:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1960,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "45526:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45526:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1957,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "45509:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45509:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1965,
												"nodeType": "Return",
												"src": "45502:39:0"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "45255:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "45432:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1948,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "45432:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "45432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "45453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45431:36:0"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "45486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45485:6:0"
									},
									"scope": 2076,
									"src": "45419:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "45792:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1979,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "45817:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "45817:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1983,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "45837:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1981,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "45829:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45829:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1978,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "45809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45809:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1986,
												"nodeType": "Return",
												"src": "45802:42:0"
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "45554:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "45732:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1969,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "45732:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "45732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "45753:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45731:36:0"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "45786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45785:6:0"
									},
									"scope": 2076,
									"src": "45716:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "46015:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2000,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "46042:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "46042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2004,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "46062:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46054:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2002,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "46054:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46054:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1999,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "46032:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46032:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1998,
												"id": 2007,
												"nodeType": "Return",
												"src": "46025:44:0"
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "45857:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "45950:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1990,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "45950:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "45950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "45971:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45949:36:0"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "46009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46008:6:0"
									},
									"scope": 2076,
									"src": "45932:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "46226:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2019,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "46251:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "46251:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2018,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "46243:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46243:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2017,
												"id": 2022,
												"nodeType": "Return",
												"src": "46236:26:0"
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "46082:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "46173:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "46173:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "46173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46172:21:0"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "46217:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46216:9:0"
									},
									"scope": 2076,
									"src": "46157:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "46691:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2038,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "46720:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1945,
																	"src": "46720:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1488_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2040,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "46732:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1488_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2037,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "46716:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46716:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "46708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46708:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46708:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2043,
												"nodeType": "Return",
												"src": "46701:38:0"
											}
										]
									},
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "46275:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "46623:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2026,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "46623:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "46623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "46644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46622:36:0"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "46682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46681:9:0"
									},
									"scope": 2076,
									"src": "46611:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "47364:176:0",
										"statements": [
											{
												"assignments": [
													2059
												],
												"declarations": [
													{
														"constant": false,
														"id": 2059,
														"mutability": "mutable",
														"name": "store",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "47374:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2057,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "47374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2058,
															"nodeType": "ArrayTypeName",
															"src": "47374:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2061,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "47407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1945,
															"src": "47407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1488_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2060,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "47399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1488_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47399:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47374:44:0"
											},
											{
												"assignments": [
													2069
												],
												"declarations": [
													{
														"constant": false,
														"id": 2069,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "47428:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2067,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "47428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2068,
															"nodeType": "ArrayTypeName",
															"src": "47428:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"nodeType": "VariableDeclarationStatement",
												"src": "47428:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47471:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47485:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "47495:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "47485:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2069,
														"isOffset": false,
														"isSlot": false,
														"src": "47485:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2059,
														"isOffset": false,
														"isSlot": false,
														"src": "47495:5:0",
														"valueSize": 1
													}
												],
												"id": 2071,
												"nodeType": "InlineAssembly",
												"src": "47462:48:0"
											},
											{
												"expression": {
													"id": 2072,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2069,
													"src": "47527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2073,
												"nodeType": "Return",
												"src": "47520:13:0"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "46752:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "47302:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "47302:7:0"
													},
													"referencedDeclaration": 1946,
													"src": "47302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1946_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47301:21:0"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "47346:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2051,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2052,
													"nodeType": "ArrayTypeName",
													"src": "47346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47345:18:0"
									},
									"scope": 2076,
									"src": "47286:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "36174:11368:0"
						},
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "47648:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2079,
										"name": "IAccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 941,
										"src": "47815:24:0"
									},
									"id": 2080,
									"nodeType": "InheritanceSpecifier",
									"src": "47815:24:0"
								},
								{
									"baseName": {
										"id": 2081,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1478,
										"src": "47841:13:0"
									},
									"id": 2082,
									"nodeType": "InheritanceSpecifier",
									"src": "47841:13:0"
								}
							],
							"contractDependencies": [
								121,
								918,
								941,
								1154,
								1176,
								1478
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "47675:94:0",
								"text": " @dev Extension of {AccessControl} that allows enumerating the members of each role."
							},
							"fullyImplemented": true,
							"id": 2251,
							"linearizedBaseContracts": [
								2251,
								1478,
								1176,
								1154,
								941,
								918,
								121
							],
							"name": "AccessControlEnumerable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2086,
									"libraryName": {
										"id": 2083,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2076,
										"src": "47867:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "47861:49:0",
									"typeName": {
										"id": 2085,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2084,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1789,
											"src": "47885:24:0"
										},
										"referencedDeclaration": 1789,
										"src": "47885:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 2091,
									"mutability": "mutable",
									"name": "_roleMembers",
									"nodeType": "VariableDeclaration",
									"scope": 2251,
									"src": "47916:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
										"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
									},
									"typeName": {
										"id": 2090,
										"keyType": {
											"id": 2087,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "47924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "47916:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
											"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
										},
										"valueType": {
											"id": 2089,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2088,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1789,
												"src": "47935:24:0"
											},
											"referencedDeclaration": 1789,
											"src": "47935:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1789_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1234
									],
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "48140:121:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2100,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "48157:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2102,
																		"name": "IAccessControlEnumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "48177:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$941_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$941_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	],
																	"id": 2101,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "48172:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48172:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlEnumerable_$941",
																	"typeString": "type(contract IAccessControlEnumerable)"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "48172:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "48157:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2108,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "48242:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2106,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "48218:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$2251_$",
																	"typeString": "type(contract super AccessControlEnumerable)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1234,
															"src": "48218:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48218:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "48157:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2111,
												"nodeType": "Return",
												"src": "48150:104:0"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "47988:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2096,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "48116:8:0"
									},
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "48076:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "48076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48075:20:0"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "48134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "48134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48133:6:0"
									},
									"scope": 2251,
									"src": "48049:212:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										932
									],
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "48937:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "48976:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2124,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "48954:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2126,
															"indexExpression": {
																"id": 2125,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "48967:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "48954:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1912,
														"src": "48954:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1789_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48954:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2130,
												"nodeType": "Return",
												"src": "48947:35:0"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "48267:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "48910:8:0"
									},
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "48869:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "48883:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48868:29:0"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "48928:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48927:9:0"
									},
									"scope": 2251,
									"src": "48846:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										940
									],
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "49238:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2141,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "49255:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2143,
															"indexExpression": {
																"id": 2142,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "49268:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49255:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1885,
														"src": "49255:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1789_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49255:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2146,
												"nodeType": "Return",
												"src": "49248:34:0"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "48995:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2137,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "49211:8:0"
									},
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "49185:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49184:14:0"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "49229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49228:9:0"
									},
									"scope": 2251,
									"src": "49157:132:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										901,
										1331
									],
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "49481:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "49507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "49513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2159,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "49491:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$2251_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "grantRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1331,
														"src": "49491:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49491:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "49491:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2170,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "49554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2166,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "49531:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2168,
															"indexExpression": {
																"id": 2167,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "49544:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49531:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1816,
														"src": "49531:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1789_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49531:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "49531:31:0"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "49295:76:0",
										"text": " @dev Overload {grantRole} to track enumerable memberships"
									},
									"functionSelector": "2f2ff15d",
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2157,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2155,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "49450:13:0"
											},
											{
												"id": 2156,
												"name": "IAccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "49465:14:0"
											}
										],
										"src": "49441:39:0"
									},
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "49395:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "49409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49394:31:0"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49481:0:0"
									},
									"scope": 2251,
									"src": "49376:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909,
										1351
									],
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "49763:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "49790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "49796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2185,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "49773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$2251_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1351,
														"src": "49773:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49773:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "49773:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2196,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "49840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2192,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "49814:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2194,
															"indexExpression": {
																"id": 2193,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "49827:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49814:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "49814:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1789_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49814:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "49814:34:0"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "49575:77:0",
										"text": " @dev Overload {revokeRole} to track enumerable memberships"
									},
									"functionSelector": "d547741f",
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2183,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2181,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "49732:13:0"
											},
											{
												"id": 2182,
												"name": "IAccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "49747:14:0"
											}
										],
										"src": "49723:39:0"
									},
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "49677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "49691:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49676:31:0"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49763:0:0"
									},
									"scope": 2251,
									"src": "49657:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										917,
										1374
									],
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "50053:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2214,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "50082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2215,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "50088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2211,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "50063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$2251_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "renounceRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "50063:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50063:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2217,
												"nodeType": "ExpressionStatement",
												"src": "50063:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2222,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "50132:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2218,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "50106:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2220,
															"indexExpression": {
																"id": 2219,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "50119:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50106:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "50106:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1789_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50106:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "50106:34:0"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "49861:79:0",
										"text": " @dev Overload {renounceRole} to track enumerable memberships"
									},
									"functionSelector": "36568abe",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2209,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2207,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1478,
												"src": "50022:13:0"
											},
											{
												"id": 2208,
												"name": "IAccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "50037:14:0"
											}
										],
										"src": "50013:39:0"
									},
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "49967:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "49981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49966:31:0"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50053:0:0"
									},
									"scope": 2251,
									"src": "49945:202:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1388
									],
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "50312:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "50339:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2239,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "50345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2235,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "50322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$2251_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_setupRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1388,
														"src": "50322:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50322:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "50322:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2246,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "50386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2242,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "50363:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1789_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2244,
															"indexExpression": {
																"id": 2243,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "50376:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "50363:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1789_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1816,
														"src": "50363:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1789_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1789_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50363:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "50363:31:0"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "50153:77:0",
										"text": " @dev Overload {_setupRole} to track enumerable memberships"
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "50303:8:0"
									},
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "50255:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "50255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "50269:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50254:31:0"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50312:0:0"
									},
									"scope": 2251,
									"src": "50235:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "47770:2633:0"
						},
						{
							"id": 2252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "50468:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2253,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "50515:7:0"
									},
									"id": 2254,
									"nodeType": "InheritanceSpecifier",
									"src": "50515:7:0"
								},
								{
									"baseName": {
										"id": 2255,
										"name": "AccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2251,
										"src": "50524:23:0"
									},
									"id": 2256,
									"nodeType": "InheritanceSpecifier",
									"src": "50524:23:0"
								},
								{
									"baseName": {
										"id": 2257,
										"name": "ERC20Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "50549:13:0"
									},
									"id": 2258,
									"nodeType": "InheritanceSpecifier",
									"src": "50549:13:0"
								},
								{
									"baseName": {
										"id": 2259,
										"name": "ERC20Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 846,
										"src": "50564:13:0"
									},
									"id": 2260,
									"nodeType": "InheritanceSpecifier",
									"src": "50564:13:0"
								}
							],
							"contractDependencies": [
								77,
								100,
								121,
								663,
								722,
								812,
								846,
								918,
								941,
								1154,
								1176,
								1478,
								2251
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2376,
							"linearizedBaseContracts": [
								2376,
								846,
								812,
								722,
								663,
								100,
								77,
								2251,
								1478,
								1176,
								1154,
								941,
								918,
								121
							],
							"name": "Cenun",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 2265,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 2376,
									"src": "50589:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2261,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "50589:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 2263,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "50637:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 2262,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "50627:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2264,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "50627:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2270,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nodeType": "VariableDeclaration",
									"scope": 2376,
									"src": "50657:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2266,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "50657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2268,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "50705:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2267,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "50695:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "50695:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "50805:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2282,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "50826:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2283,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "50846:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50846:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2281,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2250
														],
														"referencedDeclaration": 2250,
														"src": "50815:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50815:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "50815:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2288,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "50881:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2289,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "50894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50894:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2287,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2250
														],
														"referencedDeclaration": 2250,
														"src": "50870:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50870:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "50870:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2294,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "50928:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2295,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "50941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50941:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2293,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2250
														],
														"referencedDeclaration": 2250,
														"src": "50917:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50917:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2298,
												"nodeType": "ExpressionStatement",
												"src": "50917:37:0"
											}
										]
									},
									"id": 2300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2277,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2272,
													"src": "50791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2278,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2274,
													"src": "50797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2279,
											"modifierName": {
												"id": 2276,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "50785:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50785:19:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "50743:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "50763:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50763:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50742:42:0"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50805:0:0"
									},
									"scope": 2376,
									"src": "50731:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "51027:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2309,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "51053:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2310,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "51066:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51066:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2308,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "51045:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51045:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51081:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc",
																"typeString": "literal_string \"Must have minter role to mint\""
															},
															"value": "Must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc",
																"typeString": "literal_string \"Must have minter role to mint\""
															}
														],
														"id": 2307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51037:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "51037:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "51129:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "51133:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2316,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "51123:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51123:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "51123:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "50984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "50996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50983:28:0"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51027:0:0"
									},
									"scope": 2376,
									"src": "50970:177:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "51189:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2327,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "51215:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2328,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "51228:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51228:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2326,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "51207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51207:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420686176652070617573657220726f6c6520746f207061757365",
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51243:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_675d6be86aea312aa872194d54463171d5d8d72006f0b3de6f269bf84d56396f",
																"typeString": "literal_string \"Must have pauser role to pause\""
															},
															"value": "Must have pauser role to pause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_675d6be86aea312aa872194d54463171d5d8d72006f0b3de6f269bf84d56396f",
																"typeString": "literal_string \"Must have pauser role to pause\""
															}
														],
														"id": 2325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51199:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2333,
												"nodeType": "ExpressionStatement",
												"src": "51199:77:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2334,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "51286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51286:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "51286:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51171:2:0"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51189:0:0"
									},
									"scope": 2376,
									"src": "51157:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2353,
										"nodeType": "Block",
										"src": "51344:116:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2343,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "51370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2344,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "51383:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51383:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2342,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "51362:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51362:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420686176652070617573657220726f6c6520746f20756e7061757365",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51398:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e10e367bc1c2b7ba783509b73c4559904203478c03c627f3695b4a65fc3e108f",
																"typeString": "literal_string \"Must have pauser role to unpause\""
															},
															"value": "Must have pauser role to unpause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e10e367bc1c2b7ba783509b73c4559904203478c03c627f3695b4a65fc3e108f",
																"typeString": "literal_string \"Must have pauser role to unpause\""
															}
														],
														"id": 2341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51354:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "51354:79:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2350,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "51443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51443:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "51443:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51326:2:0"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51344:0:0"
									},
									"scope": 2376,
									"src": "51310:150:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651,
										845
									],
									"body": {
										"id": 2374,
										"nodeType": "Block",
										"src": "51586:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "51623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "51629:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "51633:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2366,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "51596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Cenun_$2376_$",
																"typeString": "type(contract super Cenun)"
															}
														},
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "51596:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51596:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "51596:44:0"
											}
										]
									},
									"id": 2375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2364,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2362,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "51564:5:0"
											},
											{
												"id": 2363,
												"name": "ERC20Pausable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "51571:13:0"
											}
										],
										"src": "51555:30:0"
									},
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "51496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "51510:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "51522:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51495:42:0"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51586:0:0"
									},
									"scope": 2376,
									"src": "51466:181:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2377,
							"src": "50497:1152:0"
						}
					],
					"src": "188:51462:0"
				},
				"id": 0
			}
		}
	}
}