{
	"id": "4c46a27d174fd82a1ab39295cd21e7dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"claimburn.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./StakingContractInterface.sol\"; // Import the staking contract interface\nimport \"./NewTokenInterface.sol\"; // Import the new token interface\n\ncontract BurnClaimContract {\n    StakingContractInterface public stakingContract;\n    NewTokenInterface public newToken;\n\n    uint256 public conversionRate = 1000; // 1000 staked tokens -> 1 new token\n\n    event NewTokenClaimed(address indexed user, uint256 stakedTokens, uint256 newTokenAmount);\n\n    constructor(\n        address _stakingContractAddress,\n        address _newTokenAddress\n    ) {\n        stakingContract = StakingContractInterface(_stakingContractAddress);\n        newToken = NewTokenInterface(_newTokenAddress);\n    }\n\n    function claimNewTokens(uint256 stakedTokens) external {\n        require(stakedTokens > 0, \"Staked tokens must be greater than 0\");\n\n        uint256 newTokenAmount = stakedTokens / conversionRate;\n\n        // Transfer new tokens to the user\n        newToken.transfer(msg.sender, newTokenAmount);\n\n        // Emit an event to log the claimed new tokens\n        emit NewTokenClaimed(msg.sender, stakedTokens, newTokenAmount);\n    }\n}\n"
			},
			"NewTokenInterface.sol": {
				"content": "// NewTokenInterface.sol\n\n// This file defines the interface for interacting with the NewToken contract\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface NewTokenInterface {\n    function transfer(address to, uint256 value) external returns (bool);\n    // Add other ERC-20 functions if required\n    // ...\n}\n"
			},
			"StakingContractInterface.sol": {
				"content": "// StakingContractInterface.sol\n\n// This file defines the interface for interacting with the StakingContract\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface StakingContractInterface {\n    function stakedBalance(address user) external view returns (uint256);\n    function stake(uint256 amount) external;\n    function withdraw(uint256 amount) external;\n     function transfer(address recipient, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewTokenInterface.sol": {
				"NewTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewTokenInterface.sol\":\"NewTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewTokenInterface.sol\":{\"keccak256\":\"0x83151e4a593aa256aeeb4007e75464e10fb689d45e8e4d3c7753063a318bb422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f816d29cd93cce2bde42e2d8409e8bcaa66edfc70c89995a7b813099d0e625\",\"dweb:/ipfs/QmecjkmuVAKMVQ7pSr7Kk3bgAWB24ujTzMtiM3DfKER63N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingContractInterface.sol": {
				"StakingContractInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingContractInterface.sol\":\"StakingContractInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContractInterface.sol\":{\"keccak256\":\"0xf69de83ea3d246fbf778e98dbfbe816e3d74aac2802ea2836a6fa93521cb46b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e853cbd2fac8bded67eeeb6a87291e3f5afe32e4e4e95418c9100a20c9a6e6\",\"dweb:/ipfs/QmY93t1LJegFkTjTyZa15qQsq7fSvvXLHZbsq8jkwHo4SU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"claimburn.sol": {
				"BurnClaimContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedTokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTokenAmount",
									"type": "uint256"
								}
							],
							"name": "NewTokenClaimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakedTokens",
									"type": "uint256"
								}
							],
							"name": "claimNewTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "conversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newToken",
							"outputs": [
								{
									"internalType": "contract NewTokenInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "contract StakingContractInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"claimburn.sol\":208:1180  contract BurnClaimContract {... */\n  mstore(0x40, 0x80)\n    /* \"claimburn.sol\":366:370  1000 */\n  0x03e8\n    /* \"claimburn.sol\":334:370  uint256 public conversionRate = 1000 */\n  0x02\n  sstore\n    /* \"claimburn.sol\":510:743  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"claimburn.sol\":613:628  stakingContract */\n  0x00\n    /* \"claimburn.sol\":613:680  stakingContract = StakingContractInterface(_stakingContractAddress) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"claimburn.sol\":690:736  newToken = NewTokenInterface(_newTokenAddress) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"claimburn.sol\":208:1180  contract BurnClaimContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:193   */\ntag_8:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_10:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_12:\n    /* \"#utility.yul\":387:429   */\n  tag_13\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_8\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_14\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"claimburn.sol\":208:1180  contract BurnClaimContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"claimburn.sol\":208:1180  contract BurnClaimContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fd9eff3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7ffdf53e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc42bd05a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"claimburn.sol\":749:1178  function claimNewTokens(uint256 stakedTokens) external {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"claimburn.sol\":334:370  uint256 public conversionRate = 1000 */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"claimburn.sol\":294:327  NewTokenInterface public newToken */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n        /* \"claimburn.sol\":241:288  StakingContractInterface public stakingContract */\n    tag_6:\n      tag_15\n      tag_20\n      jump\t// in\n        /* \"claimburn.sol\":749:1178  function claimNewTokens(uint256 stakedTokens) external {... */\n    tag_10:\n        /* \"claimburn.sol\":837:838  0 */\n      0x00\n        /* \"claimburn.sol\":822:834  stakedTokens */\n      dup2\n        /* \"claimburn.sol\":822:838  stakedTokens > 0 */\n      gt\n        /* \"claimburn.sol\":814:879  require(stakedTokens > 0, \"Staked tokens must be greater than 0\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"claimburn.sol\":890:912  uint256 newTokenAmount */\n      0x00\n        /* \"claimburn.sol\":930:944  conversionRate */\n      sload(0x02)\n        /* \"claimburn.sol\":915:927  stakedTokens */\n      dup3\n        /* \"claimburn.sol\":915:944  stakedTokens / conversionRate */\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"claimburn.sol\":998:1006  newToken */\n      sload(0x01)\n        /* \"claimburn.sol\":998:1043  newToken.transfer(msg.sender, newTokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"claimburn.sol\":890:944  uint256 newTokenAmount = stakedTokens / conversionRate */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"claimburn.sol\":998:1006  newToken */\n      and\n      swap1\n        /* \"claimburn.sol\":998:1015  newToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"claimburn.sol\":998:1043  newToken.transfer(msg.sender, newTokenAmount) */\n      tag_29\n      swap1\n        /* \"claimburn.sol\":1016:1026  msg.sender */\n      caller\n      swap1\n        /* \"claimburn.sol\":890:944  uint256 newTokenAmount = stakedTokens / conversionRate */\n      dup6\n      swap1\n        /* \"claimburn.sol\":998:1043  newToken.transfer(msg.sender, newTokenAmount) */\n      0x04\n      add\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      pop\n        /* \"claimburn.sol\":1130:1140  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"claimburn.sol\":1114:1171  NewTokenClaimed(msg.sender, stakedTokens, newTokenAmount) */\n      and\n      0x70890550a8a65b47479e09c65e43fe18c6006d0310c5f738894691e3c7400944\n        /* \"claimburn.sol\":1142:1154  stakedTokens */\n      dup4\n        /* \"claimburn.sol\":1156:1170  newTokenAmount */\n      dup4\n        /* \"claimburn.sol\":1114:1171  NewTokenClaimed(msg.sender, stakedTokens, newTokenAmount) */\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"claimburn.sol\":749:1178  function claimNewTokens(uint256 stakedTokens) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"claimburn.sol\":334:370  uint256 public conversionRate = 1000 */\n    tag_12:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"claimburn.sol\":294:327  NewTokenInterface public newToken */\n    tag_16:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"claimburn.sol\":241:288  StakingContractInterface public stakingContract */\n    tag_20:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":14:311   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":134:136   */\n      0x20\n        /* \"#utility.yul\":122:131   */\n      dup3\n        /* \"#utility.yul\":113:120   */\n      dup5\n        /* \"#utility.yul\":109:132   */\n      sub\n        /* \"#utility.yul\":105:137   */\n      slt\n        /* \"#utility.yul\":102:104   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":155:161   */\n      dup1\n        /* \"#utility.yul\":147:153   */\n      dup2\n        /* \"#utility.yul\":140:162   */\n      revert\n        /* \"#utility.yul\":102:104   */\n    tag_40:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":186:202   */\n      mload\n        /* \"#utility.yul\":245:250   */\n      dup1\n        /* \"#utility.yul\":238:251   */\n      iszero\n        /* \"#utility.yul\":231:252   */\n      iszero\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":221:253   */\n      eq\n        /* \"#utility.yul\":211:213   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":272:278   */\n      dup2\n        /* \"#utility.yul\":264:270   */\n      dup3\n        /* \"#utility.yul\":257:279   */\n      revert\n        /* \"#utility.yul\":211:213   */\n    tag_41:\n        /* \"#utility.yul\":300:305   */\n      swap4\n        /* \"#utility.yul\":92:311   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":316:506   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:398   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":449:455   */\n      dup1\n        /* \"#utility.yul\":441:447   */\n      dup2\n        /* \"#utility.yul\":434:456   */\n      revert\n        /* \"#utility.yul\":396:398   */\n    tag_43:\n      pop\n        /* \"#utility.yul\":477:500   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":386:506   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":511:785   */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":703:735   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":685:736   */\n      dup3\n      mstore\n        /* \"#utility.yul\":767:769   */\n      0x20\n        /* \"#utility.yul\":752:770   */\n      dup3\n      add\n        /* \"#utility.yul\":745:779   */\n      mstore\n        /* \"#utility.yul\":673:675   */\n      0x40\n        /* \"#utility.yul\":658:676   */\n      add\n      swap1\n        /* \"#utility.yul\":640:785   */\n      jump\t// out\n        /* \"#utility.yul\":790:1017   */\n    tag_18:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":978:1010   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":960:1011   */\n      dup2\n      mstore\n        /* \"#utility.yul\":948:950   */\n      0x20\n        /* \"#utility.yul\":933:951   */\n      add\n      swap1\n        /* \"#utility.yul\":915:1017   */\n      jump\t// out\n        /* \"#utility.yul\":1261:1661   */\n    tag_26:\n        /* \"#utility.yul\":1463:1465   */\n      0x20\n        /* \"#utility.yul\":1445:1466   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1502:1504   */\n      0x24\n        /* \"#utility.yul\":1482:1500   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1475:1505   */\n      mstore\n        /* \"#utility.yul\":1541:1575   */\n      0x5374616b656420746f6b656e73206d7573742062652067726561746572207468\n        /* \"#utility.yul\":1536:1538   */\n      0x40\n        /* \"#utility.yul\":1521:1539   */\n      dup3\n      add\n        /* \"#utility.yul\":1514:1576   */\n      mstore\n      shl(0xe4, 0x0616e203)\n        /* \"#utility.yul\":1607:1609   */\n      0x60\n        /* \"#utility.yul\":1592:1610   */\n      dup3\n      add\n        /* \"#utility.yul\":1585:1619   */\n      mstore\n        /* \"#utility.yul\":1651:1654   */\n      0x80\n        /* \"#utility.yul\":1636:1655   */\n      add\n      swap1\n        /* \"#utility.yul\":1435:1661   */\n      jump\t// out\n        /* \"#utility.yul\":1666:1843   */\n    tag_14:\n        /* \"#utility.yul\":1812:1837   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1800:1802   */\n      0x20\n        /* \"#utility.yul\":1785:1803   */\n      add\n      swap1\n        /* \"#utility.yul\":1767:1843   */\n      jump\t// out\n        /* \"#utility.yul\":1848:2096   */\n    tag_37:\n        /* \"#utility.yul\":2022:2047   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2078:2080   */\n      0x20\n        /* \"#utility.yul\":2063:2081   */\n      dup3\n      add\n        /* \"#utility.yul\":2056:2090   */\n      mstore\n        /* \"#utility.yul\":2010:2012   */\n      0x40\n        /* \"#utility.yul\":1995:2013   */\n      add\n      swap1\n        /* \"#utility.yul\":1977:2096   */\n      jump\t// out\n        /* \"#utility.yul\":2101:2318   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2167:2168   */\n      dup3\n        /* \"#utility.yul\":2157:2159   */\n      tag_51\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2192:2223   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2246:2250   */\n      0x12\n        /* \"#utility.yul\":2243:2244   */\n      0x04\n        /* \"#utility.yul\":2236:2251   */\n      mstore\n        /* \"#utility.yul\":2274:2278   */\n      0x24\n        /* \"#utility.yul\":2199:2200   */\n      dup2\n        /* \"#utility.yul\":2264:2279   */\n      revert\n        /* \"#utility.yul\":2157:2159   */\n    tag_51:\n      pop\n        /* \"#utility.yul\":2303:2312   */\n      div\n      swap1\n        /* \"#utility.yul\":2147:2318   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066a6e6ae685449dbaa9161770c4572c7d0d1e23ec7e6945317f68bb3489b44f364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:507:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:3"
															},
															"nodeType": "YulIf",
															"src": "117:2:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:3",
														"type": ""
													}
												],
												"src": "14:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:3"
															},
															"nodeType": "YulIf",
															"src": "306:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:3",
														"type": ""
													}
												],
												"src": "198:307:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e860025534801561001657600080fd5b506040516103ab3803806103ab83398101604081905261003591610082565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b4565b80516001600160a01b038116811461007d57600080fd5b919050565b60008060408385031215610094578182fd5b61009d83610066565b91506100ab60208401610066565b90509250929050565b6102e8806100c36000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637fd9eff3146100515780637ffdf53e14610066578063c42bd05a14610084578063ee99205c14610099575b600080fd5b61006461005f3660046101f2565b6100a1565b005b61006e6101a7565b60405161007b919061027b565b60405180910390f35b61008c6101ad565b60405161007b9190610223565b61008c6101bc565b600081116100ca5760405162461bcd60e51b81526004016100c190610237565b60405180910390fd5b6000600254826100da9190610292565b60015460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb9061010d903390859060040161020a565b602060405180830381600087803b15801561012757600080fd5b505af115801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f91906101cb565b50336001600160a01b03167f70890550a8a65b47479e09c65e43fe18c6006d0310c5f738894691e3c7400944838360405161019b929190610284565b60405180910390a25050565b60025481565b6001546001600160a01b031681565b6000546001600160a01b031681565b6000602082840312156101dc578081fd5b815180151581146101eb578182fd5b9392505050565b600060208284031215610203578081fd5b5035919050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b60208082526024908201527f5374616b656420746f6b656e73206d75737420626520677265617465722074686040820152630616e20360e41b606082015260800190565b90815260200190565b918252602082015260400190565b6000826102ad57634e487b7160e01b81526012600452602481fd5b50049056fea264697066735822122066a6e6ae685449dbaa9161770c4572c7d0d1e23ec7e6945317f68bb3489b44f364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3AB CODESIZE SUB DUP1 PUSH2 0x3AB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xB4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x9D DUP4 PUSH2 0x66 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB PUSH1 0x20 DUP5 ADD PUSH2 0x66 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E8 DUP1 PUSH2 0xC3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FD9EFF3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7FFDF53E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH2 0x8C PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x10D SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x20A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x70890550A8A65B47479E09C65E43FE18C6006D0310C5F738894691E3C7400944 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19B SWAP3 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B656420746F6B656E73206D7573742062652067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xA6E6AE685449DB 0xAA SWAP2 PUSH2 0x770C GASLIMIT PUSH19 0xC7D0D1E23EC7E6945317F68BB3489B44F36473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "208:972:2:-:0;;;366:4;334:36;;510:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;613:15;:67;;-1:-1:-1;;;;;613:67:2;;;-1:-1:-1;;;;;;613:67:2;;;;;;;;690:46;;;;;;;;;;;208:972;;14:179:3;95:13;;-1:-1:-1;;;;;137:31:3;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;208:972:2;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2320:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "92:219:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "138:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "155:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "140:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "140:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "140:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "113:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "122:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "109:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "109:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "134:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "105:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "105:32:3"
															},
															"nodeType": "YulIf",
															"src": "102:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "173:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "186:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "186:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "177:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "264:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "272:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "224:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "245:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "238:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "238:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "231:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "231:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "221:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "221:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "214:40:3"
															},
															"nodeType": "YulIf",
															"src": "211:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "300:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "290:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "58:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "69:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "81:6:3",
														"type": ""
													}
												],
												"src": "14:297:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "386:120:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "441:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "449:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:32:3"
															},
															"nodeType": "YulIf",
															"src": "396:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "467:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "490:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "477:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "363:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:3",
														"type": ""
													}
												],
												"src": "316:190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "640:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "650:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "662:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "658:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "650:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "692:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "723:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "728:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "719:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "719:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "732:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "715:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "715:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "685:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "685:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "756:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "767:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "752:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "772:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "601:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "612:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "620:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "631:4:3",
														"type": ""
													}
												],
												"src": "511:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "915:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "925:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "937:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "948:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "933:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "925:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "967:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "998:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1003:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "994:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "994:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1007:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "990:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "990:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "978:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "960:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_NewTokenInterface_$11__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "884:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "895:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "906:4:3",
														"type": ""
													}
												],
												"src": "790:227:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1206:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1237:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1242:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1233:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1233:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1246:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1229:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1229:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1199:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_StakingContractInterface_$40__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1123:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1145:4:3",
														"type": ""
													}
												],
												"src": "1022:234:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1435:226:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1486:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1497:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1475:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1541:34:3",
																		"type": "",
																		"value": "Staked tokens must be greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1514:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1607:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1612:6:3",
																		"type": "",
																		"value": "an 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1585:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1628:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1640:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1636:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1628:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b3c5b89a35af5f81ab097dc7388d36f8e076377af8b66882c0926215979769__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1412:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1426:4:3",
														"type": ""
													}
												],
												"src": "1261:400:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1767:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1777:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1789:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1785:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1777:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1819:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1830:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1812:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1736:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1747:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1758:4:3",
														"type": ""
													}
												],
												"src": "1666:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:119:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1987:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1999:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1995:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1987:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2029:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2022:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2067:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2078:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1949:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1957:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1968:4:3",
														"type": ""
													}
												],
												"src": "1848:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2147:171:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "2199:1:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2206:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2211:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2202:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2202:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2192:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2246:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2236:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2236:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2236:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "2271:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2274:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2264:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2264:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2264:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2167:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:9:3"
															},
															"nodeType": "YulIf",
															"src": "2157:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2307:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2310:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2298:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2132:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2135:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2141:1:3",
														"type": ""
													}
												],
												"src": "2101:217:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_NewTokenInterface_$11__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_StakingContractInterface_$40__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f2b3c5b89a35af5f81ab097dc7388d36f8e076377af8b66882c0926215979769__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Staked tokens must be greater th\")\n        mstore(add(headStart, 96), \"an 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80637fd9eff3146100515780637ffdf53e14610066578063c42bd05a14610084578063ee99205c14610099575b600080fd5b61006461005f3660046101f2565b6100a1565b005b61006e6101a7565b60405161007b919061027b565b60405180910390f35b61008c6101ad565b60405161007b9190610223565b61008c6101bc565b600081116100ca5760405162461bcd60e51b81526004016100c190610237565b60405180910390fd5b6000600254826100da9190610292565b60015460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb9061010d903390859060040161020a565b602060405180830381600087803b15801561012757600080fd5b505af115801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f91906101cb565b50336001600160a01b03167f70890550a8a65b47479e09c65e43fe18c6006d0310c5f738894691e3c7400944838360405161019b929190610284565b60405180910390a25050565b60025481565b6001546001600160a01b031681565b6000546001600160a01b031681565b6000602082840312156101dc578081fd5b815180151581146101eb578182fd5b9392505050565b600060208284031215610203578081fd5b5035919050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b60208082526024908201527f5374616b656420746f6b656e73206d75737420626520677265617465722074686040820152630616e20360e41b606082015260800190565b90815260200190565b918252602082015260400190565b6000826102ad57634e487b7160e01b81526012600452602481fd5b50049056fea264697066735822122066a6e6ae685449dbaa9161770c4572c7d0d1e23ec7e6945317f68bb3489b44f364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FD9EFF3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7FFDF53E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH2 0x8C PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x10D SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x20A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x70890550A8A65B47479E09C65E43FE18C6006D0310C5F738894691E3C7400944 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19B SWAP3 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EB JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B656420746F6B656E73206D7573742062652067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xA6E6AE685449DB 0xAA SWAP2 PUSH2 0x770C GASLIMIT PUSH19 0xC7D0D1E23EC7E6945317F68BB3489B44F36473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "208:972:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:429;;;;;;:::i;:::-;;:::i;:::-;;334:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;294:33;;;:::i;:::-;;;;;;;:::i;241:47::-;;;:::i;749:429::-;837:1;822:12;:16;814:65;;;;-1:-1:-1;;;814:65:2;;;;;;;:::i;:::-;;;;;;;;;890:22;930:14;;915:12;:29;;;;:::i;:::-;998:8;;:45;;-1:-1:-1;;;998:45:2;;890:54;;-1:-1:-1;;;;;;998:8:2;;:17;;:45;;1016:10;;890:54;;998:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1130:10;-1:-1:-1;;;;;1114:57:2;;1142:12;1156:14;1114:57;;;;;;;:::i;:::-;;;;;;;;749:429;;:::o;334:36::-;;;;:::o;294:33::-;;;-1:-1:-1;;;;;294:33:2;;:::o;241:47::-;;;-1:-1:-1;;;;;241:47:2;;:::o;14:297:3:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:3:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:3;;386:120;-1:-1:-1;386:120:3:o;511:274::-;-1:-1:-1;;;;;703:32:3;;;;685:51;;767:2;752:18;;745:34;673:2;658:18;;640:145::o;790:227::-;-1:-1:-1;;;;;978:32:3;;;;960:51;;948:2;933:18;;915:102::o;1261:400::-;1463:2;1445:21;;;1502:2;1482:18;;;1475:30;1541:34;1536:2;1521:18;;1514:62;-1:-1:-1;;;1607:2:3;1592:18;;1585:34;1651:3;1636:19;;1435:226::o;1666:177::-;1812:25;;;1800:2;1785:18;;1767:76::o;1848:248::-;2022:25;;;2078:2;2063:18;;2056:34;2010:2;1995:18;;1977:119::o;2101:217::-;;2167:1;2157:2;;-1:-1:-1;;;2192:31:3;;2246:4;2243:1;2236:15;2274:4;2199:1;2264:15;2157:2;-1:-1:-1;2303:9:3;;2147:171::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "148800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimNewTokens(uint256)": "infinite",
								"conversionRate()": "1028",
								"newToken()": "1092",
								"stakingContract()": "1114"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 366,
									"end": 370,
									"name": "PUSH",
									"source": 2,
									"value": "3E8"
								},
								{
									"begin": 334,
									"end": 370,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 370,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 510,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 510,
									"end": 743,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 613,
									"end": 628,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 680,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 613,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 690,
									"end": 736,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 690,
									"end": 736,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 1180,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066a6e6ae685449dbaa9161770c4572c7d0d1e23ec7e6945317f68bb3489b44f364736f6c63430008000033",
									".code": [
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "7FD9EFF3"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "7FFDF53E"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "C42BD05A"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "EE99205C"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 208,
											"end": 1180,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 822,
											"end": 838,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 814,
											"end": 879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 814,
											"end": 879,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 814,
											"end": 879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 890,
											"end": 912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 944,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 930,
											"end": 944,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 915,
											"end": 927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 915,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 915,
											"end": 944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 915,
											"end": 944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 915,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 915,
											"end": 944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 915,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 944,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 944,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 890,
											"end": 944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1140,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "70890550A8A65B47479E09C65E43FE18C6006D0310C5F738894691E3C7400944"
										},
										{
											"begin": 1142,
											"end": 1154,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1171,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 749,
											"end": 1178,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 370,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 370,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 327,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 294,
											"end": 327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 294,
											"end": 327,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 241,
											"end": 288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 136,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 113,
											"end": 120,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 109,
											"end": 132,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 105,
											"end": 137,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 102,
											"end": 104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 102,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 155,
											"end": 161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 140,
											"end": 162,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 102,
											"end": 104,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 186,
											"end": 202,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 231,
											"end": 252,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 253,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 211,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 257,
											"end": 279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 305,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 92,
											"end": 311,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 92,
											"end": 311,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 316,
											"end": 506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 396,
											"end": 398,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 449,
											"end": 455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 434,
											"end": 456,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 477,
											"end": 500,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 477,
											"end": 500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 386,
											"end": 506,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 785,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 511,
											"end": 785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 703,
											"end": 735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 703,
											"end": 735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 685,
											"end": 736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 685,
											"end": 736,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 745,
											"end": 779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 676,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 658,
											"end": 676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 785,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 790,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 790,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 948,
											"end": 950,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 915,
											"end": 1017,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1661,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1261,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B656420746F6B656E73206D7573742062652067726561746572207468"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1636,
											"end": 1655,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1666,
											"end": 1843,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1666,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1843,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1848,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2047,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2101,
											"end": 2318,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2101,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2318,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimNewTokens(uint256)": "7fd9eff3",
							"conversionRate()": "7ffdf53e",
							"newToken()": "c42bd05a",
							"stakingContract()": "ee99205c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTokenAmount\",\"type\":\"uint256\"}],\"name\":\"NewTokenClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedTokens\",\"type\":\"uint256\"}],\"name\":\"claimNewTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"conversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"contract NewTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract StakingContractInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"claimburn.sol\":\"BurnClaimContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewTokenInterface.sol\":{\"keccak256\":\"0x83151e4a593aa256aeeb4007e75464e10fb689d45e8e4d3c7753063a318bb422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f816d29cd93cce2bde42e2d8409e8bcaa66edfc70c89995a7b813099d0e625\",\"dweb:/ipfs/QmecjkmuVAKMVQ7pSr7Kk3bgAWB24ujTzMtiM3DfKER63N\"]},\"StakingContractInterface.sol\":{\"keccak256\":\"0xf69de83ea3d246fbf778e98dbfbe816e3d74aac2802ea2836a6fa93521cb46b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e853cbd2fac8bded67eeeb6a87291e3f5afe32e4e4e95418c9100a20c9a6e6\",\"dweb:/ipfs/QmY93t1LJegFkTjTyZa15qQsq7fSvvXLHZbsq8jkwHo4SU\"]},\"claimburn.sol\":{\"keccak256\":\"0xa97253e0de9bb8de7d6fbaf27a3074b865fb3c1706f1ec30b3bd88f51242b049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccfb54677c6864ad223288ca677f1213fed88163468ec6a2b4595ff447c88528\",\"dweb:/ipfs/QmdcUtJtm9PPngg6Uu7y8sd2wWjosr4jSPK6Uvq295bmkS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 47,
								"contract": "claimburn.sol:BurnClaimContract",
								"label": "stakingContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(StakingContractInterface)40"
							},
							{
								"astId": 50,
								"contract": "claimburn.sol:BurnClaimContract",
								"label": "newToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(NewTokenInterface)11"
							},
							{
								"astId": 53,
								"contract": "claimburn.sol:BurnClaimContract",
								"label": "conversionRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(NewTokenInterface)11": {
								"encoding": "inplace",
								"label": "contract NewTokenInterface",
								"numberOfBytes": "20"
							},
							"t_contract(StakingContractInterface)40": {
								"encoding": "inplace",
								"label": "contract StakingContractInterface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NewTokenInterface.sol": {
				"ast": {
					"absolutePath": "NewTokenInterface.sol",
					"exportedSymbols": {
						"NewTokenInterface": [
							11
						]
					},
					"id": 12,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "137:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "NewTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:27:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "259:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:6:0"
									},
									"scope": 11,
									"src": "196:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "162:162:0"
						}
					],
					"src": "137:188:0"
				},
				"id": 0
			},
			"StakingContractInterface.sol": {
				"ast": {
					"absolutePath": "StakingContractInterface.sol",
					"exportedSymbols": {
						"StakingContractInterface": [
							40
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "142:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "StakingContractInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "60217267",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "231:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:14:1"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "268:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:9:1"
									},
									"scope": 40,
									"src": "208:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a694fc3a",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "297:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:16:1"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:1"
									},
									"scope": 40,
									"src": "282:40:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "345:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:16:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:1"
									},
									"scope": 40,
									"src": "327:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "394:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "413:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:35:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "447:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:6:1"
									},
									"scope": 40,
									"src": "376:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "167:288:1"
						}
					],
					"src": "142:314:1"
				},
				"id": 1
			},
			"claimburn.sol": {
				"ast": {
					"absolutePath": "claimburn.sol",
					"exportedSymbols": {
						"BurnClaimContract": [
							116
						],
						"NewTokenInterface": [
							11
						],
						"StakingContractInterface": [
							40
						]
					},
					"id": 117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "StakingContractInterface.sol",
							"file": "./StakingContractInterface.sol",
							"id": 43,
							"nodeType": "ImportDirective",
							"scope": 117,
							"sourceUnit": 41,
							"src": "57:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewTokenInterface.sol",
							"file": "./NewTokenInterface.sol",
							"id": 44,
							"nodeType": "ImportDirective",
							"scope": 117,
							"sourceUnit": 12,
							"src": "139:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 116,
							"linearizedBaseContracts": [
								116
							],
							"name": "BurnClaimContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 47,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "241:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_StakingContractInterface_$40",
										"typeString": "contract StakingContractInterface"
									},
									"typeName": {
										"id": 46,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 45,
											"name": "StakingContractInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 40,
											"src": "241:24:2"
										},
										"referencedDeclaration": 40,
										"src": "241:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingContractInterface_$40",
											"typeString": "contract StakingContractInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c42bd05a",
									"id": 50,
									"mutability": "mutable",
									"name": "newToken",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "294:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_NewTokenInterface_$11",
										"typeString": "contract NewTokenInterface"
									},
									"typeName": {
										"id": 49,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 48,
											"name": "NewTokenInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 11,
											"src": "294:17:2"
										},
										"referencedDeclaration": 11,
										"src": "294:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_NewTokenInterface_$11",
											"typeString": "contract NewTokenInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ffdf53e",
									"id": 53,
									"mutability": "mutable",
									"name": "conversionRate",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "334:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "334:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "366:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 61,
									"name": "NewTokenClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "436:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedTokens",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "458:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "480:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:68:2"
									},
									"src": "414:90:2"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "603:140:2",
										"statements": [
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "613:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingContractInterface_$40",
															"typeString": "contract StakingContractInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 70,
																"name": "_stakingContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "656:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 69,
															"name": "StakingContractInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "631:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StakingContractInterface_$40_$",
																"typeString": "type(contract StakingContractInterface)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "631:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingContractInterface_$40",
															"typeString": "contract StakingContractInterface"
														}
													},
													"src": "613:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StakingContractInterface_$40",
														"typeString": "contract StakingContractInterface"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "613:67:2"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 74,
														"name": "newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "690:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NewTokenInterface_$11",
															"typeString": "contract NewTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 76,
																"name": "_newTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "719:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 75,
															"name": "NewTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "701:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_NewTokenInterface_$11_$",
																"typeString": "type(contract NewTokenInterface)"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "701:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NewTokenInterface_$11",
															"typeString": "contract NewTokenInterface"
														}
													},
													"src": "690:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NewTokenInterface_$11",
														"typeString": "contract NewTokenInterface"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "690:46:2"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_stakingContractAddress",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "531:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_newTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "572:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:81:2"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:2"
									},
									"scope": 116,
									"src": "510:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "804:374:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 87,
																"name": "stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "822:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "837:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "822:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b656420746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b3c5b89a35af5f81ab097dc7388d36f8e076377af8b66882c0926215979769",
																"typeString": "literal_string \"Staked tokens must be greater than 0\""
															},
															"value": "Staked tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b3c5b89a35af5f81ab097dc7388d36f8e076377af8b66882c0926215979769",
																"typeString": "literal_string \"Staked tokens must be greater than 0\""
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "814:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "814:65:2"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "newTokenAmount",
														"nodeType": "VariableDeclaration",
														"scope": 114,
														"src": "890:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "890:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "stakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "915:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 96,
														"name": "conversionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "930:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "915:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "890:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1016:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1016:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "newTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1028:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 99,
															"name": "newToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "998:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NewTokenInterface_$11",
																"typeString": "contract NewTokenInterface"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "998:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "998:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1130:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1130:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 110,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1142:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 111,
															"name": "newTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1156:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"name": "NewTokenClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1114:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "EmitStatement",
												"src": "1109:62:2"
											}
										]
									},
									"functionSelector": "7fd9eff3",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNewTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "stakedTokens",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "773:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:22:2"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:2"
									},
									"scope": 116,
									"src": "749:429:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 117,
							"src": "208:972:2"
						}
					],
					"src": "32:1149:2"
				},
				"id": 2
			}
		}
	}
}