{
	"id": "b359e8e90acace649e5998acac364002",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"renegadetest.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./StakingContract.sol\"; // Make sure to provide the correct path to your StakingContract.sol\n\ncontract Burning {\n    address public owner;\n    address public stakingContractAddress;\n    address public newToken;\n    \n    constructor(address _stakingContract, address _newToken) {\n        owner = msg.sender;\n        stakingContractAddress = _stakingContract;\n        newToken = _newToken;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can call this\");\n        _;\n    }\n    \n    function burnStakedTokens(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        StakingContract stakingContract = StakingContract(stakingContractAddress);\n        uint256 stakedBalance = stakingContract.stakedBalance(msg.sender);\n        \n        require(stakedBalance >= amount, \"Insufficient staked balance\");\n        \n        stakingContract.withdraw(amount);\n        \n        // Perform token burning logic here\n        // Transfer new tokens to the user, for example:\n        IERC20Token(newToken).transfer(msg.sender, amount);\n    }\n\n    function depositNewTokens(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        // Transfer new tokens from the contract owner to the Burning contract\n        IERC20Token(newToken).transfer(address(this), amount);\n    }\n}\n\ninterface IERC20Token { // Renamed interface to avoid naming conflict\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n"
			},
			"StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract StakingContract {\n    address public owner;\n    address public token;\n    uint256 public totalStaked;\n    mapping(address => uint256) public stakedBalance;\n\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n\n    constructor(address _token) {\n        owner = msg.sender;\n        token = _token;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can call this\");\n        _;\n    }\n\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(stakedBalance[msg.sender] + amount <= IERC20(token).balanceOf(msg.sender), \"Insufficient balance\");\n\n        stakedBalance[msg.sender] += amount;\n        totalStaked += amount;\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(stakedBalance[msg.sender] >= amount, \"Insufficient staked balance\");\n\n        stakedBalance[msg.sender] -= amount;\n        totalStaked -= amount;\n        IERC20(token).transfer(msg.sender, amount);\n\n        emit Withdrawn(msg.sender, amount);\n    }\n}\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n}\n        "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"StakingContract.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingContract.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContract.sol\":{\"keccak256\":\"0x64181e3418f326fbcb844d7c8c3de1fdf7b5091f3c681272e314d4ce3e0736a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77487eb1fa84d97aa8c1d81d75bd324ce78ad208024974876491ccd29720976f\",\"dweb:/ipfs/QmVXsszZxtjNtgxVvpxpaAN988etsUMYxjvdkMTEmh5Qj3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingContract.sol\":57:1345  contract StakingContract {... */\n  mstore(0x40, 0x80)\n    /* \"StakingContract.sol\":343:430  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"StakingContract.sol\":381:386  owner */\n  0x00\n    /* \"StakingContract.sol\":381:399  owner = msg.sender */\n  dup1\n  sload\n    /* \"StakingContract.sol\":389:399  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"StakingContract.sol\":381:399  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"StakingContract.sol\":409:423  token = _token */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"StakingContract.sol\":57:1345  contract StakingContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:324   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_9:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_10:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"StakingContract.sol\":57:1345  contract StakingContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StakingContract.sol\":57:1345  contract StakingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x60217267\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingContract.sol\":972:1343  function withdraw(uint256 amount) external {... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"StakingContract.sol\":172:220  mapping(address => uint256) public stakedBalance */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingContract.sol\":140:166  uint256 public totalStaked */\n    tag_5:\n      tag_13\n      tag_20\n      jump\t// in\n        /* \"StakingContract.sol\":88:108  address public owner */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n        /* \"StakingContract.sol\":551:966  function stake(uint256 amount) external {... */\n    tag_7:\n      tag_9\n      tag_27\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n        /* \"StakingContract.sol\":114:134  address public token */\n    tag_8:\n      tag_22\n      tag_30\n      jump\t// in\n        /* \"StakingContract.sol\":972:1343  function withdraw(uint256 amount) external {... */\n    tag_12:\n        /* \"StakingContract.sol\":1042:1043  0 */\n      0x00\n        /* \"StakingContract.sol\":1033:1039  amount */\n      dup2\n        /* \"StakingContract.sol\":1033:1043  amount > 0 */\n      gt\n        /* \"StakingContract.sol\":1025:1077  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"StakingContract.sol\":1109:1119  msg.sender */\n      caller\n        /* \"StakingContract.sol\":1095:1120  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":1095:1108  stakedBalance */\n      0x03\n        /* \"StakingContract.sol\":1095:1120  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"StakingContract.sol\":1095:1130  stakedBalance[msg.sender] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"StakingContract.sol\":1087:1162  require(stakedBalance[msg.sender] >= amount, \"Insufficient staked balance\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_38\n      jump\t// in\n    tag_36:\n        /* \"StakingContract.sol\":1187:1197  msg.sender */\n      caller\n        /* \"StakingContract.sol\":1173:1198  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":1173:1186  stakedBalance */\n      0x03\n        /* \"StakingContract.sol\":1173:1198  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":1173:1208  stakedBalance[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"StakingContract.sol\":1202:1208  amount */\n      dup4\n      swap3\n        /* \"StakingContract.sol\":1173:1198  stakedBalance[msg.sender] */\n      swap1\n        /* \"StakingContract.sol\":1173:1208  stakedBalance[msg.sender] -= amount */\n      tag_39\n      swap1\n        /* \"StakingContract.sol\":1202:1208  amount */\n      dup5\n      swap1\n        /* \"StakingContract.sol\":1173:1208  stakedBalance[msg.sender] -= amount */\n      tag_40\n      jump\t// in\n    tag_39:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingContract.sol\":1233:1239  amount */\n      dup1\n        /* \"StakingContract.sol\":1218:1229  totalStaked */\n      0x02\n      0x00\n        /* \"StakingContract.sol\":1218:1239  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_41:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"StakingContract.sol\":1256:1261  token */\n      sload(0x01)\n        /* \"StakingContract.sol\":1249:1291  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":1256:1261  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"StakingContract.sol\":1249:1271  IERC20(token).transfer */\n      0xa9059cbb\n      swap1\n        /* \"StakingContract.sol\":1249:1291  IERC20(token).transfer(msg.sender, amount) */\n      tag_42\n      swap1\n        /* \"StakingContract.sol\":1272:1282  msg.sender */\n      caller\n      swap1\n        /* \"StakingContract.sol\":1284:1290  amount */\n      dup6\n      swap1\n        /* \"StakingContract.sol\":1249:1291  IERC20(token).transfer(msg.sender, amount) */\n      0x04\n      add\n      tag_43\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      pop\n        /* \"StakingContract.sol\":1317:1327  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":1307:1336  Withdrawn(msg.sender, amount) */\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"StakingContract.sol\":1329:1335  amount */\n      dup3\n        /* \"StakingContract.sol\":1307:1336  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StakingContract.sol\":972:1343  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"StakingContract.sol\":172:220  mapping(address => uint256) public stakedBalance */\n    tag_16:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingContract.sol\":140:166  uint256 public totalStaked */\n    tag_20:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"StakingContract.sol\":88:108  address public owner */\n    tag_23:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"StakingContract.sol\":551:966  function stake(uint256 amount) external {... */\n    tag_28:\n        /* \"StakingContract.sol\":618:619  0 */\n      0x00\n        /* \"StakingContract.sol\":609:615  amount */\n      dup2\n        /* \"StakingContract.sol\":609:619  amount > 0 */\n      gt\n        /* \"StakingContract.sol\":601:653  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"StakingContract.sol\":716:721  token */\n      sload(0x01)\n        /* \"StakingContract.sol\":709:744  IERC20(token).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":716:721  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"StakingContract.sol\":709:732  IERC20(token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"StakingContract.sol\":709:744  IERC20(token).balanceOf(msg.sender) */\n      tag_53\n      swap1\n        /* \"StakingContract.sol\":733:743  msg.sender */\n      caller\n      swap1\n        /* \"StakingContract.sol\":709:744  IERC20(token).balanceOf(msg.sender) */\n      0x04\n      add\n      tag_25\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"StakingContract.sol\":685:695  msg.sender */\n      caller\n        /* \"StakingContract.sol\":671:696  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":671:684  stakedBalance */\n      0x03\n        /* \"StakingContract.sol\":671:696  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"StakingContract.sol\":671:705  stakedBalance[msg.sender] + amount */\n      tag_59\n      swap1\n        /* \"StakingContract.sol\":699:705  amount */\n      dup4\n      swap1\n        /* \"StakingContract.sol\":671:705  stakedBalance[msg.sender] + amount */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"StakingContract.sol\":671:744  stakedBalance[msg.sender] + amount <= IERC20(token).balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"StakingContract.sol\":663:769  require(stakedBalance[msg.sender] + amount <= IERC20(token).balanceOf(msg.sender), \"Insufficient balance\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_63\n      jump\t// in\n    tag_61:\n        /* \"StakingContract.sol\":794:804  msg.sender */\n      caller\n        /* \"StakingContract.sol\":780:805  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":780:793  stakedBalance */\n      0x03\n        /* \"StakingContract.sol\":780:805  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":780:815  stakedBalance[msg.sender] += amount */\n      dup1\n      sload\n        /* \"StakingContract.sol\":809:815  amount */\n      dup4\n      swap3\n        /* \"StakingContract.sol\":780:805  stakedBalance[msg.sender] */\n      swap1\n        /* \"StakingContract.sol\":780:815  stakedBalance[msg.sender] += amount */\n      tag_64\n      swap1\n        /* \"StakingContract.sol\":809:815  amount */\n      dup5\n      swap1\n        /* \"StakingContract.sol\":780:815  stakedBalance[msg.sender] += amount */\n      tag_60\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingContract.sol\":840:846  amount */\n      dup1\n        /* \"StakingContract.sol\":825:836  totalStaked */\n      0x02\n      0x00\n        /* \"StakingContract.sol\":825:846  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_65\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_65:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"StakingContract.sol\":863:868  token */\n      sload(0x01)\n        /* \"StakingContract.sol\":856:917  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":863:868  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"StakingContract.sol\":856:882  IERC20(token).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"StakingContract.sol\":856:917  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      tag_66\n      swap1\n        /* \"StakingContract.sol\":883:893  msg.sender */\n      caller\n      swap1\n        /* \"StakingContract.sol\":903:907  this */\n      address\n      swap1\n        /* \"StakingContract.sol\":910:916  amount */\n      dup7\n      swap1\n        /* \"StakingContract.sol\":856:917  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      0x04\n      add\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_71:\n      pop\n        /* \"StakingContract.sol\":940:950  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":933:959  Staked(msg.sender, amount) */\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"StakingContract.sol\":952:958  amount */\n      dup3\n        /* \"StakingContract.sol\":933:959  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n        /* \"StakingContract.sol\":114:134  address public token */\n    tag_30:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":14:320   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_75:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_76:\n        /* \"#utility.yul\":309:314   */\n      swap4\n        /* \"#utility.yul\":84:320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":325:622   */\n    tag_48:\n      0x00\n        /* \"#utility.yul\":445:447   */\n      0x20\n        /* \"#utility.yul\":433:442   */\n      dup3\n        /* \"#utility.yul\":424:431   */\n      dup5\n        /* \"#utility.yul\":420:443   */\n      sub\n        /* \"#utility.yul\":416:448   */\n      slt\n        /* \"#utility.yul\":413:415   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":466:472   */\n      dup1\n        /* \"#utility.yul\":458:464   */\n      dup2\n        /* \"#utility.yul\":451:473   */\n      revert\n        /* \"#utility.yul\":413:415   */\n    tag_78:\n        /* \"#utility.yul\":503:512   */\n      dup2\n        /* \"#utility.yul\":497:513   */\n      mload\n        /* \"#utility.yul\":556:561   */\n      dup1\n        /* \"#utility.yul\":549:562   */\n      iszero\n        /* \"#utility.yul\":542:563   */\n      iszero\n        /* \"#utility.yul\":535:540   */\n      dup2\n        /* \"#utility.yul\":532:564   */\n      eq\n        /* \"#utility.yul\":522:524   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":583:589   */\n      dup2\n        /* \"#utility.yul\":575:581   */\n      dup3\n        /* \"#utility.yul\":568:590   */\n      revert\n        /* \"#utility.yul\":627:817   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":739:741   */\n      0x20\n        /* \"#utility.yul\":727:736   */\n      dup3\n        /* \"#utility.yul\":718:725   */\n      dup5\n        /* \"#utility.yul\":714:737   */\n      sub\n        /* \"#utility.yul\":710:742   */\n      slt\n        /* \"#utility.yul\":707:709   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":760:766   */\n      dup1\n        /* \"#utility.yul\":752:758   */\n      dup2\n        /* \"#utility.yul\":745:767   */\n      revert\n        /* \"#utility.yul\":707:709   */\n    tag_81:\n      pop\n        /* \"#utility.yul\":788:811   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":697:817   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:1016   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":933:942   */\n      dup3\n        /* \"#utility.yul\":924:931   */\n      dup5\n        /* \"#utility.yul\":920:943   */\n      sub\n        /* \"#utility.yul\":916:948   */\n      slt\n        /* \"#utility.yul\":913:915   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":966:972   */\n      dup1\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":951:973   */\n      revert\n        /* \"#utility.yul\":913:915   */\n    tag_83:\n      pop\n        /* \"#utility.yul\":994:1010   */\n      mload\n      swap2\n        /* \"#utility.yul\":903:1016   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1021:1224   */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1185:1217   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1167:1218   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1155:1157   */\n      0x20\n        /* \"#utility.yul\":1140:1158   */\n      add\n      swap1\n        /* \"#utility.yul\":1122:1224   */\n      jump\t// out\n        /* \"#utility.yul\":1229:1604   */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1487:1502   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1469:1503   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1539:1554   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1534:1536   */\n      0x20\n        /* \"#utility.yul\":1519:1537   */\n      dup3\n      add\n        /* \"#utility.yul\":1512:1555   */\n      mstore\n        /* \"#utility.yul\":1586:1588   */\n      0x40\n        /* \"#utility.yul\":1571:1589   */\n      dup2\n      add\n        /* \"#utility.yul\":1564:1598   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1419:1421   */\n      0x60\n        /* \"#utility.yul\":1404:1422   */\n      add\n      swap1\n        /* \"#utility.yul\":1386:1604   */\n      jump\t// out\n        /* \"#utility.yul\":1609:1883   */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1801:1833   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1783:1834   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1865:1867   */\n      0x20\n        /* \"#utility.yul\":1850:1868   */\n      dup3\n      add\n        /* \"#utility.yul\":1843:1877   */\n      mstore\n        /* \"#utility.yul\":1771:1773   */\n      0x40\n        /* \"#utility.yul\":1756:1774   */\n      add\n      swap1\n        /* \"#utility.yul\":1738:1883   */\n      jump\t// out\n        /* \"#utility.yul\":1888:2241   */\n    tag_35:\n        /* \"#utility.yul\":2090:2092   */\n      0x20\n        /* \"#utility.yul\":2072:2093   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2129:2131   */\n      0x1d\n        /* \"#utility.yul\":2109:2127   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2102:2132   */\n      mstore\n        /* \"#utility.yul\":2168:2199   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":2163:2165   */\n      0x40\n        /* \"#utility.yul\":2148:2166   */\n      dup3\n      add\n        /* \"#utility.yul\":2141:2200   */\n      mstore\n        /* \"#utility.yul\":2232:2234   */\n      0x60\n        /* \"#utility.yul\":2217:2235   */\n      add\n      swap1\n        /* \"#utility.yul\":2062:2241   */\n      jump\t// out\n        /* \"#utility.yul\":2246:2590   */\n    tag_63:\n        /* \"#utility.yul\":2448:2450   */\n      0x20\n        /* \"#utility.yul\":2430:2451   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2487:2489   */\n      0x14\n        /* \"#utility.yul\":2467:2485   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2460:2490   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":2521:2523   */\n      0x40\n        /* \"#utility.yul\":2506:2524   */\n      dup3\n      add\n        /* \"#utility.yul\":2499:2549   */\n      mstore\n        /* \"#utility.yul\":2581:2583   */\n      0x60\n        /* \"#utility.yul\":2566:2584   */\n      add\n      swap1\n        /* \"#utility.yul\":2420:2590   */\n      jump\t// out\n        /* \"#utility.yul\":2595:2946   */\n    tag_38:\n        /* \"#utility.yul\":2797:2799   */\n      0x20\n        /* \"#utility.yul\":2779:2800   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x1b\n        /* \"#utility.yul\":2816:2834   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2809:2839   */\n      mstore\n        /* \"#utility.yul\":2875:2904   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":2870:2872   */\n      0x40\n        /* \"#utility.yul\":2855:2873   */\n      dup3\n      add\n        /* \"#utility.yul\":2848:2905   */\n      mstore\n        /* \"#utility.yul\":2937:2939   */\n      0x60\n        /* \"#utility.yul\":2922:2940   */\n      add\n      swap1\n        /* \"#utility.yul\":2769:2946   */\n      jump\t// out\n        /* \"#utility.yul\":2951:3128   */\n    tag_18:\n        /* \"#utility.yul\":3097:3122   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3085:3087   */\n      0x20\n        /* \"#utility.yul\":3070:3088   */\n      add\n      swap1\n        /* \"#utility.yul\":3052:3128   */\n      jump\t// out\n        /* \"#utility.yul\":3133:3261   */\n    tag_60:\n      0x00\n        /* \"#utility.yul\":3204:3205   */\n      dup3\n        /* \"#utility.yul\":3200:3206   */\n      not\n        /* \"#utility.yul\":3197:3198   */\n      dup3\n        /* \"#utility.yul\":3194:3207   */\n      gt\n        /* \"#utility.yul\":3191:3193   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3210:3228   */\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      pop\n        /* \"#utility.yul\":3246:3255   */\n      add\n      swap1\n        /* \"#utility.yul\":3181:3261   */\n      jump\t// out\n        /* \"#utility.yul\":3266:3391   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":3334:3335   */\n      dup3\n        /* \"#utility.yul\":3331:3332   */\n      dup3\n        /* \"#utility.yul\":3328:3336   */\n      lt\n        /* \"#utility.yul\":3325:3327   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3339:3357   */\n      tag_97\n      tag_94\n      jump\t// in\n    tag_97:\n      pop\n        /* \"#utility.yul\":3376:3385   */\n      sub\n      swap1\n        /* \"#utility.yul\":3315:3391   */\n      jump\t// out\n        /* \"#utility.yul\":3396:3523   */\n    tag_94:\n        /* \"#utility.yul\":3457:3467   */\n      0x4e487b71\n        /* \"#utility.yul\":3452:3455   */\n      0xe0\n        /* \"#utility.yul\":3448:3468   */\n      shl\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3438:3469   */\n      mstore\n        /* \"#utility.yul\":3488:3492   */\n      0x11\n        /* \"#utility.yul\":3485:3486   */\n      0x04\n        /* \"#utility.yul\":3478:3493   */\n      mstore\n        /* \"#utility.yul\":3512:3516   */\n      0x24\n        /* \"#utility.yul\":3509:3510   */\n      0x00\n        /* \"#utility.yul\":3502:3517   */\n      revert\n\n    auxdata: 0xa2646970667358221220dac3a81914f2a97e5c2c118e0646299ac1edc93d880a7859b338b097f39ad17964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:326:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:2"
															},
															"nodeType": "YulIf",
															"src": "105:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:2"
															},
															"nodeType": "YulIf",
															"src": "214:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:2",
														"type": ""
													}
												],
												"src": "14:310:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106d53803806106d583398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610090565b600060208284031215610073578081fd5b81516001600160a01b0381168114610089578182fd5b9392505050565b6106368061009f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e1a7d4d14610067578063602172671461007c578063817b1cd2146100a55780638da5cb5b146100ad578063a694fc3a146100c2578063fc0c546a146100d5575b600080fd5b61007a610075366004610495565b6100dd565b005b61008f61008a366004610447565b61023b565b60405161009c91906105b2565b60405180910390f35b61008f61024d565b6100b5610253565b60405161009c91906104c5565b61007a6100d0366004610495565b610262565b6100b5610438565b600081116101065760405162461bcd60e51b81526004016100fd90610516565b60405180910390fd5b336000908152600360205260409020548111156101355760405162461bcd60e51b81526004016100fd9061057b565b33600090815260036020526040812080548392906101549084906105d3565b92505081905550806002600082825461016d91906105d3565b909155505060015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906101a490339085906004016104fd565b602060405180830381600087803b1580156101be57600080fd5b505af11580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610475565b50336001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161023091906105b2565b60405180910390a250565b60036020526000908152604090205481565b60025481565b6000546001600160a01b031681565b600081116102825760405162461bcd60e51b81526004016100fd90610516565b6001546040516370a0823160e01b81526001600160a01b03909116906370a08231906102b29033906004016104c5565b60206040518083038186803b1580156102ca57600080fd5b505afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030291906104ad565b3360009081526003602052604090205461031d9083906105bb565b111561033b5760405162461bcd60e51b81526004016100fd9061054d565b336000908152600360205260408120805483929061035a9084906105bb565b92505081905550806002600082825461037391906105bb565b90915550506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906103ac903390309086906004016104d9565b602060405180830381600087803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190610475565b50336001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161023091906105b2565b6001546001600160a01b031681565b600060208284031215610458578081fd5b81356001600160a01b038116811461046e578182fd5b9392505050565b600060208284031215610486578081fd5b8151801515811461046e578182fd5b6000602082840312156104a6578081fd5b5035919050565b6000602082840312156104be578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b90815260200190565b600082198211156105ce576105ce6105ea565b500190565b6000828210156105e5576105e56105ea565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220dac3a81914f2a97e5c2c118e0646299ac1edc93d880a7859b338b097f39ad17964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6D5 CODESIZE SUB DUP1 PUSH2 0x6D5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x62 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x89 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x636 DUP1 PUSH2 0x9F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH2 0x24D JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x57B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x154 SWAP1 DUP5 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1A4 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B2 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x31D SWAP1 DUP4 SWAP1 PUSH2 0x5BB JUMP JUMPDEST GT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x54D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x35A SWAP1 DUP5 SWAP1 PUSH2 0x5BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x3AC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x458 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x486 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x5EA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x5EA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xC3 0xA8 NOT EQ CALLCODE 0xA9 PUSH31 0x5C2C118E0646299AC1EDC93D880A7859B338B097F39AD17964736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "57:1288:0:-:0;;;343:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:5;:18;;389:10;-1:-1:-1;;;;;;381:18:0;;;;;;;-1:-1:-1;409:14:0;;;;;-1:-1:-1;;;;;409:14:0;;;;;;;;;;57:1288;;14:310:2;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:2;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:2:o;:::-;57:1288:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3525:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:2"
															},
															"nodeType": "YulIf",
															"src": "210:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:306:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:219:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "449:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "458:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "466:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "451:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "451:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "451:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "424:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "433:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "420:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "420:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "445:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "416:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "416:32:2"
															},
															"nodeType": "YulIf",
															"src": "413:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "484:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "503:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "497:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "488:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "566:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "575:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "568:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "568:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "535:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "556:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "549:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "549:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "542:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "542:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "532:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "532:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:40:2"
															},
															"nodeType": "YulIf",
															"src": "522:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "611:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "380:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "392:6:2",
														"type": ""
													}
												],
												"src": "325:297:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "697:120:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "743:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "752:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "760:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "745:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "745:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "718:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:32:2"
															},
															"nodeType": "YulIf",
															"src": "707:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "778:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "788:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "674:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "686:6:2",
														"type": ""
													}
												],
												"src": "627:190:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "903:113:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "949:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "958:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "966:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "951:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "951:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "924:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "933:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:32:2"
															},
															"nodeType": "YulIf",
															"src": "913:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "984:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1000:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "994:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "869:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "880:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "892:6:2",
														"type": ""
													}
												],
												"src": "822:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1122:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1132:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1144:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1132:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1174:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1205:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1210:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1201:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1201:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1214:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1091:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1102:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1113:4:2",
														"type": ""
													}
												],
												"src": "1021:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1386:218:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1396:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1404:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1396:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1431:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1445:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1445:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1441:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1435:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1476:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1491:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1499:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1469:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1534:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1543:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1551:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1575:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1586:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1564:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1339:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1350:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1358:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1377:4:2",
														"type": ""
													}
												],
												"src": "1229:375:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1738:145:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1748:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1760:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1748:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1805:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1821:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1826:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1817:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1817:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1830:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1813:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1813:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1801:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1783:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1865:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1699:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1710:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1718:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1729:4:2",
														"type": ""
													}
												],
												"src": "1609:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2062:179:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2079:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2072:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2113:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2124:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2109:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2102:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2168:31:2",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2141:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2141:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2209:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2221:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2232:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2209:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2039:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2053:4:2",
														"type": ""
													}
												],
												"src": "1888:353:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2420:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2448:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2471:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2482:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2467:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2467:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2460:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2510:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2521:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2526:22:2",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2499:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2558:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2397:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2411:4:2",
														"type": ""
													}
												],
												"src": "2246:344:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2769:177:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2786:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2779:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2779:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2779:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2820:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2831:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2809:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2875:29:2",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:57:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2914:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2746:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2760:4:2",
														"type": ""
													}
												],
												"src": "2595:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3052:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3062:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3074:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3070:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3062:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3104:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3097:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3097:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3021:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3032:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3043:4:2",
														"type": ""
													}
												],
												"src": "2951:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3208:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3210:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3210:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3210:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3197:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3204:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3200:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3194:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:13:2"
															},
															"nodeType": "YulIf",
															"src": "3191:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3239:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3250:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3253:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3246:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3239:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3164:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3167:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3173:3:2",
														"type": ""
													}
												],
												"src": "3133:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3315:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3337:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3339:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3339:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3339:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3331:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3334:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3328:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:8:2"
															},
															"nodeType": "YulIf",
															"src": "3325:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3368:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3380:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3383:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3368:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3297:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3300:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3306:4:2",
														"type": ""
													}
												],
												"src": "3266:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3428:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3452:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3457:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3448:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3438:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3485:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3488:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3478:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3478:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3478:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3509:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3502:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3396:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80632e1a7d4d14610067578063602172671461007c578063817b1cd2146100a55780638da5cb5b146100ad578063a694fc3a146100c2578063fc0c546a146100d5575b600080fd5b61007a610075366004610495565b6100dd565b005b61008f61008a366004610447565b61023b565b60405161009c91906105b2565b60405180910390f35b61008f61024d565b6100b5610253565b60405161009c91906104c5565b61007a6100d0366004610495565b610262565b6100b5610438565b600081116101065760405162461bcd60e51b81526004016100fd90610516565b60405180910390fd5b336000908152600360205260409020548111156101355760405162461bcd60e51b81526004016100fd9061057b565b33600090815260036020526040812080548392906101549084906105d3565b92505081905550806002600082825461016d91906105d3565b909155505060015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906101a490339085906004016104fd565b602060405180830381600087803b1580156101be57600080fd5b505af11580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610475565b50336001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161023091906105b2565b60405180910390a250565b60036020526000908152604090205481565b60025481565b6000546001600160a01b031681565b600081116102825760405162461bcd60e51b81526004016100fd90610516565b6001546040516370a0823160e01b81526001600160a01b03909116906370a08231906102b29033906004016104c5565b60206040518083038186803b1580156102ca57600080fd5b505afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030291906104ad565b3360009081526003602052604090205461031d9083906105bb565b111561033b5760405162461bcd60e51b81526004016100fd9061054d565b336000908152600360205260408120805483929061035a9084906105bb565b92505081905550806002600082825461037391906105bb565b90915550506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906103ac903390309086906004016104d9565b602060405180830381600087803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190610475565b50336001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161023091906105b2565b6001546001600160a01b031681565b600060208284031215610458578081fd5b81356001600160a01b038116811461046e578182fd5b9392505050565b600060208284031215610486578081fd5b8151801515811461046e578182fd5b6000602082840312156104a6578081fd5b5035919050565b6000602082840312156104be578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b90815260200190565b600082198211156105ce576105ce6105ea565b500190565b6000828210156105e5576105e56105ea565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220dac3a81914f2a97e5c2c118e0646299ac1edc93d880a7859b338b097f39ad17964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH2 0x24D JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x57B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x154 SWAP1 DUP5 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1A4 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B2 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x31D SWAP1 DUP4 SWAP1 PUSH2 0x5BB JUMP JUMPDEST GT ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x54D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x35A SWAP1 DUP5 SWAP1 PUSH2 0x5BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x3AC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x475 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x458 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x486 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x5EA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x5EA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xC3 0xA8 NOT EQ CALLCODE 0xA9 PUSH31 0x5C2C118E0646299AC1EDC93D880A7859B338B097F39AD17964736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "57:1288:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:371;;;;;;:::i;:::-;;:::i;:::-;;172:48;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:26;;;:::i;88:20::-;;;:::i;:::-;;;;;;;:::i;551:415::-;;;;;;:::i;:::-;;:::i;114:20::-;;;:::i;972:371::-;1042:1;1033:6;:10;1025:52;;;;-1:-1:-1;;;1025:52:0;;;;;;;:::i;:::-;;;;;;;;;1109:10;1095:25;;;;:13;:25;;;;;;:35;-1:-1:-1;1095:35:0;1087:75;;;;-1:-1:-1;;;1087:75:0;;;;;;;:::i;:::-;1187:10;1173:25;;;;:13;:25;;;;;:35;;1202:6;;1173:25;:35;;1202:6;;1173:35;:::i;:::-;;;;;;;;1233:6;1218:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;1256:5:0;;1249:42;;-1:-1:-1;;;1249:42:0;;-1:-1:-1;;;;;1256:5:0;;;;1249:22;;:42;;1272:10;;1284:6;;1249:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1317:10;-1:-1:-1;;;;;1307:29:0;;1329:6;1307:29;;;;;;:::i;:::-;;;;;;;;972:371;:::o;172:48::-;;;;;;;;;;;;;:::o;140:26::-;;;;:::o;88:20::-;;;-1:-1:-1;;;;;88:20:0;;:::o;551:415::-;618:1;609:6;:10;601:52;;;;-1:-1:-1;;;601:52:0;;;;;;;:::i;:::-;716:5;;709:35;;-1:-1:-1;;;709:35:0;;-1:-1:-1;;;;;716:5:0;;;;709:23;;:35;;733:10;;709:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;685:10;671:25;;;;:13;:25;;;;;;:34;;699:6;;671:34;:::i;:::-;:73;;663:106;;;;-1:-1:-1;;;663:106:0;;;;;;;:::i;:::-;794:10;780:25;;;;:13;:25;;;;;:35;;809:6;;780:25;:35;;809:6;;780:35;:::i;:::-;;;;;;;;840:6;825:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;863:5:0;;856:61;;-1:-1:-1;;;856:61:0;;-1:-1:-1;;;;;863:5:0;;;;856:26;;:61;;883:10;;903:4;;910:6;;856:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;940:10;-1:-1:-1;;;;;933:26:0;;952:6;933:26;;;;;;:::i;114:20::-;;;-1:-1:-1;;;;;114:20:0;;:::o;14:306:2:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:2;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:2:o;325:297::-;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:2;;697:120;-1:-1:-1;697:120:2:o;822:194::-;;945:2;933:9;924:7;920:23;916:32;913:2;;;966:6;958;951:22;913:2;-1:-1:-1;994:16:2;;903:113;-1:-1:-1;903:113:2:o;1021:203::-;-1:-1:-1;;;;;1185:32:2;;;;1167:51;;1155:2;1140:18;;1122:102::o;1229:375::-;-1:-1:-1;;;;;1487:15:2;;;1469:34;;1539:15;;;;1534:2;1519:18;;1512:43;1586:2;1571:18;;1564:34;;;;1419:2;1404:18;;1386:218::o;1609:274::-;-1:-1:-1;;;;;1801:32:2;;;;1783:51;;1865:2;1850:18;;1843:34;1771:2;1756:18;;1738:145::o;1888:353::-;2090:2;2072:21;;;2129:2;2109:18;;;2102:30;2168:31;2163:2;2148:18;;2141:59;2232:2;2217:18;;2062:179::o;2246:344::-;2448:2;2430:21;;;2487:2;2467:18;;;2460:30;-1:-1:-1;;;2521:2:2;2506:18;;2499:50;2581:2;2566:18;;2420:170::o;2595:351::-;2797:2;2779:21;;;2836:2;2816:18;;;2809:30;2875:29;2870:2;2855:18;;2848:57;2937:2;2922:18;;2769:177::o;2951:::-;3097:25;;;3085:2;3070:18;;3052:76::o;3133:128::-;;3204:1;3200:6;3197:1;3194:13;3191:2;;;3210:18;;:::i;:::-;-1:-1:-1;3246:9:2;;3181:80::o;3266:125::-;;3334:1;3331;3328:8;3325:2;;;3339:18;;:::i;:::-;-1:-1:-1;3376:9:2;;3315:76::o;3396:127::-;3457:10;3452:3;3448:20;3445:1;3438:31;3488:4;3485:1;3478:15;3512:4;3509:1;3502:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "318000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "1114",
								"stake(uint256)": "infinite",
								"stakedBalance(address)": "1217",
								"token()": "1158",
								"totalStaked()": "1050",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 343,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 343,
									"end": 430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 381,
									"end": 386,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 389,
									"end": 399,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 381,
									"end": 399,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 381,
									"end": 399,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 409,
									"end": 423,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14,
									"end": 324,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1345,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dac3a81914f2a97e5c2c118e0646299ac1edc93d880a7859b338b097f39ad17964736f6c63430008000033",
									".code": [
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "60217267"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "817B1CD2"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 140,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1043,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1119,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1095,
											"end": 1130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1087,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1239,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1249,
											"end": 1271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1327,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1336,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 172,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 88,
											"end": 108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 551,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 601,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 601,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 709,
											"end": 732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 743,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 733,
											"end": 743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 709,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 671,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 671,
											"end": 696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 671,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 671,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 699,
											"end": 705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 671,
											"end": 705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 671,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 671,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 744,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 671,
											"end": 744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 663,
											"end": 769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 663,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 780,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 780,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 840,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 836,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 825,
											"end": 836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 846,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 863,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 863,
											"end": 868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 863,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 863,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 856,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 883,
											"end": 893,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 883,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 907,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 903,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 910,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 856,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 933,
											"end": 959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 114,
											"end": 134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 114,
											"end": 134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 114,
											"end": 134,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 309,
											"end": 314,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 84,
											"end": 320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 622,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 325,
											"end": 622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 424,
											"end": 431,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 413,
											"end": 415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 413,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 413,
											"end": 415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 413,
											"end": 415,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 413,
											"end": 415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 497,
											"end": 513,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 549,
											"end": 562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 542,
											"end": 563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 535,
											"end": 540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 532,
											"end": 564,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 575,
											"end": 581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 568,
											"end": 590,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 627,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 627,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 718,
											"end": 725,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 714,
											"end": 737,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 710,
											"end": 742,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 707,
											"end": 709,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 745,
											"end": 767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 707,
											"end": 709,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 788,
											"end": 811,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 697,
											"end": 817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 1016,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 822,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 822,
											"end": 1016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 924,
											"end": 931,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 920,
											"end": 943,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 916,
											"end": 948,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 913,
											"end": 915,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 913,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 913,
											"end": 915,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 913,
											"end": 915,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 913,
											"end": 915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1016,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1021,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1021,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1217,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1224,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1229,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1229,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1487,
											"end": 1502,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1502,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1555,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1604,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1609,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1609,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1883,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1888,
											"end": 2241,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1888,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "PUSH",
											"source": 2,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2241,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2246,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2951,
											"end": 3128,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2951,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3128,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3261,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3133,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3266,
											"end": 3391,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3336,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3396,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3396,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3452,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3448,
											"end": 3468,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3485,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3517,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingContract.sol\":\"StakingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContract.sol\":{\"keccak256\":\"0x64181e3418f326fbcb844d7c8c3de1fdf7b5091f3c681272e314d4ce3e0736a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77487eb1fa84d97aa8c1d81d75bd324ce78ad208024974876491ccd29720976f\",\"dweb:/ipfs/QmVXsszZxtjNtgxVvpxpaAN988etsUMYxjvdkMTEmh5Qj3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "StakingContract.sol:StakingContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "StakingContract.sol:StakingContract",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "StakingContract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "StakingContract.sol:StakingContract",
								"label": "stakedBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"renegadetest.sol": {
				"Burning": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnStakedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositNewTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"renegadetest.sol\":159:1454  contract Burning {... */\n  mstore(0x40, 0x80)\n    /* \"renegadetest.sol\":285:458  constructor(address _stakingContract, address _newToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"renegadetest.sol\":352:357  owner */\n  0x00\n    /* \"renegadetest.sol\":352:370  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"renegadetest.sol\":360:370  msg.sender */\n  caller\n    /* \"renegadetest.sol\":352:370  owner = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"renegadetest.sol\":380:421  stakingContractAddress = _stakingContract */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  swap1\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"renegadetest.sol\":431:439  newToken */\n  0x02\n    /* \"renegadetest.sol\":431:451  newToken = _newToken */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"renegadetest.sol\":159:1454  contract Burning {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:193   */\ntag_8:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_10:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_12:\n    /* \"#utility.yul\":387:429   */\n  tag_13\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_8\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_14\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"renegadetest.sol\":159:1454  contract Burning {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"renegadetest.sol\":159:1454  contract Burning {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1afa3942\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3535f48b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x88bc519c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc42bd05a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"renegadetest.sol\":1179:1452  function depositNewTokens(uint256 amount) external onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"renegadetest.sol\":208:245  address public stakingContractAddress */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"renegadetest.sol\":583:1173  function burnStakedTokens(uint256 amount) external {... */\n    tag_5:\n      tag_8\n      tag_17\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n        /* \"renegadetest.sol\":182:202  address public owner */\n    tag_6:\n      tag_12\n      tag_20\n      jump\t// in\n        /* \"renegadetest.sol\":251:274  address public newToken */\n    tag_7:\n      tag_12\n      tag_23\n      jump\t// in\n        /* \"renegadetest.sol\":1179:1452  function depositNewTokens(uint256 amount) external onlyOwner {... */\n    tag_11:\n        /* \"renegadetest.sol\":517:522  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"renegadetest.sol\":503:513  msg.sender */\n      caller\n        /* \"renegadetest.sol\":503:522  msg.sender == owner */\n      eq\n        /* \"renegadetest.sol\":495:555  require(msg.sender == owner, \"Only the owner can call this\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"renegadetest.sol\":1267:1268  0 */\n      0x00\n        /* \"renegadetest.sol\":1258:1264  amount */\n      dup2\n        /* \"renegadetest.sol\":1258:1268  amount > 0 */\n      gt\n        /* \"renegadetest.sol\":1250:1302  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_32\n      jump\t// in\n    tag_30:\n        /* \"renegadetest.sol\":1404:1412  newToken */\n      sload(0x02)\n        /* \"renegadetest.sol\":1392:1445  IERC20Token(newToken).transfer(address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"renegadetest.sol\":1404:1412  newToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"renegadetest.sol\":1392:1422  IERC20Token(newToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"renegadetest.sol\":1392:1445  IERC20Token(newToken).transfer(address(this), amount) */\n      tag_33\n      swap1\n        /* \"renegadetest.sol\":1431:1435  this */\n      address\n      swap1\n        /* \"renegadetest.sol\":1438:1444  amount */\n      dup6\n      swap1\n        /* \"renegadetest.sol\":1392:1445  IERC20Token(newToken).transfer(address(this), amount) */\n      0x04\n      add\n      tag_34\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n        /* \"renegadetest.sol\":1179:1452  function depositNewTokens(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"renegadetest.sol\":208:245  address public stakingContractAddress */\n    tag_13:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"renegadetest.sol\":583:1173  function burnStakedTokens(uint256 amount) external {... */\n    tag_18:\n        /* \"renegadetest.sol\":661:662  0 */\n      0x00\n        /* \"renegadetest.sol\":652:658  amount */\n      dup2\n        /* \"renegadetest.sol\":652:662  amount > 0 */\n      gt\n        /* \"renegadetest.sol\":644:696  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"renegadetest.sol\":765:787  stakingContractAddress */\n      sload(0x01)\n        /* \"renegadetest.sol\":822:863  stakingContract.stakedBalance(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x60217267)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"renegadetest.sol\":765:787  stakingContractAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"renegadetest.sol\":715:746  StakingContract stakingContract */\n      0x00\n      swap1\n        /* \"renegadetest.sol\":765:787  stakingContractAddress */\n      dup3\n      swap1\n        /* \"renegadetest.sol\":822:851  stakingContract.stakedBalance */\n      0x60217267\n      swap1\n        /* \"renegadetest.sol\":822:863  stakingContract.stakedBalance(msg.sender) */\n      tag_43\n      swap1\n        /* \"renegadetest.sol\":852:862  msg.sender */\n      caller\n      swap1\n        /* \"renegadetest.sol\":822:863  stakingContract.stakedBalance(msg.sender) */\n      0x04\n      add\n      tag_15\n      jump\t// in\n    tag_43:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"renegadetest.sol\":798:863  uint256 stakedBalance = stakingContract.stakedBalance(msg.sender) */\n      swap1\n      pop\n        /* \"renegadetest.sol\":907:913  amount */\n      dup3\n        /* \"renegadetest.sol\":890:903  stakedBalance */\n      dup2\n        /* \"renegadetest.sol\":890:913  stakedBalance >= amount */\n      lt\n      iszero\n        /* \"renegadetest.sol\":882:945  require(stakedBalance >= amount, \"Insufficient staked balance\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_51\n      jump\t// in\n    tag_49:\n        /* \"renegadetest.sol\":964:996  stakingContract.withdraw(amount) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"renegadetest.sol\":964:988  stakingContract.withdraw */\n      dup4\n      and\n      swap1\n      0x2e1a7d4d\n      swap1\n        /* \"renegadetest.sol\":964:996  stakingContract.withdraw(amount) */\n      tag_52\n      swap1\n        /* \"renegadetest.sol\":989:995  amount */\n      dup7\n      swap1\n        /* \"renegadetest.sol\":964:996  stakingContract.withdraw(amount) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_52:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n        /* \"renegadetest.sol\":1128:1136  newToken */\n      sload(0x02)\n        /* \"renegadetest.sol\":1116:1166  IERC20Token(newToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"renegadetest.sol\":1128:1136  newToken */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"renegadetest.sol\":1116:1146  IERC20Token(newToken).transfer */\n      0xa9059cbb\n      swap2\n      pop\n        /* \"renegadetest.sol\":1116:1166  IERC20Token(newToken).transfer(msg.sender, amount) */\n      tag_57\n      swap1\n        /* \"renegadetest.sol\":1147:1157  msg.sender */\n      caller\n      swap1\n        /* \"renegadetest.sol\":1159:1165  amount */\n      dup8\n      swap1\n        /* \"renegadetest.sol\":1116:1166  IERC20Token(newToken).transfer(msg.sender, amount) */\n      0x04\n      add\n      tag_34\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      pop\n        /* \"renegadetest.sol\":583:1173  function burnStakedTokens(uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"renegadetest.sol\":182:202  address public owner */\n    tag_20:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"renegadetest.sol\":251:274  address public newToken */\n    tag_23:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":14:311   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":134:136   */\n      0x20\n        /* \"#utility.yul\":122:131   */\n      dup3\n        /* \"#utility.yul\":113:120   */\n      dup5\n        /* \"#utility.yul\":109:132   */\n      sub\n        /* \"#utility.yul\":105:137   */\n      slt\n        /* \"#utility.yul\":102:104   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":155:161   */\n      dup1\n        /* \"#utility.yul\":147:153   */\n      dup2\n        /* \"#utility.yul\":140:162   */\n      revert\n        /* \"#utility.yul\":102:104   */\n    tag_64:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":186:202   */\n      mload\n        /* \"#utility.yul\":245:250   */\n      dup1\n        /* \"#utility.yul\":238:251   */\n      iszero\n        /* \"#utility.yul\":231:252   */\n      iszero\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":221:253   */\n      eq\n        /* \"#utility.yul\":211:213   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":272:278   */\n      dup2\n        /* \"#utility.yul\":264:270   */\n      dup3\n        /* \"#utility.yul\":257:279   */\n      revert\n        /* \"#utility.yul\":211:213   */\n    tag_65:\n        /* \"#utility.yul\":300:305   */\n      swap4\n        /* \"#utility.yul\":92:311   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":316:506   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:398   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":449:455   */\n      dup1\n        /* \"#utility.yul\":441:447   */\n      dup2\n        /* \"#utility.yul\":434:456   */\n      revert\n        /* \"#utility.yul\":396:398   */\n    tag_67:\n      pop\n        /* \"#utility.yul\":477:500   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":386:506   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":511:705   */\n    tag_48:\n      0x00\n        /* \"#utility.yul\":634:636   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup3\n        /* \"#utility.yul\":613:620   */\n      dup5\n        /* \"#utility.yul\":609:632   */\n      sub\n        /* \"#utility.yul\":605:637   */\n      slt\n        /* \"#utility.yul\":602:604   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":655:661   */\n      dup1\n        /* \"#utility.yul\":647:653   */\n      dup2\n        /* \"#utility.yul\":640:662   */\n      revert\n        /* \"#utility.yul\":602:604   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":683:699   */\n      mload\n      swap2\n        /* \"#utility.yul\":592:705   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:913   */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":874:906   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":856:907   */\n      dup2\n      mstore\n        /* \"#utility.yul\":844:846   */\n      0x20\n        /* \"#utility.yul\":829:847   */\n      add\n      swap1\n        /* \"#utility.yul\":811:913   */\n      jump\t// out\n        /* \"#utility.yul\":918:1192   */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1110:1142   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1092:1143   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1159:1177   */\n      dup3\n      add\n        /* \"#utility.yul\":1152:1186   */\n      mstore\n        /* \"#utility.yul\":1080:1082   */\n      0x40\n        /* \"#utility.yul\":1065:1083   */\n      add\n      swap1\n        /* \"#utility.yul\":1047:1192   */\n      jump\t// out\n        /* \"#utility.yul\":1197:1550   */\n    tag_32:\n        /* \"#utility.yul\":1399:1401   */\n      0x20\n        /* \"#utility.yul\":1381:1402   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1438:1440   */\n      0x1d\n        /* \"#utility.yul\":1418:1436   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1411:1441   */\n      mstore\n        /* \"#utility.yul\":1477:1508   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":1472:1474   */\n      0x40\n        /* \"#utility.yul\":1457:1475   */\n      dup3\n      add\n        /* \"#utility.yul\":1450:1509   */\n      mstore\n        /* \"#utility.yul\":1541:1543   */\n      0x60\n        /* \"#utility.yul\":1526:1544   */\n      add\n      swap1\n        /* \"#utility.yul\":1371:1550   */\n      jump\t// out\n        /* \"#utility.yul\":1555:1906   */\n    tag_51:\n        /* \"#utility.yul\":1757:1759   */\n      0x20\n        /* \"#utility.yul\":1739:1760   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1796:1798   */\n      0x1b\n        /* \"#utility.yul\":1776:1794   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1769:1799   */\n      mstore\n        /* \"#utility.yul\":1835:1864   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":1830:1832   */\n      0x40\n        /* \"#utility.yul\":1815:1833   */\n      dup3\n      add\n        /* \"#utility.yul\":1808:1865   */\n      mstore\n        /* \"#utility.yul\":1897:1899   */\n      0x60\n        /* \"#utility.yul\":1882:1900   */\n      add\n      swap1\n        /* \"#utility.yul\":1729:1906   */\n      jump\t// out\n        /* \"#utility.yul\":1911:2263   */\n    tag_28:\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"#utility.yul\":2095:2116   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2152:2154   */\n      0x1c\n        /* \"#utility.yul\":2132:2150   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2125:2155   */\n      mstore\n        /* \"#utility.yul\":2191:2221   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2171:2189   */\n      dup3\n      add\n        /* \"#utility.yul\":2164:2222   */\n      mstore\n        /* \"#utility.yul\":2254:2256   */\n      0x60\n        /* \"#utility.yul\":2239:2257   */\n      add\n      swap1\n        /* \"#utility.yul\":2085:2263   */\n      jump\t// out\n        /* \"#utility.yul\":2268:2445   */\n    tag_53:\n        /* \"#utility.yul\":2414:2439   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2402:2404   */\n      0x20\n        /* \"#utility.yul\":2387:2405   */\n      add\n      swap1\n        /* \"#utility.yul\":2369:2445   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7a72fda7b9edce33aa5b6e01ce651bd4cdc30e3175bab01a56b6e7a6eccb6c464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:507:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:2"
															},
															"nodeType": "YulIf",
															"src": "117:2:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:2",
														"type": ""
													}
												],
												"src": "14:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:2"
															},
															"nodeType": "YulIf",
															"src": "306:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:2",
														"type": ""
													}
												],
												"src": "198:307:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161059938038061059983398101604081905261002f91610087565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316179055600280549290931691161790556100b9565b80516001600160a01b038116811461008257600080fd5b919050565b60008060408385031215610099578182fd5b6100a28361006b565b91506100b06020840161006b565b90509250929050565b6104d1806100c86000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631afa39421461005c5780633535f48b1461007157806388bc519c1461008f5780638da5cb5b146100a2578063c42bd05a146100aa575b600080fd5b61006f61006a366004610390565b6100b2565b005b61007961018d565b60405161008691906103c0565b60405180910390f35b61006f61009d366004610390565b61019c565b61007961034b565b61007961035a565b6000546001600160a01b031633146100e55760405162461bcd60e51b81526004016100dc9061045b565b60405180910390fd5b600081116101055760405162461bcd60e51b81526004016100dc906103ed565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061013790309085906004016103d4565b602060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101899190610369565b5050565b6001546001600160a01b031681565b600081116101bc5760405162461bcd60e51b81526004016100dc906103ed565b600154604051636021726760e01b81526001600160a01b039091169060009082906360217267906101f19033906004016103c0565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906103a8565b9050828110156102635760405162461bcd60e51b81526004016100dc90610424565b604051632e1a7d4d60e01b81526001600160a01b03831690632e1a7d4d9061028f908690600401610492565b600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb91506102f390339087906004016103d4565b602060405180830381600087803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190610369565b50505050565b6000546001600160a01b031681565b6002546001600160a01b031681565b60006020828403121561037a578081fd5b81518015158114610389578182fd5b9392505050565b6000602082840312156103a1578081fd5b5035919050565b6000602082840312156103b9578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b6020808252601c908201527f4f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000604082015260600190565b9081526020019056fea2646970667358221220f7a72fda7b9edce33aa5b6e01ce651bd4cdc30e3175bab01a56b6e7a6eccb6c464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x599 CODESIZE SUB DUP1 PUSH2 0x599 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xB9 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA2 DUP4 PUSH2 0x6B JUMP JUMPDEST SWAP2 POP PUSH2 0xB0 PUSH1 0x20 DUP5 ADD PUSH2 0x6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D1 DUP1 PUSH2 0xC8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AFA3942 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3535F48B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x88BC519C EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH2 0x79 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x79 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x137 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x165 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60217267 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x60217267 SWAP1 PUSH2 0x1F1 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x28F SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH2 0x2F3 SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x389 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xA7 0x2F 0xDA PUSH28 0x9EDCE33AA5B6E01CE651BD4CDC30E3175BAB01A56B6E7A6ECCB6C464 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "159:1295:1:-:0;;;285:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;352:5;:18;;-1:-1:-1;;;;;;352:18:1;;;360:10;352:18;;;;;380:41;;-1:-1:-1;;;;;380:41:1;;;;;;;;;431:8;:20;;;;;;;;;;;159:1295;;14:179:2;95:13;;-1:-1:-1;;;;;137:31:2;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;159:1295:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2447:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "92:219:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "138:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "155:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "140:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "140:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "140:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "113:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "122:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "109:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "134:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "105:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "105:32:2"
															},
															"nodeType": "YulIf",
															"src": "102:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "173:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "186:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "186:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "177:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "264:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "272:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "224:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "245:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "238:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "238:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "231:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "231:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "221:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "221:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "214:40:2"
															},
															"nodeType": "YulIf",
															"src": "211:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "300:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "290:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "58:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "69:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "81:6:2",
														"type": ""
													}
												],
												"src": "14:297:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "386:120:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "441:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "449:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:32:2"
															},
															"nodeType": "YulIf",
															"src": "396:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "467:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "490:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "477:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "363:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:2",
														"type": ""
													}
												],
												"src": "316:190:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "592:113:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "647:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "655:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "640:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "640:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "640:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "613:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "634:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:32:2"
															},
															"nodeType": "YulIf",
															"src": "602:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "673:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "689:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "683:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "673:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "558:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "569:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "581:6:2",
														"type": ""
													}
												],
												"src": "511:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "821:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "833:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "821:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "863:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "878:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "894:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "899:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "890:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "890:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "903:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "886:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "874:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "874:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "856:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "780:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "791:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "802:4:2",
														"type": ""
													}
												],
												"src": "710:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1047:145:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1057:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1069:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1057:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1114:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1130:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1135:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1126:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1126:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1139:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1122:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1159:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1179:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1008:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1019:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1038:4:2",
														"type": ""
													}
												],
												"src": "918:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1371:179:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1388:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1381:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1381:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1438:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1461:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1457:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1457:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1477:31:2",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1518:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1530:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1518:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1348:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1362:4:2",
														"type": ""
													}
												],
												"src": "1197:353:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1729:177:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1746:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1791:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1769:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1819:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1835:29:2",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1808:57:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1874:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1886:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1874:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1706:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1720:4:2",
														"type": ""
													}
												],
												"src": "1555:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2085:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2102:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2095:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2136:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2147:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2132:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2125:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2125:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2175:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2186:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2191:30:2",
																		"type": "",
																		"value": "Only the owner can call this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2164:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2231:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2243:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2231:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2062:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2076:4:2",
														"type": ""
													}
												],
												"src": "1911:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2369:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2379:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2391:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2402:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2379:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2421:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2414:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2414:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2338:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2349:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2360:4:2",
														"type": ""
													}
												],
												"src": "2268:177:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only the owner can call this\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631afa39421461005c5780633535f48b1461007157806388bc519c1461008f5780638da5cb5b146100a2578063c42bd05a146100aa575b600080fd5b61006f61006a366004610390565b6100b2565b005b61007961018d565b60405161008691906103c0565b60405180910390f35b61006f61009d366004610390565b61019c565b61007961034b565b61007961035a565b6000546001600160a01b031633146100e55760405162461bcd60e51b81526004016100dc9061045b565b60405180910390fd5b600081116101055760405162461bcd60e51b81526004016100dc906103ed565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061013790309085906004016103d4565b602060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101899190610369565b5050565b6001546001600160a01b031681565b600081116101bc5760405162461bcd60e51b81526004016100dc906103ed565b600154604051636021726760e01b81526001600160a01b039091169060009082906360217267906101f19033906004016103c0565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906103a8565b9050828110156102635760405162461bcd60e51b81526004016100dc90610424565b604051632e1a7d4d60e01b81526001600160a01b03831690632e1a7d4d9061028f908690600401610492565b600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb91506102f390339087906004016103d4565b602060405180830381600087803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190610369565b50505050565b6000546001600160a01b031681565b6002546001600160a01b031681565b60006020828403121561037a578081fd5b81518015158114610389578182fd5b9392505050565b6000602082840312156103a1578081fd5b5035919050565b6000602082840312156103b9578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b6020808252601c908201527f4f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000604082015260600190565b9081526020019056fea2646970667358221220f7a72fda7b9edce33aa5b6e01ce651bd4cdc30e3175bab01a56b6e7a6eccb6c464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AFA3942 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3535F48B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x88BC519C EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH2 0x79 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x79 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x137 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x165 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60217267 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x60217267 SWAP1 PUSH2 0x1F1 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x28F SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH2 0x2F3 SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x389 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xA7 0x2F 0xDA PUSH28 0x9EDCE33AA5B6E01CE651BD4CDC30E3175BAB01A56B6E7A6ECCB6C464 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "159:1295:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1179:273;;;;;;:::i;:::-;;:::i;:::-;;208:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:590;;;;;;:::i;:::-;;:::i;182:20::-;;;:::i;251:23::-;;;:::i;1179:273::-;517:5;;-1:-1:-1;;;;;517:5:1;503:10;:19;495:60;;;;-1:-1:-1;;;495:60:1;;;;;;;:::i;:::-;;;;;;;;;1267:1:::1;1258:6;:10;1250:52;;;;-1:-1:-1::0;;;1250:52:1::1;;;;;;;:::i;:::-;1404:8;::::0;1392:53:::1;::::0;-1:-1:-1;;;1392:53:1;;-1:-1:-1;;;;;1404:8:1;;::::1;::::0;1392:30:::1;::::0;:53:::1;::::0;1431:4:::1;::::0;1438:6;;1392:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1179:273:::0;:::o;208:37::-;;;-1:-1:-1;;;;;208:37:1;;:::o;583:590::-;661:1;652:6;:10;644:52;;;;-1:-1:-1;;;644:52:1;;;;;;;:::i;:::-;765:22;;822:41;;-1:-1:-1;;;822:41:1;;-1:-1:-1;;;;;765:22:1;;;;715:31;;765:22;;822:29;;:41;;852:10;;822:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;798:65;;907:6;890:13;:23;;882:63;;;;-1:-1:-1;;;882:63:1;;;;;;;:::i;:::-;964:32;;-1:-1:-1;;;964:32:1;;-1:-1:-1;;;;;964:24:1;;;;;:32;;989:6;;964:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1128:8:1;;1116:50;;-1:-1:-1;;;1116:50:1;;-1:-1:-1;;;;;1128:8:1;;;;-1:-1:-1;1116:30:1;;-1:-1:-1;1116:50:1;;1147:10;;1159:6;;1116:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;583:590;;;:::o;182:20::-;;;-1:-1:-1;;;;;182:20:1;;:::o;251:23::-;;;-1:-1:-1;;;;;251:23:1;;:::o;14:297:2:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:2:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:2;;386:120;-1:-1:-1;386:120:2:o;511:194::-;;634:2;622:9;613:7;609:23;605:32;602:2;;;655:6;647;640:22;602:2;-1:-1:-1;683:16:2;;592:113;-1:-1:-1;592:113:2:o;710:203::-;-1:-1:-1;;;;;874:32:2;;;;856:51;;844:2;829:18;;811:102::o;918:274::-;-1:-1:-1;;;;;1110:32:2;;;;1092:51;;1174:2;1159:18;;1152:34;1080:2;1065:18;;1047:145::o;1197:353::-;1399:2;1381:21;;;1438:2;1418:18;;;1411:30;1477:31;1472:2;1457:18;;1450:59;1541:2;1526:18;;1371:179::o;1555:351::-;1757:2;1739:21;;;1796:2;1776:18;;;1769:30;1835:29;1830:2;1815:18;;1808:57;1897:2;1882:18;;1729:177::o;1911:352::-;2113:2;2095:21;;;2152:2;2132:18;;;2125:30;2191;2186:2;2171:18;;2164:58;2254:2;2239:18;;2085:178::o;2268:177::-;2414:25;;;2402:2;2387:18;;2369:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "246600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burnStakedTokens(uint256)": "infinite",
								"depositNewTokens(uint256)": "infinite",
								"newToken()": "1136",
								"owner()": "1114",
								"stakingContractAddress()": "1070"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 285,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 285,
									"end": 458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 352,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 360,
									"end": 370,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 352,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 380,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 380,
									"end": 421,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 431,
									"end": 439,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 431,
									"end": 451,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 431,
									"end": 451,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1454,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7a72fda7b9edce33aa5b6e01ce651bd4cdc30e3175bab01a56b6e7a6eccb6c464736f6c63430008000033",
									".code": [
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "1AFA3942"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "3535F48B"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "88BC519C"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "C42BD05A"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 1454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 517,
											"end": 522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 503,
											"end": 513,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 503,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 495,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 495,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1392,
											"end": 1422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1435,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 245,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 652,
											"end": 662,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 644,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 644,
											"end": 696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60217267"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "60217267"
										},
										{
											"begin": 822,
											"end": 851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 852,
											"end": 862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 822,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 913,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 890,
											"end": 913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 964,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 989,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 964,
											"end": 996,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 964,
											"end": 996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1116,
											"end": 1146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 1173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 202,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 182,
											"end": 202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 182,
											"end": 202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 182,
											"end": 202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 274,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 251,
											"end": 274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 251,
											"end": 274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 251,
											"end": 274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 113,
											"end": 120,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 109,
											"end": 132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 105,
											"end": 137,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 102,
											"end": 104,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 102,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 155,
											"end": 161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 140,
											"end": 162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 102,
											"end": 104,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 186,
											"end": 202,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 238,
											"end": 251,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 231,
											"end": 252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 253,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 211,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 257,
											"end": 279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 213,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 300,
											"end": 305,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 92,
											"end": 311,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 92,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 316,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 449,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 434,
											"end": 456,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 477,
											"end": 500,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 477,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 386,
											"end": 506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 511,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 636,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 613,
											"end": 620,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 609,
											"end": 632,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 605,
											"end": 637,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 602,
											"end": 604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 640,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 602,
											"end": 604,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 683,
											"end": 699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 683,
											"end": 699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 592,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 913,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 710,
											"end": 913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 856,
											"end": 907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 913,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 918,
											"end": 1192,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 918,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1186,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1192,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1550,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1197,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1550,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1555,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1911,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2095,
											"end": 2116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2268,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2268,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2404,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2445,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"burnStakedTokens(uint256)": "88bc519c",
							"depositNewTokens(uint256)": "1afa3942",
							"newToken()": "c42bd05a",
							"owner()": "8da5cb5b",
							"stakingContractAddress()": "3535f48b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnStakedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositNewTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"renegadetest.sol\":\"Burning\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContract.sol\":{\"keccak256\":\"0x64181e3418f326fbcb844d7c8c3de1fdf7b5091f3c681272e314d4ce3e0736a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77487eb1fa84d97aa8c1d81d75bd324ce78ad208024974876491ccd29720976f\",\"dweb:/ipfs/QmVXsszZxtjNtgxVvpxpaAN988etsUMYxjvdkMTEmh5Qj3\"]},\"renegadetest.sol\":{\"keccak256\":\"0xbd3b6e50f64aeeab4cbb10863123674daf7ee39469c0242b7e1318f9168c5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://291b36d2eaa6bb91d0a0fa378c5dbf3e3390d33622fd922460edd583d87bd4ee\",\"dweb:/ipfs/Qmbp7Kj9FWHF7DprE95sJdwLDxL6gbHhDvD3K9B92JDX2a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 194,
								"contract": "renegadetest.sol:Burning",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 196,
								"contract": "renegadetest.sol:Burning",
								"label": "stakingContractAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 198,
								"contract": "renegadetest.sol:Burning",
								"label": "newToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"renegadetest.sol\":\"IERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContract.sol\":{\"keccak256\":\"0x64181e3418f326fbcb844d7c8c3de1fdf7b5091f3c681272e314d4ce3e0736a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77487eb1fa84d97aa8c1d81d75bd324ce78ad208024974876491ccd29720976f\",\"dweb:/ipfs/QmVXsszZxtjNtgxVvpxpaAN988etsUMYxjvdkMTEmh5Qj3\"]},\"renegadetest.sol\":{\"keccak256\":\"0xbd3b6e50f64aeeab4cbb10863123674daf7ee39469c0242b7e1318f9168c5af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://291b36d2eaa6bb91d0a0fa378c5dbf3e3390d33622fd922460edd583d87bd4ee\",\"dweb:/ipfs/Qmbp7Kj9FWHF7DprE95sJdwLDxL6gbHhDvD3K9B92JDX2a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"StakingContract.sol": {
				"ast": {
					"absolutePath": "StakingContract.sol",
					"exportedSymbols": {
						"IERC20": [
							189
						],
						"StakingContract": [
							161
						]
					},
					"id": 190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "StakingContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "88:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 5,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "114:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "114:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 7,
									"mutability": "mutable",
									"name": "totalStaked",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "140:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60217267",
									"id": 11,
									"mutability": "mutable",
									"name": "stakedBalance",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "172:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "180:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "172:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 9,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "191:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 17,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "240:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:38:0"
									},
									"src": "227:51:0"
								},
								{
									"anonymous": false,
									"id": 23,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "299:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "321:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:38:0"
									},
									"src": "283:54:0"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "371:59:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "381:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "389:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "381:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "381:18:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "409:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "417:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "409:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "409:14:0"
											}
										]
									},
									"id": 38,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:16:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:0"
									},
									"scope": 161,
									"src": "343:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "457:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 41,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "475:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "475:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 43,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "489:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "475:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c2074686973",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "496:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6",
																"typeString": "literal_string \"Only the owner can call this\""
															},
															"value": "Only the owner can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6",
																"typeString": "literal_string \"Only the owner can call this\""
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "467:60:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "537:1:0"
											}
										]
									},
									"id": 50,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:0"
									},
									"src": "436:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "591:375:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "609:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "618:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "621:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "601:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 63,
																		"name": "stakedBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "671:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 66,
																	"indexExpression": {
																		"expression": {
																			"id": 64,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "685:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "685:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "671:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 67,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "699:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "671:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 73,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "733:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "733:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 70,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "716:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 69,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "709:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$189_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "709:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$189",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 168,
																	"src": "709:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "709:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "671:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "663:106:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 80,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "780:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 83,
														"indexExpression": {
															"expression": {
																"id": 81,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "794:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "794:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "780:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 84,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "809:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "780:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "780:35:0"
											},
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "825:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 88,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "840:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "825:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "825:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "883:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "883:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 99,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$161",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$161",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 97,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "910:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 92,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 91,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "856:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$189_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "856:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$189",
																"typeString": "contract IERC20"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "856:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "856:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 105,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "940:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "940:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "952:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 104,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "933:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "928:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:16:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:0:0"
									},
									"scope": 161,
									"src": "551:415:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1015:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1033:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1033:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1045:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1025:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 124,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1095:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 127,
																"indexExpression": {
																	"expression": {
																		"id": 125,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1109:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1109:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1095:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1124:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1095:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1132:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1087:75:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 133,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1173:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 136,
														"indexExpression": {
															"expression": {
																"id": 134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1187:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1187:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1173:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 137,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1202:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1173:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1173:35:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1218:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 141,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1233:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1218:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1218:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1272:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1272:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 145,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1256:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 144,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "1249:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$189_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1249:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$189",
																"typeString": "contract IERC20"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "1249:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1249:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1317:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1317:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "EmitStatement",
												"src": "1302:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "990:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:16:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1015:0:0"
									},
									"scope": 161,
									"src": "972:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 190,
							"src": "57:1288:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:17:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:0"
									},
									"scope": 189,
									"src": "1370:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1461:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1480:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1460:35:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1513:6:0"
									},
									"scope": 189,
									"src": "1443:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1563:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1582:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:51:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:6:0"
									},
									"scope": 189,
									"src": "1525:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 190,
							"src": "1347:277:0"
						}
					],
					"src": "32:1601:0"
				},
				"id": 0
			},
			"renegadetest.sol": {
				"ast": {
					"absolutePath": "renegadetest.sol",
					"exportedSymbols": {
						"Burning": [
							308
						],
						"IERC20": [
							189
						],
						"IERC20Token": [
							318
						],
						"StakingContract": [
							161
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "StakingContract.sol",
							"file": "./StakingContract.sol",
							"id": 192,
							"nodeType": "ImportDirective",
							"scope": 319,
							"sourceUnit": 190,
							"src": "57:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "Burning",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 194,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "182:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "182:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3535f48b",
									"id": 196,
									"mutability": "mutable",
									"name": "stakingContractAddress",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "208:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 195,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "208:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c42bd05a",
									"id": 198,
									"mutability": "mutable",
									"name": "newToken",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "251:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 197,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "342:116:1",
										"statements": [
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "352:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 206,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "360:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "360:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "352:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "352:18:1"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "stakingContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "380:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "_stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "405:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "380:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "380:41:1"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 214,
														"name": "newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "431:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 215,
														"name": "_newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "442:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "431:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "431:20:1"
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "297:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_newToken",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "323:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:45:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:0:1"
									},
									"scope": 308,
									"src": "285:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "485:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 222,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "503:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "503:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 224,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "517:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "503:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c2074686973",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "524:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6",
																"typeString": "literal_string \"Only the owner can call this\""
															},
															"value": "Only the owner can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e79e3a4b3814676f1b8f8663e676601d8fd0b515975349b32767bbd0a67c7a6",
																"typeString": "literal_string \"Only the owner can call this\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "495:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "495:60:1"
											},
											{
												"id": 229,
												"nodeType": "PlaceholderStatement",
												"src": "565:1:1"
											}
										]
									},
									"id": 231,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "482:2:1"
									},
									"src": "464:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "634:539:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 237,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "652:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "652:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "664:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "644:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "644:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "644:52:1"
											},
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "stakingContract",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "715:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingContract_$161",
															"typeString": "contract StakingContract"
														},
														"typeName": {
															"id": 244,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 243,
																"name": "StakingContract",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 161,
																"src": "715:15:1"
															},
															"referencedDeclaration": 161,
															"src": "715:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingContract_$161",
																"typeString": "contract StakingContract"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "stakingContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "765:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 246,
														"name": "StakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "749:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_StakingContract_$161_$",
															"typeString": "type(contract StakingContract)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StakingContract_$161",
														"typeString": "contract StakingContract"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "715:73:1"
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "stakedBalance",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "798:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "798:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "852:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "852:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 252,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "822:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingContract_$161",
																"typeString": "contract StakingContract"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakedBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "822:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "798:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "stakedBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "890:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 260,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "907:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "890:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "915:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "882:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "882:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "989:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 265,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "964:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingContract_$161",
																"typeString": "contract StakingContract"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 160,
														"src": "964:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "964:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1147:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1147:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1159:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 272,
																	"name": "newToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1128:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 271,
																"name": "IERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1116:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Token_$318_$",
																	"typeString": "type(contract IERC20Token)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Token_$318",
																"typeString": "contract IERC20Token"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "1116:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1116:50:1"
											}
										]
									},
									"functionSelector": "88bc519c",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnStakedTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "609:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:16:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:0:1"
									},
									"scope": 308,
									"src": "583:590:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1240:212:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "1258:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1267:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1250:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1250:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1431:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Burning_$308",
																		"typeString": "contract Burning"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Burning_$308",
																		"typeString": "contract Burning"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1423:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1423:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1423:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1438:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 296,
																	"name": "newToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1404:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "IERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1392:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Token_$318_$",
																	"typeString": "type(contract IERC20Token)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1392:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Token_$318",
																"typeString": "contract IERC20Token"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "1392:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1392:53:1"
											}
										]
									},
									"functionSelector": "1afa3942",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 286,
											"modifierName": {
												"id": 285,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 231,
												"src": "1230:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1230:9:1"
										}
									],
									"name": "depositNewTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:16:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:1"
									},
									"scope": 308,
									"src": "1179:273:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 319,
							"src": "159:1295:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "IERC20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1548:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1567:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:35:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1601:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1601:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:6:1"
									},
									"scope": 318,
									"src": "1530:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 319,
							"src": "1456:153:1"
						}
					],
					"src": "32:1578:1"
				},
				"id": 1
			}
		}
	}
}