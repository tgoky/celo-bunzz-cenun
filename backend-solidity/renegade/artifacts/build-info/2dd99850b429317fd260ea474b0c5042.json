{
	"id": "2dd99850b429317fd260ea474b0c5042",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"newburncc.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./StakingContractInterface.sol\"; // Import the staking contract interface\nimport \"./NewTokenInterface.sol\"; // Import the new token interface\nimport \"./IERC20.sol\"; // Import the ERC-20 token interface\n\ncontract BurnContract {\n    address public stakingContractAddress;\n    StakingContractInterface public stakingContract;\n    NewTokenInterface public newToken;\n\n    uint256 public conversionRate = 1000; // 1000 staked tokens -> 1 new token\n\n    event BurnAndTransferStarted(address indexed user, uint256 amount, uint256 stakedBalance);\n    event TokensBurned(address indexed user, uint256 amount);\n    event NewTokenCalculation(address indexed user, uint256 newTokenAmount);\n    event NewTokensTransferred(address indexed user, uint256 newTokenAmount);\n\n    constructor(\n        address _stakingContractAddress,\n        address _newTokenAddress\n    ) {\n        stakingContractAddress = _stakingContractAddress;\n        stakingContract = StakingContractInterface(_stakingContractAddress);\n        newToken = NewTokenInterface(_newTokenAddress);\n    }\n\n    function burnAndTransfer(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        uint256 stakedBalance = stakingContract.stakedBalance(msg.sender);\n\n        require(stakedBalance >= amount, \"Insufficient staked balance\");\n\n        // Emit an event to log the start of the function\n        emit BurnAndTransferStarted(msg.sender, amount, stakedBalance);\n\n        // Perform token burning logic here\n        // Transfer staked tokens to the burn address\n        address burnAddress = 0x000000000000000000000000000000000000dEaD;\n        IERC20(stakingContractAddress).transfer(burnAddress, amount);\n\n        // Emit an event to log the successful token burn\n        emit TokensBurned(msg.sender, amount);\n\n        // Calculate the amount of new tokens to transfer\n        uint256 newTokenAmount = amount / conversionRate;\n\n        // Emit an event to log the new token calculation\n        emit NewTokenCalculation(msg.sender, newTokenAmount);\n\n        // Transfer new tokens to the user\n        newToken.transfer(msg.sender, newTokenAmount);\n\n        // Emit an event to log the successful transfer of new tokens\n        emit NewTokensTransferred(msg.sender, newTokenAmount);\n    }\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}"
			},
			"NewTokenInterface.sol": {
				"content": "// NewTokenInterface.sol\n\n// This file defines the interface for interacting with the NewToken contract\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface NewTokenInterface {\n    function transfer(address to, uint256 value) external returns (bool);\n    // Add other ERC-20 functions if required\n    // ...\n}\n"
			},
			"StakingContractInterface.sol": {
				"content": "// StakingContractInterface.sol\n\n// This file defines the interface for interacting with the StakingContract\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface StakingContractInterface {\n    function stakedBalance(address user) external view returns (uint256);\n    function stake(uint256 amount) external;\n    function withdraw(uint256 amount) external;\n     function transfer(address recipient, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x481ee2f6a390cef9b0fc7ff5ed7aed7debf00ac1eebce0cd5c86639fd89f12fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08328515cf72c81c1d97ba74035f7970f2661cdb8dad867d8309957ee34249c9\",\"dweb:/ipfs/QmT9t1M5KYGj6FLLhjbbHffoNJ2RfhjyKZdS9dZ4moAENu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewTokenInterface.sol": {
				"NewTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewTokenInterface.sol\":\"NewTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewTokenInterface.sol\":{\"keccak256\":\"0x83151e4a593aa256aeeb4007e75464e10fb689d45e8e4d3c7753063a318bb422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f816d29cd93cce2bde42e2d8409e8bcaa66edfc70c89995a7b813099d0e625\",\"dweb:/ipfs/QmecjkmuVAKMVQ7pSr7Kk3bgAWB24ujTzMtiM3DfKER63N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingContractInterface.sol": {
				"StakingContractInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingContractInterface.sol\":\"StakingContractInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StakingContractInterface.sol\":{\"keccak256\":\"0xf69de83ea3d246fbf778e98dbfbe816e3d74aac2802ea2836a6fa93521cb46b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e853cbd2fac8bded67eeeb6a87291e3f5afe32e4e4e95418c9100a20c9a6e6\",\"dweb:/ipfs/QmY93t1LJegFkTjTyZa15qQsq7fSvvXLHZbsq8jkwHo4SU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"newburncc.sol": {
				"BurnContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedBalance",
									"type": "uint256"
								}
							],
							"name": "BurnAndTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTokenAmount",
									"type": "uint256"
								}
							],
							"name": "NewTokenCalculation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTokenAmount",
									"type": "uint256"
								}
							],
							"name": "NewTokensTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnAndTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "conversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newToken",
							"outputs": [
								{
									"internalType": "contract NewTokenInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "contract StakingContractInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"newburncc.sol\":268:2344  contract BurnContract {... */\n  mstore(0x40, 0x80)\n    /* \"newburncc.sol\":464:468  1000 */\n  0x03e8\n    /* \"newburncc.sol\":432:468  uint256 public conversionRate = 1000 */\n  0x03\n  sstore\n    /* \"newburncc.sol\":825:1116  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"newburncc.sol\":928:950  stakingContractAddress */\n  0x00\n    /* \"newburncc.sol\":928:976  stakingContractAddress = _stakingContractAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n  0x01\n    /* \"newburncc.sol\":986:1053  stakingContract = StakingContractInterface(_stakingContractAddress) */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"newburncc.sol\":1063:1071  newToken */\n  0x02\n    /* \"newburncc.sol\":1063:1109  newToken = NewTokenInterface(_newTokenAddress) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"newburncc.sol\":268:2344  contract BurnContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:193   */\ntag_8:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_10:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_12:\n    /* \"#utility.yul\":387:429   */\n  tag_13\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_8\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_14\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"newburncc.sol\":268:2344  contract BurnContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"newburncc.sol\":268:2344  contract BurnContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3535f48b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7ffdf53e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc42bd05a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xea48cfb1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"newburncc.sol\":296:333  address public stakingContractAddress */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"newburncc.sol\":432:468  uint256 public conversionRate = 1000 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n        /* \"newburncc.sol\":392:425  NewTokenInterface public newToken */\n    tag_5:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"newburncc.sol\":1122:2342  function burnAndTransfer(uint256 amount) external {... */\n    tag_6:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"newburncc.sol\":339:386  StakingContractInterface public stakingContract */\n    tag_7:\n      tag_8\n      tag_25\n      jump\t// in\n        /* \"newburncc.sol\":296:333  address public stakingContractAddress */\n    tag_9:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"newburncc.sol\":432:468  uint256 public conversionRate = 1000 */\n    tag_13:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"newburncc.sol\":392:425  NewTokenInterface public newToken */\n    tag_17:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"newburncc.sol\":1122:2342  function burnAndTransfer(uint256 amount) external {... */\n    tag_23:\n        /* \"newburncc.sol\":1199:1200  0 */\n      0x00\n        /* \"newburncc.sol\":1190:1196  amount */\n      dup2\n        /* \"newburncc.sol\":1190:1200  amount > 0 */\n      gt\n        /* \"newburncc.sol\":1182:1234  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"newburncc.sol\":1269:1284  stakingContract */\n      sload(0x01)\n        /* \"newburncc.sol\":1269:1310  stakingContract.stakedBalance(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x60217267)\n      dup2\n      mstore\n        /* \"newburncc.sol\":1245:1266  uint256 stakedBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":1269:1284  stakingContract */\n      and\n      swap1\n        /* \"newburncc.sol\":1269:1298  stakingContract.stakedBalance */\n      0x60217267\n      swap1\n        /* \"newburncc.sol\":1269:1310  stakingContract.stakedBalance(msg.sender) */\n      tag_32\n      swap1\n        /* \"newburncc.sol\":1299:1309  msg.sender */\n      caller\n      swap1\n        /* \"newburncc.sol\":1269:1310  stakingContract.stakedBalance(msg.sender) */\n      0x04\n      add\n      tag_11\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"newburncc.sol\":1245:1310  uint256 stakedBalance = stakingContract.stakedBalance(msg.sender) */\n      swap1\n      pop\n        /* \"newburncc.sol\":1346:1352  amount */\n      dup2\n        /* \"newburncc.sol\":1329:1342  stakedBalance */\n      dup2\n        /* \"newburncc.sol\":1329:1352  stakedBalance >= amount */\n      lt\n      iszero\n        /* \"newburncc.sol\":1321:1384  require(stakedBalance >= amount, \"Insufficient staked balance\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_40\n      jump\t// in\n    tag_38:\n        /* \"newburncc.sol\":1481:1491  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":1458:1515  BurnAndTransferStarted(msg.sender, amount, stakedBalance) */\n      and\n      0x5cca6e60d92fa932734614ce13b4c2d8f7307a963c23547e639481c60c522062\n        /* \"newburncc.sol\":1493:1499  amount */\n      dup4\n        /* \"newburncc.sol\":1501:1514  stakedBalance */\n      dup4\n        /* \"newburncc.sol\":1458:1515  BurnAndTransferStarted(msg.sender, amount, stakedBalance) */\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"newburncc.sol\":1624:1643  address burnAddress */\n      0x00\n        /* \"newburncc.sol\":1705:1727  stakingContractAddress */\n      sload\n        /* \"newburncc.sol\":1698:1758  IERC20(stakingContractAddress).transfer(burnAddress, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"newburncc.sol\":1646:1688  0x000000000000000000000000000000000000dEaD */\n      0xdead\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":1705:1727  stakingContractAddress */\n      and\n      swap1\n        /* \"newburncc.sol\":1698:1737  IERC20(stakingContractAddress).transfer */\n      0xa9059cbb\n      swap1\n        /* \"newburncc.sol\":1698:1758  IERC20(stakingContractAddress).transfer(burnAddress, amount) */\n      tag_43\n      swap1\n        /* \"newburncc.sol\":1646:1688  0x000000000000000000000000000000000000dEaD */\n      dup5\n      swap1\n        /* \"newburncc.sol\":1751:1757  amount */\n      dup8\n      swap1\n        /* \"newburncc.sol\":1698:1758  IERC20(stakingContractAddress).transfer(burnAddress, amount) */\n      0x04\n      add\n      tag_44\n      jump\t// in\n    tag_43:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      pop\n        /* \"newburncc.sol\":1845:1855  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":1832:1864  TokensBurned(msg.sender, amount) */\n      and\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n        /* \"newburncc.sol\":1857:1863  amount */\n      dup5\n        /* \"newburncc.sol\":1832:1864  TokensBurned(msg.sender, amount) */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"newburncc.sol\":1933:1955  uint256 newTokenAmount */\n      0x00\n        /* \"newburncc.sol\":1967:1981  conversionRate */\n      sload(0x03)\n        /* \"newburncc.sol\":1958:1964  amount */\n      dup5\n        /* \"newburncc.sol\":1958:1981  amount / conversionRate */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"newburncc.sol\":1933:1981  uint256 newTokenAmount = amount / conversionRate */\n      swap1\n      pop\n        /* \"newburncc.sol\":2075:2085  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":2055:2102  NewTokenCalculation(msg.sender, newTokenAmount) */\n      and\n      0x0606a6579f291744b661285f4e15f5b8fcb378a76ab61fa51a7a79b231ea4420\n        /* \"newburncc.sol\":2087:2101  newTokenAmount */\n      dup3\n        /* \"newburncc.sol\":2055:2102  NewTokenCalculation(msg.sender, newTokenAmount) */\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"newburncc.sol\":2156:2164  newToken */\n      sload(0x02)\n        /* \"newburncc.sol\":2156:2201  newToken.transfer(msg.sender, newTokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":2156:2164  newToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"newburncc.sol\":2156:2173  newToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"newburncc.sol\":2156:2201  newToken.transfer(msg.sender, newTokenAmount) */\n      tag_54\n      swap1\n        /* \"newburncc.sol\":2174:2184  msg.sender */\n      caller\n      swap1\n        /* \"newburncc.sol\":2186:2200  newTokenAmount */\n      dup6\n      swap1\n        /* \"newburncc.sol\":2156:2201  newToken.transfer(msg.sender, newTokenAmount) */\n      0x04\n      add\n      tag_44\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      pop\n        /* \"newburncc.sol\":2308:2318  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"newburncc.sol\":2287:2335  NewTokensTransferred(msg.sender, newTokenAmount) */\n      and\n      0x846a89b57591b6b9909fbd88e7cc9666b3f1b91ae9899dbb65170d70d56bdfc5\n        /* \"newburncc.sol\":2320:2334  newTokenAmount */\n      dup3\n        /* \"newburncc.sol\":2287:2335  NewTokensTransferred(msg.sender, newTokenAmount) */\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"newburncc.sol\":1122:2342  function burnAndTransfer(uint256 amount) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newburncc.sol\":339:386  StakingContractInterface public stakingContract */\n    tag_25:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":14:311   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":134:136   */\n      0x20\n        /* \"#utility.yul\":122:131   */\n      dup3\n        /* \"#utility.yul\":113:120   */\n      dup5\n        /* \"#utility.yul\":109:132   */\n      sub\n        /* \"#utility.yul\":105:137   */\n      slt\n        /* \"#utility.yul\":102:104   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":155:161   */\n      dup1\n        /* \"#utility.yul\":147:153   */\n      dup2\n        /* \"#utility.yul\":140:162   */\n      revert\n        /* \"#utility.yul\":102:104   */\n    tag_62:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":186:202   */\n      mload\n        /* \"#utility.yul\":245:250   */\n      dup1\n        /* \"#utility.yul\":238:251   */\n      iszero\n        /* \"#utility.yul\":231:252   */\n      iszero\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":221:253   */\n      eq\n        /* \"#utility.yul\":211:213   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":272:278   */\n      dup2\n        /* \"#utility.yul\":264:270   */\n      dup3\n        /* \"#utility.yul\":257:279   */\n      revert\n        /* \"#utility.yul\":211:213   */\n    tag_63:\n        /* \"#utility.yul\":300:305   */\n      swap4\n        /* \"#utility.yul\":92:311   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":316:506   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:398   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":449:455   */\n      dup1\n        /* \"#utility.yul\":441:447   */\n      dup2\n        /* \"#utility.yul\":434:456   */\n      revert\n        /* \"#utility.yul\":396:398   */\n    tag_65:\n      pop\n        /* \"#utility.yul\":477:500   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":386:506   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":511:705   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":634:636   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup3\n        /* \"#utility.yul\":613:620   */\n      dup5\n        /* \"#utility.yul\":609:632   */\n      sub\n        /* \"#utility.yul\":605:637   */\n      slt\n        /* \"#utility.yul\":602:604   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":655:661   */\n      dup1\n        /* \"#utility.yul\":647:653   */\n      dup2\n        /* \"#utility.yul\":640:662   */\n      revert\n        /* \"#utility.yul\":602:604   */\n    tag_67:\n      pop\n        /* \"#utility.yul\":683:699   */\n      mload\n      swap2\n        /* \"#utility.yul\":592:705   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:913   */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":874:906   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":856:907   */\n      dup2\n      mstore\n        /* \"#utility.yul\":844:846   */\n      0x20\n        /* \"#utility.yul\":829:847   */\n      add\n      swap1\n        /* \"#utility.yul\":811:913   */\n      jump\t// out\n        /* \"#utility.yul\":918:1192   */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1110:1142   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1092:1143   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1159:1177   */\n      dup3\n      add\n        /* \"#utility.yul\":1152:1186   */\n      mstore\n        /* \"#utility.yul\":1080:1082   */\n      0x40\n        /* \"#utility.yul\":1065:1083   */\n      add\n      swap1\n        /* \"#utility.yul\":1047:1192   */\n      jump\t// out\n        /* \"#utility.yul\":1669:2022   */\n    tag_31:\n        /* \"#utility.yul\":1871:1873   */\n      0x20\n        /* \"#utility.yul\":1853:1874   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1910:1912   */\n      0x1d\n        /* \"#utility.yul\":1890:1908   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1883:1913   */\n      mstore\n        /* \"#utility.yul\":1949:1980   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":1944:1946   */\n      0x40\n        /* \"#utility.yul\":1929:1947   */\n      dup3\n      add\n        /* \"#utility.yul\":1922:1981   */\n      mstore\n        /* \"#utility.yul\":2013:2015   */\n      0x60\n        /* \"#utility.yul\":1998:2016   */\n      add\n      swap1\n        /* \"#utility.yul\":1843:2022   */\n      jump\t// out\n        /* \"#utility.yul\":2027:2378   */\n    tag_40:\n        /* \"#utility.yul\":2229:2231   */\n      0x20\n        /* \"#utility.yul\":2211:2232   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2268:2270   */\n      0x1b\n        /* \"#utility.yul\":2248:2266   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2241:2271   */\n      mstore\n        /* \"#utility.yul\":2307:2336   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":2302:2304   */\n      0x40\n        /* \"#utility.yul\":2287:2305   */\n      dup3\n      add\n        /* \"#utility.yul\":2280:2337   */\n      mstore\n        /* \"#utility.yul\":2369:2371   */\n      0x60\n        /* \"#utility.yul\":2354:2372   */\n      add\n      swap1\n        /* \"#utility.yul\":2201:2378   */\n      jump\t// out\n        /* \"#utility.yul\":2383:2560   */\n    tag_15:\n        /* \"#utility.yul\":2529:2554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2517:2519   */\n      0x20\n        /* \"#utility.yul\":2502:2520   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2560   */\n      jump\t// out\n        /* \"#utility.yul\":2565:2813   */\n    tag_42:\n        /* \"#utility.yul\":2739:2764   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2795:2797   */\n      0x20\n        /* \"#utility.yul\":2780:2798   */\n      dup3\n      add\n        /* \"#utility.yul\":2773:2807   */\n      mstore\n        /* \"#utility.yul\":2727:2729   */\n      0x40\n        /* \"#utility.yul\":2712:2730   */\n      add\n      swap1\n        /* \"#utility.yul\":2694:2813   */\n      jump\t// out\n        /* \"#utility.yul\":2818:3035   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup3\n        /* \"#utility.yul\":2874:2876   */\n      tag_77\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2909:2940   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2963:2967   */\n      0x12\n        /* \"#utility.yul\":2960:2961   */\n      0x04\n        /* \"#utility.yul\":2953:2968   */\n      mstore\n        /* \"#utility.yul\":2991:2995   */\n      0x24\n        /* \"#utility.yul\":2916:2917   */\n      dup2\n        /* \"#utility.yul\":2981:2996   */\n      revert\n        /* \"#utility.yul\":2874:2876   */\n    tag_77:\n      pop\n        /* \"#utility.yul\":3020:3029   */\n      div\n      swap1\n        /* \"#utility.yul\":2864:3035   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209fc61841980eefa99fa2d87bc7939d6284ef40c7e5cc7a8793371e19836a3a5064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:507:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:4"
															},
															"nodeType": "YulIf",
															"src": "117:2:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:4",
														"type": ""
													}
												],
												"src": "14:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:4"
															},
															"nodeType": "YulIf",
															"src": "306:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:4",
														"type": ""
													}
												],
												"src": "198:307:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e860035534801561001657600080fd5b5060405161060c38038061060c8339810160408190526100359161008f565b600080546001600160a01b039384166001600160a01b03199182168117909255600180548216909217909155600280549290931691161790556100c1565b80516001600160a01b038116811461008a57600080fd5b919050565b600080604083850312156100a1578182fd5b6100aa83610073565b91506100b860208401610073565b90509250929050565b61053c806100d06000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633535f48b1461005c5780637ffdf53e1461007a578063c42bd05a1461008f578063ea48cfb114610097578063ee99205c146100ac575b600080fd5b6100646100b4565b6040516100719190610434565b60405180910390f35b6100826100c3565b60405161007191906104cf565b6100646100c9565b6100aa6100a5366004610404565b6100d8565b005b6100646103ce565b6000546001600160a01b031681565b60035481565b6002546001600160a01b031681565b600081116101015760405162461bcd60e51b81526004016100f890610461565b60405180910390fd5b600154604051636021726760e01b81526000916001600160a01b031690636021726790610132903390600401610434565b60206040518083038186803b15801561014a57600080fd5b505afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610182919061041c565b9050818110156101a45760405162461bcd60e51b81526004016100f890610498565b336001600160a01b03167f5cca6e60d92fa932734614ce13b4c2d8f7307a963c23547e639481c60c52206283836040516101df9291906104d8565b60405180910390a260005460405163a9059cbb60e01b815261dead916001600160a01b03169063a9059cbb9061021b9084908790600401610448565b602060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d91906103dd565b50336001600160a01b03167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6846040516102a791906104cf565b60405180910390a26000600354846102bf91906104e6565b9050336001600160a01b03167f0606a6579f291744b661285f4e15f5b8fcb378a76ab61fa51a7a79b231ea4420826040516102fa91906104cf565b60405180910390a260025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103349033908590600401610448565b602060405180830381600087803b15801561034e57600080fd5b505af1158015610362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038691906103dd565b50336001600160a01b03167f846a89b57591b6b9909fbd88e7cc9666b3f1b91ae9899dbb65170d70d56bdfc5826040516103c091906104cf565b60405180910390a250505050565b6001546001600160a01b031681565b6000602082840312156103ee578081fd5b815180151581146103fd578182fd5b9392505050565b600060208284031215610415578081fd5b5035919050565b60006020828403121561042d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008261050157634e487b7160e01b81526012600452602481fd5b50049056fea26469706673582212209fc61841980eefa99fa2d87bc7939d6284ef40c7e5cc7a8793371e19836a3a5064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x60C CODESIZE SUB DUP1 PUSH2 0x60C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x8F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xC1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xAA DUP4 PUSH2 0x73 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8 PUSH1 0x20 DUP5 ADD PUSH2 0x73 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C DUP1 PUSH2 0xD0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3535F48B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x7FFDF53E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xEA48CFB1 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC9 JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60217267 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x60217267 SWAP1 PUSH2 0x132 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5CCA6E60D92FA932734614CE13B4C2D8F7307A963C23547E639481C60C522062 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP3 SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xDEAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x21B SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x3 SLOAD DUP5 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x606A6579F291744B661285F4E15F5B8FCB378A76AB61FA51A7A79B231EA4420 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x334 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x846A89B57591B6B9909FBD88E7CC9666B3F1B91AE9899DBB65170D70D56BDFC5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3FD JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x415 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x501 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC6 XOR COINBASE SWAP9 0xE 0xEF 0xA9 SWAP16 LOG2 0xD8 PUSH28 0xC7939D6284EF40C7E5CC7A8793371E19836A3A5064736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "268:2076:3:-:0;;;464:4;432:36;;825:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;928:22;:48;;-1:-1:-1;;;;;928:48:3;;;-1:-1:-1;;;;;;928:48:3;;;;;;;;;986:67;;;;;;;;;;1063:8;:46;;;;;;;;;;;268:2076;;14:179:4;95:13;;-1:-1:-1;;;;;137:31:4;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;268:2076:3;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3037:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "92:219:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "138:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "155:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "140:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "140:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "140:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "113:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "122:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "109:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "109:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "134:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "105:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "105:32:4"
															},
															"nodeType": "YulIf",
															"src": "102:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "173:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "186:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "186:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "177:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "264:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "272:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "224:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "245:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "238:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "238:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "231:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "231:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "221:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "221:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "214:40:4"
															},
															"nodeType": "YulIf",
															"src": "211:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "300:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "290:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "58:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "69:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "81:6:4",
														"type": ""
													}
												],
												"src": "14:297:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "386:120:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "441:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "449:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:32:4"
															},
															"nodeType": "YulIf",
															"src": "396:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "467:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "490:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "477:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "363:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:4",
														"type": ""
													}
												],
												"src": "316:190:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "592:113:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "647:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "655:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "640:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "640:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "640:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "613:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "634:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:32:4"
															},
															"nodeType": "YulIf",
															"src": "602:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "673:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "689:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "683:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "673:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "558:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "569:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "581:6:4",
														"type": ""
													}
												],
												"src": "511:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "821:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "833:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "821:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "863:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "878:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "894:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "899:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "890:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "890:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "903:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "886:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "874:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "874:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "856:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "780:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "791:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "802:4:4",
														"type": ""
													}
												],
												"src": "710:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1047:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1057:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1069:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1057:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1114:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1130:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1135:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1126:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1126:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1139:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1122:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1159:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1179:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1008:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1019:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1038:4:4",
														"type": ""
													}
												],
												"src": "918:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1322:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1332:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1340:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1389:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1405:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1410:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1401:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1401:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1414:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1397:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1397:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1385:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1367:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1367:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_NewTokenInterface_$89__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1291:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1313:4:4",
														"type": ""
													}
												],
												"src": "1197:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1584:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1572:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1614:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1645:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1650:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1641:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1641:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1654:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1637:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1637:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1625:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_StakingContractInterface_$118__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1531:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1542:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1553:4:4",
														"type": ""
													}
												],
												"src": "1429:235:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:179:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1871:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1894:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1905:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1890:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1883:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1944:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1929:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1949:31:4",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1922:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1922:59:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1990:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1820:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1834:4:4",
														"type": ""
													}
												],
												"src": "1669:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2201:177:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2218:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2229:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2211:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2252:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2263:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2268:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2291:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2302:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2307:29:4",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:57:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2358:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2346:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2178:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2192:4:4",
														"type": ""
													}
												],
												"src": "2027:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2484:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2494:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2506:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2494:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2536:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2547:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2464:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2475:4:4",
														"type": ""
													}
												],
												"src": "2383:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:119:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2704:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2716:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2727:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2712:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2704:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2746:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2795:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2800:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2655:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2666:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2674:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2685:4:4",
														"type": ""
													}
												],
												"src": "2565:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2864:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "2916:1:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2923:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2928:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2919:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2919:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2909:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2909:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2909:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2960:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2963:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2953:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2953:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2953:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "2988:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2991:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2981:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2884:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:9:4"
															},
															"nodeType": "YulIf",
															"src": "2874:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3024:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3027:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3015:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2849:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2852:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2858:1:4",
														"type": ""
													}
												],
												"src": "2818:217:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_NewTokenInterface_$89__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_StakingContractInterface_$118__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80633535f48b1461005c5780637ffdf53e1461007a578063c42bd05a1461008f578063ea48cfb114610097578063ee99205c146100ac575b600080fd5b6100646100b4565b6040516100719190610434565b60405180910390f35b6100826100c3565b60405161007191906104cf565b6100646100c9565b6100aa6100a5366004610404565b6100d8565b005b6100646103ce565b6000546001600160a01b031681565b60035481565b6002546001600160a01b031681565b600081116101015760405162461bcd60e51b81526004016100f890610461565b60405180910390fd5b600154604051636021726760e01b81526000916001600160a01b031690636021726790610132903390600401610434565b60206040518083038186803b15801561014a57600080fd5b505afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610182919061041c565b9050818110156101a45760405162461bcd60e51b81526004016100f890610498565b336001600160a01b03167f5cca6e60d92fa932734614ce13b4c2d8f7307a963c23547e639481c60c52206283836040516101df9291906104d8565b60405180910390a260005460405163a9059cbb60e01b815261dead916001600160a01b03169063a9059cbb9061021b9084908790600401610448565b602060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d91906103dd565b50336001600160a01b03167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6846040516102a791906104cf565b60405180910390a26000600354846102bf91906104e6565b9050336001600160a01b03167f0606a6579f291744b661285f4e15f5b8fcb378a76ab61fa51a7a79b231ea4420826040516102fa91906104cf565b60405180910390a260025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103349033908590600401610448565b602060405180830381600087803b15801561034e57600080fd5b505af1158015610362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038691906103dd565b50336001600160a01b03167f846a89b57591b6b9909fbd88e7cc9666b3f1b91ae9899dbb65170d70d56bdfc5826040516103c091906104cf565b60405180910390a250505050565b6001546001600160a01b031681565b6000602082840312156103ee578081fd5b815180151581146103fd578182fd5b9392505050565b600060208284031215610415578081fd5b5035919050565b60006020828403121561042d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252601b908201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008261050157634e487b7160e01b81526012600452602481fd5b50049056fea26469706673582212209fc61841980eefa99fa2d87bc7939d6284ef40c7e5cc7a8793371e19836a3a5064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3535F48B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x7FFDF53E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC42BD05A EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xEA48CFB1 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC9 JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x60217267 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x60217267 SWAP1 PUSH2 0x132 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5CCA6E60D92FA932734614CE13B4C2D8F7307A963C23547E639481C60C522062 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP3 SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xDEAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x21B SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x3 SLOAD DUP5 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x606A6579F291744B661285F4E15F5B8FCB378A76AB61FA51A7A79B231EA4420 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x334 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x846A89B57591B6B9909FBD88E7CC9666B3F1B91AE9899DBB65170D70D56BDFC5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3FD JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x415 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x501 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC6 XOR COINBASE SWAP9 0xE 0xEF 0xA9 SWAP16 LOG2 0xD8 PUSH28 0xC7939D6284EF40C7E5CC7A8793371E19836A3A5064736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "268:2076:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;432:36;;;:::i;:::-;;;;;;;:::i;392:33::-;;;:::i;1122:1220::-;;;;;;:::i;:::-;;:::i;:::-;;339:47;;;:::i;296:37::-;;;-1:-1:-1;;;;;296:37:3;;:::o;432:36::-;;;;:::o;392:33::-;;;-1:-1:-1;;;;;392:33:3;;:::o;1122:1220::-;1199:1;1190:6;:10;1182:52;;;;-1:-1:-1;;;1182:52:3;;;;;;;:::i;:::-;;;;;;;;;1269:15;;:41;;-1:-1:-1;;;1269:41:3;;1245:21;;-1:-1:-1;;;;;1269:15:3;;:29;;:41;;1299:10;;1269:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1245:65;;1346:6;1329:13;:23;;1321:63;;;;-1:-1:-1;;;1321:63:3;;;;;;;:::i;:::-;1481:10;-1:-1:-1;;;;;1458:57:3;;1493:6;1501:13;1458:57;;;;;;;:::i;:::-;;;;;;;;1624:19;1705:22;1698:60;;-1:-1:-1;;;1698:60:3;;1646:42;;-1:-1:-1;;;;;1705:22:3;;1698:39;;:60;;1646:42;;1751:6;;1698:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1845:10;-1:-1:-1;;;;;1832:32:3;;1857:6;1832:32;;;;;;:::i;:::-;;;;;;;;1933:22;1967:14;;1958:6;:23;;;;:::i;:::-;1933:48;;2075:10;-1:-1:-1;;;;;2055:47:3;;2087:14;2055:47;;;;;;:::i;:::-;;;;;;;;2156:8;;:45;;-1:-1:-1;;;2156:45:3;;-1:-1:-1;;;;;2156:8:3;;;;:17;;:45;;2174:10;;2186:14;;2156:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2308:10;-1:-1:-1;;;;;2287:48:3;;2320:14;2287:48;;;;;;:::i;:::-;;;;;;;;1122:1220;;;;:::o;339:47::-;;;-1:-1:-1;;;;;339:47:3;;:::o;14:297:4:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:4:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:4;;386:120;-1:-1:-1;386:120:4:o;511:194::-;;634:2;622:9;613:7;609:23;605:32;602:2;;;655:6;647;640:22;602:2;-1:-1:-1;683:16:4;;592:113;-1:-1:-1;592:113:4:o;710:203::-;-1:-1:-1;;;;;874:32:4;;;;856:51;;844:2;829:18;;811:102::o;918:274::-;-1:-1:-1;;;;;1110:32:4;;;;1092:51;;1174:2;1159:18;;1152:34;1080:2;1065:18;;1047:145::o;1669:353::-;1871:2;1853:21;;;1910:2;1890:18;;;1883:30;1949:31;1944:2;1929:18;;1922:59;2013:2;1998:18;;1843:179::o;2027:351::-;2229:2;2211:21;;;2268:2;2248:18;;;2241:30;2307:29;2302:2;2287:18;;2280:57;2369:2;2354:18;;2201:177::o;2383:::-;2529:25;;;2517:2;2502:18;;2484:76::o;2565:248::-;2739:25;;;2795:2;2780:18;;2773:34;2727:2;2712:18;;2694:119::o;2818:217::-;;2884:1;2874:2;;-1:-1:-1;;;2909:31:4;;2963:4;2960:1;2953:15;2991:4;2916:1;2981:15;2874:2;-1:-1:-1;3020:9:4;;2864:171::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burnAndTransfer(uint256)": "infinite",
								"conversionRate()": "1028",
								"newToken()": "1092",
								"stakingContract()": "1136",
								"stakingContractAddress()": "1048"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 464,
									"end": 468,
									"name": "PUSH",
									"source": 3,
									"value": "3E8"
								},
								{
									"begin": 432,
									"end": 468,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 432,
									"end": 468,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 825,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 928,
									"end": 950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 976,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 928,
									"end": 976,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1053,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1071,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1109,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 2344,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fc61841980eefa99fa2d87bc7939d6284ef40c7e5cc7a8793371e19836a3a5064736f6c63430008000033",
									".code": [
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "3535F48B"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "7FFDF53E"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "C42BD05A"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "EA48CFB1"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "EE99205C"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 268,
											"end": 2344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 339,
											"end": 386,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 339,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 333,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 296,
											"end": 333,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 296,
											"end": 333,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 432,
											"end": 468,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 432,
											"end": 468,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 392,
											"end": 425,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 392,
											"end": 425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 425,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1200,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1182,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60217267"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "PUSH",
											"source": 3,
											"value": "60217267"
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1321,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "5CCA6E60D92FA932734614CE13B4C2D8F7307A963C23547E639481C60C522062"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1515,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1727,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 1727,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1855,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1981,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1967,
											"end": 1981,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2085,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "PUSH",
											"source": 3,
											"value": "606A6579F291744B661285F4E15F5B8FCB378A76AB61FA51A7A79B231EA4420"
										},
										{
											"begin": 2087,
											"end": 2101,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2102,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "PUSH",
											"source": 3,
											"value": "846A89B57591B6B9909FBD88E7CC9666B3F1B91AE9899DBB65170D70D56BDFC5"
										},
										{
											"begin": 2320,
											"end": 2334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2335,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 2342,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 339,
											"end": 386,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 386,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 386,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 339,
											"end": 386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 339,
											"end": 386,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 14,
											"end": 311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 122,
											"end": 131,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 113,
											"end": 120,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 109,
											"end": 132,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 105,
											"end": 137,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 102,
											"end": 104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 102,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 155,
											"end": 161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 140,
											"end": 162,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 102,
											"end": 104,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 102,
											"end": 104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 186,
											"end": 202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 251,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 231,
											"end": 252,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 221,
											"end": 253,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 211,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 257,
											"end": 279,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 300,
											"end": 305,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 92,
											"end": 311,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 92,
											"end": 311,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 316,
											"end": 506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 316,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 396,
											"end": 398,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 449,
											"end": 455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 434,
											"end": 456,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 477,
											"end": 500,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 477,
											"end": 500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 386,
											"end": 506,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 511,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 613,
											"end": 620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 609,
											"end": 632,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 605,
											"end": 637,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 602,
											"end": 604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 640,
											"end": 662,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 602,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 602,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 683,
											"end": 699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 683,
											"end": 699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 592,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 913,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 710,
											"end": 913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 874,
											"end": 906,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 856,
											"end": 907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 856,
											"end": 907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 829,
											"end": 847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 913,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 918,
											"end": 1192,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 918,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1186,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1192,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 2022,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1669,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1913,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 2022,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2378,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2270,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2271,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2280,
											"end": 2337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2383,
											"end": 2560,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2383,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2560,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2565,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2730,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2813,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3035,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2818,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 3035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 2940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2940,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2960,
											"end": 2961,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2991,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2916,
											"end": 2917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 2996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3035,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"burnAndTransfer(uint256)": "ea48cfb1",
							"conversionRate()": "7ffdf53e",
							"newToken()": "c42bd05a",
							"stakingContract()": "ee99205c",
							"stakingContractAddress()": "3535f48b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"}],\"name\":\"BurnAndTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTokenAmount\",\"type\":\"uint256\"}],\"name\":\"NewTokenCalculation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTokenAmount\",\"type\":\"uint256\"}],\"name\":\"NewTokensTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"conversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"contract NewTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract StakingContractInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"newburncc.sol\":\"BurnContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x481ee2f6a390cef9b0fc7ff5ed7aed7debf00ac1eebce0cd5c86639fd89f12fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08328515cf72c81c1d97ba74035f7970f2661cdb8dad867d8309957ee34249c9\",\"dweb:/ipfs/QmT9t1M5KYGj6FLLhjbbHffoNJ2RfhjyKZdS9dZ4moAENu\"]},\"NewTokenInterface.sol\":{\"keccak256\":\"0x83151e4a593aa256aeeb4007e75464e10fb689d45e8e4d3c7753063a318bb422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f816d29cd93cce2bde42e2d8409e8bcaa66edfc70c89995a7b813099d0e625\",\"dweb:/ipfs/QmecjkmuVAKMVQ7pSr7Kk3bgAWB24ujTzMtiM3DfKER63N\"]},\"StakingContractInterface.sol\":{\"keccak256\":\"0xf69de83ea3d246fbf778e98dbfbe816e3d74aac2802ea2836a6fa93521cb46b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e853cbd2fac8bded67eeeb6a87291e3f5afe32e4e4e95418c9100a20c9a6e6\",\"dweb:/ipfs/QmY93t1LJegFkTjTyZa15qQsq7fSvvXLHZbsq8jkwHo4SU\"]},\"newburncc.sol\":{\"keccak256\":\"0x7257215ff2363e172d618adccc4816232917ca9ff079c38f2e7362bf4d8f177d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdbe229b4e17c5805b63d22e5298cee4f8346574d54997f0b652dae133107e7\",\"dweb:/ipfs/QmTtQHqdGU8ZcoxEGPJDv1cLqs29bq6MTmJmkR8JBp7xi6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 125,
								"contract": "newburncc.sol:BurnContract",
								"label": "stakingContractAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 128,
								"contract": "newburncc.sol:BurnContract",
								"label": "stakingContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(StakingContractInterface)118"
							},
							{
								"astId": 131,
								"contract": "newburncc.sol:BurnContract",
								"label": "newToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(NewTokenInterface)89"
							},
							{
								"astId": 134,
								"contract": "newburncc.sol:BurnContract",
								"label": "conversionRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(NewTokenInterface)89": {
								"encoding": "inplace",
								"label": "contract NewTokenInterface",
								"numberOfBytes": "20"
							},
							"t_contract(StakingContractInterface)118": {
								"encoding": "inplace",
								"label": "contract StakingContractInterface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "819:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:0"
									},
									"scope": 77,
									"src": "773:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "834:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:9:0"
									},
									"scope": 77,
									"src": "910:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "984:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1220:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1232:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:6:0"
									},
									"scope": 77,
									"src": "1202:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1277:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1580:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:9:0"
									},
									"scope": 77,
									"src": "1546:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1635:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:6:0"
									},
									"scope": 77,
									"src": "2307:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2386:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2724:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2736:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2769:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:0"
									},
									"scope": 77,
									"src": "2688:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2575:0"
						}
					],
					"src": "106:2671:0"
				},
				"id": 0
			},
			"NewTokenInterface.sol": {
				"ast": {
					"absolutePath": "NewTokenInterface.sol",
					"exportedSymbols": {
						"NewTokenInterface": [
							89
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "137:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "NewTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "214:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "226:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:27:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "259:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:6:1"
									},
									"scope": 89,
									"src": "196:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 90,
							"src": "162:162:1"
						}
					],
					"src": "137:188:1"
				},
				"id": 1
			},
			"StakingContractInterface.sol": {
				"ast": {
					"absolutePath": "StakingContractInterface.sol",
					"exportedSymbols": {
						"StakingContractInterface": [
							118
						]
					},
					"id": 119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "142:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "StakingContractInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "60217267",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "231:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:14:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "268:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:9:2"
									},
									"scope": 118,
									"src": "208:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a694fc3a",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "297:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:16:2"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:2"
									},
									"scope": 118,
									"src": "282:40:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "345:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:16:2"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:2"
									},
									"scope": 118,
									"src": "327:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "394:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "413:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:35:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "447:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:6:2"
									},
									"scope": 118,
									"src": "376:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 119,
							"src": "167:288:2"
						}
					],
					"src": "142:314:2"
				},
				"id": 2
			},
			"newburncc.sol": {
				"ast": {
					"absolutePath": "newburncc.sol",
					"exportedSymbols": {
						"BurnContract": [
							264
						],
						"IERC20": [
							77
						],
						"NewTokenInterface": [
							89
						],
						"StakingContractInterface": [
							118
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "StakingContractInterface.sol",
							"file": "./StakingContractInterface.sol",
							"id": 121,
							"nodeType": "ImportDirective",
							"scope": 265,
							"sourceUnit": 119,
							"src": "57:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewTokenInterface.sol",
							"file": "./NewTokenInterface.sol",
							"id": 122,
							"nodeType": "ImportDirective",
							"scope": 265,
							"sourceUnit": 90,
							"src": "139:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 123,
							"nodeType": "ImportDirective",
							"scope": 265,
							"sourceUnit": 78,
							"src": "207:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 264,
							"linearizedBaseContracts": [
								264
							],
							"name": "BurnContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3535f48b",
									"id": 125,
									"mutability": "mutable",
									"name": "stakingContractAddress",
									"nodeType": "VariableDeclaration",
									"scope": 264,
									"src": "296:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "296:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 128,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 264,
									"src": "339:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_StakingContractInterface_$118",
										"typeString": "contract StakingContractInterface"
									},
									"typeName": {
										"id": 127,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 126,
											"name": "StakingContractInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 118,
											"src": "339:24:3"
										},
										"referencedDeclaration": 118,
										"src": "339:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingContractInterface_$118",
											"typeString": "contract StakingContractInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c42bd05a",
									"id": 131,
									"mutability": "mutable",
									"name": "newToken",
									"nodeType": "VariableDeclaration",
									"scope": 264,
									"src": "392:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_NewTokenInterface_$89",
										"typeString": "contract NewTokenInterface"
									},
									"typeName": {
										"id": 130,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 129,
											"name": "NewTokenInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 89,
											"src": "392:17:3"
										},
										"referencedDeclaration": 89,
										"src": "392:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_NewTokenInterface_$89",
											"typeString": "contract NewTokenInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ffdf53e",
									"id": 134,
									"mutability": "mutable",
									"name": "conversionRate",
									"nodeType": "VariableDeclaration",
									"scope": 264,
									"src": "432:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "432:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "464:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 142,
									"name": "BurnAndTransferStarted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "541:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "563:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedBalance",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "579:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:61:3"
									},
									"src": "512:90:3"
								},
								{
									"anonymous": false,
									"id": 148,
									"name": "TokensBurned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "626:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "648:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:38:3"
									},
									"src": "607:57:3"
								},
								{
									"anonymous": false,
									"id": 154,
									"name": "NewTokenCalculation",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "695:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "717:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:46:3"
									},
									"src": "669:72:3"
								},
								{
									"anonymous": false,
									"id": 160,
									"name": "NewTokensTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "773:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "795:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:46:3"
									},
									"src": "746:73:3"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "918:198:3",
										"statements": [
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "stakingContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "928:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 168,
														"name": "_stakingContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "953:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "928:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "928:48:3"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 171,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "986:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingContractInterface_$118",
															"typeString": "contract StakingContractInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 173,
																"name": "_stakingContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "1029:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 172,
															"name": "StakingContractInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1004:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StakingContractInterface_$118_$",
																"typeString": "type(contract StakingContractInterface)"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingContractInterface_$118",
															"typeString": "contract StakingContractInterface"
														}
													},
													"src": "986:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StakingContractInterface_$118",
														"typeString": "contract StakingContractInterface"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "986:67:3"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 177,
														"name": "newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1063:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NewTokenInterface_$89",
															"typeString": "contract NewTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 179,
																"name": "_newTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1092:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 178,
															"name": "NewTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1074:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_NewTokenInterface_$89_$",
																"typeString": "type(contract NewTokenInterface)"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1074:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NewTokenInterface_$89",
															"typeString": "contract NewTokenInterface"
														}
													},
													"src": "1063:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NewTokenInterface_$89",
														"typeString": "contract NewTokenInterface"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1063:46:3"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "_stakingContractAddress",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "846:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "_newTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "887:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:81:3"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:3"
									},
									"scope": 264,
									"src": "825:291:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1172:1170:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1190:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1199:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1190:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1202:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1182:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1182:52:3"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "stakedBalance",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1245:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 200,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1299:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1299:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 198,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1269:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingContractInterface_$118",
																"typeString": "contract StakingContractInterface"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakedBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1269:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1245:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "stakedBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1329:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 206,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1346:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1321:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1321:63:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1481:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1481:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1493:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 215,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1501:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "BurnAndTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1458:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "1453:62:3"
											},
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "burnAddress",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1624:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 218,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1624:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1646:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x000000000000000000000000000000000000dEaD"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1624:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "burnAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1738:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1751:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 223,
																	"name": "stakingContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "1705:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 222,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1698:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1698:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1698:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1698:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1698:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1845:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1857:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 230,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1832:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1832:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "EmitStatement",
												"src": "1827:37:3"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "newTokenAmount",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1933:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1933:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 238,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1958:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 239,
														"name": "conversionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1967:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1958:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1933:48:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2075:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2075:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "newTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2087:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "NewTokenCalculation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2055:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2055:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "EmitStatement",
												"src": "2050:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2174:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2174:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "newTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2186:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 248,
															"name": "newToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2156:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NewTokenInterface_$89",
																"typeString": "contract NewTokenInterface"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "2156:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2156:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2156:45:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2308:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2308:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "newTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2320:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 256,
														"name": "NewTokensTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2287:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "2282:53:3"
											}
										]
									},
									"functionSelector": "ea48cfb1",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnAndTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1147:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:16:3"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:0:3"
									},
									"scope": 264,
									"src": "1122:1220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 265,
							"src": "268:2076:3"
						}
					],
					"src": "32:2313:3"
				},
				"id": 3
			}
		}
	}
}